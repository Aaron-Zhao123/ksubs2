Start of log: tag=kiwife
Orangepath: Executing step 0: 'kiwife' of the following recipe:
Timestamp: (start).   T/S  10/02/2017 17:08:01
  -~~ DO kiwife:kiwife
  -~~ DO repack:repack
  -~~ DO cgen1:cgen1
  -~~ DO report:report
  -~~ DO bevelab:bevelab
  -~~ DO compose:compose
  -~~ DO conerefine1:conerefine
  -~~ DO restructure2:restructure2
  -~~ DO conerefine2:conerefine
  -~~ DO verilog-gen:verilog-gen
  -~~ DO cgen2:cgen2
  -~~ DO diosim:diosim DISABLED (will be skipped)
Args=  /home/djg11/d320/hprls/kiwipro/kiwic/distro/lib/kiwic.exe csharp/primes_offchip.exe -res2-loadstore-port-count=0 -vnl=primes_offchip.v -vnl-rootmodname=primes_offchip csharp/KSubs2_Director.dll -vnl-resets=synchronous -kiwic-finish=disable -vnl-roundtrip=disable -kiwic-register-colours=1 -bevelab-default-pause-mode=bblock -fp-fl-sp-mul=4

Validated(1) 21 args
Report on Orangepath/recipe stage parameter settings: name=kiwife
    kiwic-autodispose=disable
    srcfile=csharp/primes_offchip.exe, csharp/KSubs2_Director.dll
    root=$attributeroot
    overloads-loglevel=20
    firstpass-loglevel=20
    gtrace-loglevel=20
    ataken-loglevel=20
    kiwife-loglevel=20
    postgen-optimise=enable
    kiwic-fpgaconsole-default=enable
    kiwic-zerolength-arrays=disable
    kiwic-dll=Kiwic.dll
    kiwi-dll=Kiwi.dll
    array-2d-name=KIWIARRAY2D
    array-3d-name=KIWIARRAY3D
    array-4d-name=KIWIARRAY4D
    kiwic-register-colours=1
    kiwic-kcode-dump=disable
    kiwic-cil-dump=disable
    kiwic-finish=disable
    cil-uwind-budget=10000
End report on Orangepath/recipe stage parameter settings: name=kiwife (21 items)

    arg binding: kiwic-autodispose= disable
    arg binding: srcfile= csharp/primes_offchip.exe, csharp/KSubs2_Director.dll
    arg binding: root= $attributeroot
    arg binding: overloads-loglevel= 20
    arg binding: firstpass-loglevel= 20
    arg binding: gtrace-loglevel= 20
    arg binding: ataken-loglevel= 20
    arg binding: kiwife-loglevel= 20
    arg binding: postgen-optimise= enable
    arg binding: kiwic-fpgaconsole-default= enable
    arg binding: kiwic-zerolength-arrays= disable
    arg binding: kiwic-dll= Kiwic.dll
    arg binding: kiwi-dll= Kiwi.dll
    arg binding: array-2d-name= KIWIARRAY2D
    arg binding: array-3d-name= KIWIARRAY3D
    arg binding: array-4d-name= KIWIARRAY4D
    arg binding: kiwic-register-colours= 1
    arg binding: kiwic-kcode-dump= disable
    arg binding: kiwic-cil-dump= disable
    arg binding: kiwic-finish= disable
    arg binding: cil-uwind-budget= 10000
Starting opath_do kiwife cmd=kiwife
base_directory = /home/djg11/d320/hprls/kiwipro/kiwic/distro/lib/
base_directory = /home/djg11/d320/hprls/kiwipro/kiwic/distro/lib/
Kiwi Scientific Acceleration (KiwiC .net/CIL/C# to Verilog/SystemC compiler): Version alpha 0.2.18a : 5th-December-2016 Unix 3.13.0.65
10/02/2017 17:08:01

Topname=csharp/primes_offchip
Report on All PE names (.dll + .exe)
   1:  /home/djg11/d320/hprls/kiwipro/kiwic/distro/lib/../support/Kiwi.dll
   2:  /home/djg11/d320/hprls/kiwipro/kiwic/distro/lib/../support/Kiwic.dll
   3:  csharp/KSubs2_Director.dll
   4:  csharp/primes_offchip.exe
End report on All PE names (.dll + .exe) (4 items)

WF:cil_digest: initial scan of CIL classes
cil_digest consider class KiwiSystem/Kiwi method .cctor staticf=true cpred=true
Munich: request static_classes_constructed constructor needed for class=KiwiSystem/Kiwi associated with usercall Cil_cr ".cctor"
WF:cil_digest: initial scan of CIL classes finished
WF:cil_digest: initial scan of CIL classes
cil_digest consider class System/BitConverter method .cctor staticf=true cpred=true
Munich: request static_classes_constructed constructor needed for class=System/BitConverter associated with usercall Cil_cr ".cctor"
WF:cil_digest: initial scan of CIL classes finished
WF:cil_digest: initial scan of CIL classes
cil_digest consider class KSubs2_Director method .cctor staticf=true cpred=true
Munich: request static_classes_constructed constructor needed for class=KSubs2_Director associated with usercall Cil_cr ".cctor"
WF:cil_digest: initial scan of CIL classes finished
WF:cil_digest: initial scan of CIL classes
cil_digest consider class primesya method .cctor staticf=true cpred=true
Munich: request static_classes_constructed constructor needed for class=primesya associated with usercall Cil_cr ".cctor"
WF:cil_digest: initial scan of CIL classes finished
Report on Auxilliary static classes
   static class? primesya done=false
   static class? KSubs2_Director done=false
   static class? System/BitConverter done=false
   static class? KiwiSystem/Kiwi done=false
End report on Auxilliary static classes (4 items)

Opening log file  obj/preambles.log
WF:KiwiC readfun: entry
2 marked with H/W attributes in input files
WF:preload: class_find more System/RuntimeFieldHandle
WF:normed_ast_item_lookup: start System/RuntimeFieldHandle (toks=2)
WF:normed_ast_item_lookup: Knot entered for System/RuntimeFieldHandle (ready for norm000 call)
Norm class normed: no parents for System/RuntimeFieldHandle
WF:norm000: norm item from System/RuntimeFieldHandle
WF:norm000: norm item from System/RuntimeFieldHandle: cil_directory class System/RuntimeFieldHandle with 0 type formals
WF:normed_ast_item_lookup: Knot System/RuntimeFieldHandle tied
Installed normbase System/RuntimeFieldHandle with lr1=1  lr0=1 c=1
WF:normed_ast_item_lookup: Eager generate dtable for System/RuntimeFieldHandle 
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["RuntimeFieldHandle"; "System"]
WF:cil_gen_dtable: start on class Normd_class   System/RuntimeFieldHandle

Record/class instance System.RuntimeFieldHandle made: non-enum.  Size=4 bytes
Opening log file  obj/System_RuntimeFieldHandle.dtable
WF:cil_gen_dtable: finished generating dtable for real_rn=RN_idl ["RuntimeFieldHandle"; "System"] structf=false
WF:normed_ast_item_lookup: finished System/RuntimeFieldHandle
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["RuntimeFieldHandle"; "System"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["RuntimeFieldHandle"; "System"]
WF:preload: class_find more System/Array
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["Array"; "System"]
WF:preload: class_find more System/Object
WF:normed_ast_item_lookup: start System/Object (toks=2)
WF:normed_ast_item_lookup: Knot entered for System/Object (ready for norm000 call)
Norm class normed: no parents for System/Object
WF:norm000: norm item from System/Object
WF:norm000: norm item from System/Object: cil_directory class System/Object with 0 type formals
WF:norm000: norm item from System/Object
WF:norm000: norm item from System/Object: norm method .ctor uid=ctor186
disamname=.ctor
WF:norm000: norm item from System/Object
WF:norm000: norm item from System/Object: norm method ToString uid=ToString12
disamname=ToString
WF:norm000: norm item from System/Object
WF:norm000: norm item from System/Object: norm method Equals uid=Equals76
disamname=Equals/CTL_object
WF:normed_ast_item_lookup: Knot System/Object tied
Installed normbase System/Object with lr1=1  lr0=1 c=1
WF:normed_ast_item_lookup: Eager generate dtable for System/Object 
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["Object"; "System"]
System/Object: Did/could not unclass other "&(CTL_object)"
WF:normed_ast_item_lookup: finished System/Object
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["Object"; "System"]
Please do not even make System.Object object knots!
WF:preload: class_find more System/String
WF:normed_ast_item_lookup: start System/String (toks=2)
WF:normed_ast_item_lookup: Knot entered for System/String (ready for norm000 call)
Norm class normed: no parents for System/String
WF:norm000: norm item from System/String
WF:norm000: norm item from System/String: cil_directory class System/String with 0 type formals
WF:norm000: norm item from System/String
WF:norm000: norm item from System/String: norm method .ctor uid=ctor140
disamname=.ctor
WF:norm000: norm item from System/String
WF:norm000: norm item from System/String: norm method ToCharArray uid=ToCharArray10
disamname=ToCharArray
WF:norm000: norm item from System/String
WF:norm000: norm item from System/String: norm method Concat uid=Concat14
disamname=Concat/CTL_object/CTL_object/CTL_object/CTL_object
WF:norm000: norm item from System/String
WF:norm000: norm item from System/String: norm method Concat uid=Concat12
disamname=Concat/CTL_object/CTL_object/CTL_object
WF:norm000: norm item from System/String
WF:norm000: norm item from System/String: norm method Concat uid=Concat10
disamname=Concat/CTL_object/CTL_object
WF:norm000: norm item from System/String
WF:norm000: norm item from System/String: norm method op_Equality uid=opEquality10
disamname=op_Equality/CTL_object/CTL_object
WF:norm000: norm item from System/String
WF:norm000: norm item from System/String: norm method op_Inequality uid=opInequality10
disamname=op_Inequality/CTL_object/CTL_object
WF:norm000: norm item from System/String
WF:norm000: norm item from System/String: cil_directory class System/String with 0 type formals
WF:norm000: norm item from System/String
WF:norm000: norm item from System/String: norm method get_Length uid=getLength12
disamname=get_Length
WF:norm000: norm item from System/String
WF:norm000: norm item from System/String: norm method get_Chars uid=getChars12
disamname=get_Chars/SINT
WF:norm000: norm item from System/String
WF:norm000: norm item from System/String: norm method Concat uid=Concat22
disamname=Concat/$star1$/@/16/SS
WF:norm000: norm item from System/String
WF:norm000: norm item from System/String: norm method Concat uid=Concat20
disamname=Concat/$star1$/@/16/SS/$star1$/@/16/SS
WF:norm000: norm item from System/String
WF:norm000: norm item from System/String: norm field Empty
Normalised field norm item from System/String: norm field Empty volf=false additional_volf=false length of ats=0 or 0
Now have 12 items in partial class System/String was System/String
WF:normed_ast_item_lookup: Knot System/String tied
Installed normbase System/String with lr1=1  lr0=2 c=1
WF:normed_ast_item_lookup: Eager generate dtable for System/String 
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["String"; "System"]
WF:cil_gen_dtable: start on class Normd_class  public beforefieldinit ansi System/String

dtable_eval ans is &(CT_arr(CTL_net(false, 16, Signed,[native, CHAR]), <unspec>))
other enum manual codepoint at Cil_field_lit (Cil_string "")
Record/class instance System.String made: Size 4 bytes
Opening log file  obj/System_String.dtable
WF:cil_gen_dtable: finished generating dtable for real_rn=RN_idl ["String"; "System"] structf=false
WF:normed_ast_item_lookup: finished System/String
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["String"; "System"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["String"; "System"]
WF:preload: class_find more System/Char
WF:normed_ast_item_lookup: start System/Char (toks=2)
WF:normed_ast_item_lookup: Knot entered for System/Char (ready for norm000 call)
Norm class normed: no parents for System/Char
WF:norm000: norm item from System/Char
WF:norm000: norm item from System/Char: cil_directory struct System/Char with 0 type formals
WF:norm000: norm item from System/Char
WF:norm000: norm item from System/Char: norm method Equals uid=Equals66
disamname=Equals/16/SS
WF:norm000: norm item from System/Char
WF:norm000: norm item from System/Char: norm method CompareTo uid=CompareTo64
disamname=CompareTo/16/SS
WF:normed_ast_item_lookup: Knot System/Char tied
Installed normbase System/Char with lr1=1  lr0=1 c=1
WF:normed_ast_item_lookup: Eager generate dtable for System/Char 
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["Char"; "System"]
WF:cil_gen_dtable: start on struct Normd_struct  valuetype System/Char

Record/class instance System.Char made: non-enum.  Size=4 bytes
Opening log file  obj/System_Char.dtable
WF:cil_gen_dtable: finished generating dtable for real_rn=RN_idl ["Char"; "System"] structf=true
System/Char: Did/could not unclass other "CTL_record(System/Char,...)"
WF:normed_ast_item_lookup: finished System/Char
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["Char"; "System"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["Char"; "System"]
WF:cil_gen_dtable: start on struct Normd_struct  valuetype System/Char

WF:preload: class_find more System/Int32
WF:normed_ast_item_lookup: start System/Int32 (toks=2)
WF:normed_ast_item_lookup: Knot entered for System/Int32 (ready for norm000 call)
Norm class normed: no parents for System/Int32
WF:norm000: norm item from System/Int32
WF:norm000: norm item from System/Int32: cil_directory struct System/Int32 with 0 type formals
WF:norm000: norm item from System/Int32
WF:norm000: norm item from System/Int32: norm method Equals uid=Equals50
disamname=Equals/SINT
WF:norm000: norm item from System/Int32
WF:norm000: norm item from System/Int32: norm method CompareTo uid=CompareTo48
disamname=CompareTo/SINT
WF:normed_ast_item_lookup: Knot System/Int32 tied
Installed normbase System/Int32 with lr1=1  lr0=1 c=1
WF:normed_ast_item_lookup: Eager generate dtable for System/Int32 
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["Int32"; "System"]
WF:cil_gen_dtable: start on struct Normd_struct  valuetype System/Int32

Record/class instance System.Int32 made: non-enum.  Size=4 bytes
Opening log file  obj/System_Int32.dtable
WF:cil_gen_dtable: finished generating dtable for real_rn=RN_idl ["Int32"; "System"] structf=true
System/Int32: Did/could not unclass other "CTL_record(System/Int32,...)"
WF:normed_ast_item_lookup: finished System/Int32
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["Int32"; "System"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["Int32"; "System"]
WF:cil_gen_dtable: start on struct Normd_struct  valuetype System/Int32

WF:preload: class_find more System/UInt32
WF:normed_ast_item_lookup: start System/UInt32 (toks=2)
WF:normed_ast_item_lookup: Knot entered for System/UInt32 (ready for norm000 call)
Norm class normed: no parents for System/UInt32
WF:norm000: norm item from System/UInt32
WF:norm000: norm item from System/UInt32: cil_directory struct System/UInt32 with 0 type formals
WF:norm000: norm item from System/UInt32
WF:norm000: norm item from System/UInt32: norm method Equals uid=Equals60
disamname=Equals/UINT
WF:norm000: norm item from System/UInt32
WF:norm000: norm item from System/UInt32: norm method CompareTo uid=CompareTo58
disamname=CompareTo/UINT
WF:normed_ast_item_lookup: Knot System/UInt32 tied
Installed normbase System/UInt32 with lr1=1  lr0=1 c=1
WF:normed_ast_item_lookup: Eager generate dtable for System/UInt32 
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["UInt32"; "System"]
WF:cil_gen_dtable: start on struct Normd_struct  valuetype System/UInt32

Record/class instance System.UInt32 made: non-enum.  Size=4 bytes
Opening log file  obj/System_UInt32.dtable
WF:cil_gen_dtable: finished generating dtable for real_rn=RN_idl ["UInt32"; "System"] structf=true
System/UInt32: Did/could not unclass other "CTL_record(System/UInt32,...)"
WF:normed_ast_item_lookup: finished System/UInt32
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["UInt32"; "System"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["UInt32"; "System"]
WF:cil_gen_dtable: start on struct Normd_struct  valuetype System/UInt32

Preload complete
WF:auxiliary_static_cctors: start on KiwiSystem/Kiwi
Munich: Auxiliary static classes constructed aux KiwiSystem/Kiwi donef=false
WF:normed_ast_item_lookup: start KiwiSystem/Kiwi/.cctor (toks=3)
WF:normed_ast_item_lookup: Knot entered for KiwiSystem/Kiwi/.cctor (ready for norm000 call)
parent idl=KiwiSystem.Kiwi for KiwiSystem.Kiwi..cctor
WF:normed_ast_item_lookup: start KiwiSystem/Kiwi (toks=2)
WF:normed_ast_item_lookup: Knot entered for KiwiSystem/Kiwi (ready for norm000 call)
Norm class normed: no parents for KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .cctor uid=cctor10
disamname=.cctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor10
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method inHardware uid=inHardware10
disamname=inHardware
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method Dispose uid=Dispose10
disamname=Dispose/CTL_object
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method wuntil uid=wuntil10
disamname=wuntil/BOOL/BOOL
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method until uid=until10
disamname=until/BOOL/BOOL
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method next uid=next14
disamname=next/SINT
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method next uid=next12
disamname=next/BOOL
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method next uid=next10
disamname=next/CTL_object
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method hpr_next uid=hprnext10
disamname=hpr_next/CTL_object
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method KppMark uid=KppMark12
disamname=KppMark/$star1$/@/16/SS/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method KppMark uid=KppMark10
disamname=KppMark/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method from_double uid=fromdouble10
disamname=from_double/FPD
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method to_double uid=todouble10
disamname=to_double/64/US
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method NeverReached uid=NeverReached10
disamname=NeverReached/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method EndOfElaborate uid=EndOfElaborate10
disamname=EndOfElaborate
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method NoUnroll uid=NoUnroll10
disamname=NoUnroll
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method Unroll uid=Unroll18
disamname=Unroll/SINT/SINT/SINT
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method Unroll uid=Unroll16
disamname=Unroll/SINT/SINT/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method Unroll uid=Unroll14
disamname=Unroll/SINT/SINT
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method Unroll uid=Unroll12
disamname=Unroll/SINT/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method Unroll uid=Unroll10
disamname=Unroll/SINT
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method Pause uid=Pause12
disamname=Pause
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method Pause uid=Pause10
disamname=Pause/SINT
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method PauseControlSet uid=PauseControlSet10
WF:normed_ast_item_lookup: start KiwiSystem/Kiwi/PauseControl (toks=3)
WF:normed_ast_item_lookup: Knot entered for KiwiSystem/Kiwi/PauseControl (ready for norm000 call)
Norm class normed: no parents for KiwiSystem/Kiwi/PauseControl
WF:norm000: norm item from KiwiSystem/Kiwi/PauseControl
WF:norm000: norm item from KiwiSystem/Kiwi/PauseControl: cil_directory struct KiwiSystem/Kiwi/PauseControl with 0 type formals
WF:normed_ast_item_lookup: start System/Enum (toks=2)
WF:normed_ast_item_lookup: Knot entered for System/Enum (ready for norm000 call)
Norm class normed: no parents for System/Enum
WF:norm000: norm item from System/Enum
WF:norm000: norm item from System/Enum: cil_directory class System/Enum with 0 type formals
WF:normed_ast_item_lookup: Knot System/Enum tied
Installed normbase System/Enum with lr1=1  lr0=1 c=1
WF:normed_ast_item_lookup: Eager generate dtable for System/Enum 
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["Enum"; "System"]
WF:cil_gen_dtable: start on class Normd_class   System/Enum

Record/class instance System.Enum made: non-enum.  Size=4 bytes
Opening log file  obj/System_Enum.dtable
WF:cil_gen_dtable: finished generating dtable for real_rn=RN_idl ["Enum"; "System"] structf=false
WF:normed_ast_item_lookup: finished System/Enum
WF:norm000: norm item from KiwiSystem/Kiwi/PauseControl
WF:norm000: norm item from KiwiSystem/Kiwi/PauseControl: norm field pipelinedAccelerator
Normalised field norm item from KiwiSystem/Kiwi/PauseControl: norm field pipelinedAccelerator volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi/PauseControl
WF:norm000: norm item from KiwiSystem/Kiwi/PauseControl: norm field bblockPauseEnable
Normalised field norm item from KiwiSystem/Kiwi/PauseControl: norm field bblockPauseEnable volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi/PauseControl
WF:norm000: norm item from KiwiSystem/Kiwi/PauseControl: norm field maximalPauseEnable
Normalised field norm item from KiwiSystem/Kiwi/PauseControl: norm field maximalPauseEnable volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi/PauseControl
WF:norm000: norm item from KiwiSystem/Kiwi/PauseControl: norm field softPauseEnable
Normalised field norm item from KiwiSystem/Kiwi/PauseControl: norm field softPauseEnable volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi/PauseControl
WF:norm000: norm item from KiwiSystem/Kiwi/PauseControl: norm field hardPauseEnable
Normalised field norm item from KiwiSystem/Kiwi/PauseControl: norm field hardPauseEnable volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi/PauseControl
WF:norm000: norm item from KiwiSystem/Kiwi/PauseControl: norm field autoPauseEnable
Normalised field norm item from KiwiSystem/Kiwi/PauseControl: norm field autoPauseEnable volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi/PauseControl
WF:norm000: norm item from KiwiSystem/Kiwi/PauseControl: norm field value__
Normalised field norm item from KiwiSystem/Kiwi/PauseControl: norm field value__ volf=false additional_volf=false length of ats=0 or 0
WF:normed_ast_item_lookup: Knot KiwiSystem/Kiwi/PauseControl tied
Installed normbase KiwiSystem/Kiwi/PauseControl with lr1=1  lr0=1 c=1
WF:normed_ast_item_lookup: Eager generate dtable for KiwiSystem/Kiwi/PauseControl 
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["PauseControl"; "Kiwi"; "KiwiSystem"]
WF:cil_gen_dtable: start on struct Normd_struct  nested public ansi valuetype enum sealed KiwiSystem/Kiwi/PauseControl extends CT_cr(System/Enum, <<NONE>>)

WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["Enum"; "System"]
dtable_eval ans is CTL_net(false, 32, Signed,[native])
WF:gen_dtable: gen_dtable of field: Normd_field rtspecialname specialname public CTL_net(false, 32, Signed,[native]) value__ ATTS=(<NONE>) ids='value__'  vt=true is_array=false volf=false
Typenorm classref KiwiSystem/Kiwi/PauseControl requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["PauseControl"; "Kiwi"; "KiwiSystem"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["PauseControl"; "Kiwi"; "KiwiSystem"]
WF:cil_gen_dtable: start on struct Normd_struct  nested public ansi valuetype enum sealed KiwiSystem/Kiwi/PauseControl extends CT_cr(System/Enum, <<NONE>>)

dtable_eval ans is valuetype:CT_knot(KiwiSystem/Kiwi/PauseControl, KL1709, <untied>)
Typenorm classref KiwiSystem/Kiwi/PauseControl requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["PauseControl"; "Kiwi"; "KiwiSystem"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["PauseControl"; "Kiwi"; "KiwiSystem"]
WF:cil_gen_dtable: start on struct Normd_struct  nested public ansi valuetype enum sealed KiwiSystem/Kiwi/PauseControl extends CT_cr(System/Enum, <<NONE>>)

dtable_eval ans is valuetype:CT_knot(KiwiSystem/Kiwi/PauseControl, KL1709, <untied>)
Typenorm classref KiwiSystem/Kiwi/PauseControl requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["PauseControl"; "Kiwi"; "KiwiSystem"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["PauseControl"; "Kiwi"; "KiwiSystem"]
WF:cil_gen_dtable: start on struct Normd_struct  nested public ansi valuetype enum sealed KiwiSystem/Kiwi/PauseControl extends CT_cr(System/Enum, <<NONE>>)

dtable_eval ans is valuetype:CT_knot(KiwiSystem/Kiwi/PauseControl, KL1709, <untied>)
Typenorm classref KiwiSystem/Kiwi/PauseControl requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["PauseControl"; "Kiwi"; "KiwiSystem"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["PauseControl"; "Kiwi"; "KiwiSystem"]
WF:cil_gen_dtable: start on struct Normd_struct  nested public ansi valuetype enum sealed KiwiSystem/Kiwi/PauseControl extends CT_cr(System/Enum, <<NONE>>)

dtable_eval ans is valuetype:CT_knot(KiwiSystem/Kiwi/PauseControl, KL1709, <untied>)
Typenorm classref KiwiSystem/Kiwi/PauseControl requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["PauseControl"; "Kiwi"; "KiwiSystem"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["PauseControl"; "Kiwi"; "KiwiSystem"]
WF:cil_gen_dtable: start on struct Normd_struct  nested public ansi valuetype enum sealed KiwiSystem/Kiwi/PauseControl extends CT_cr(System/Enum, <<NONE>>)

dtable_eval ans is valuetype:CT_knot(KiwiSystem/Kiwi/PauseControl, KL1709, <untied>)
Typenorm classref KiwiSystem/Kiwi/PauseControl requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["PauseControl"; "Kiwi"; "KiwiSystem"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["PauseControl"; "Kiwi"; "KiwiSystem"]
WF:cil_gen_dtable: start on struct Normd_struct  nested public ansi valuetype enum sealed KiwiSystem/Kiwi/PauseControl extends CT_cr(System/Enum, <<NONE>>)

dtable_eval ans is valuetype:CT_knot(KiwiSystem/Kiwi/PauseControl, KL1709, <untied>)
KiwiSystem/Kiwi/PauseControlflags for this enum list were [Cilflag_nested; Cilflag_public; Cilflag_ansi; Cilflag_valuetype; Cilflag_enum;
 Cilflag_sealed]
   KiwiSystem/Kiwi/PauseControl enum member 6 autoPauseEnable   manual_codepoint=0L
   KiwiSystem/Kiwi/PauseControl enum member 6 hardPauseEnable   manual_codepoint=1L
   KiwiSystem/Kiwi/PauseControl enum member 6 softPauseEnable   manual_codepoint=2L
   KiwiSystem/Kiwi/PauseControl enum member 6 maximalPauseEnable   manual_codepoint=3L
   KiwiSystem/Kiwi/PauseControl enum member 6 bblockPauseEnable   manual_codepoint=4L
   KiwiSystem/Kiwi/PauseControl enum member 6 pipelinedAccelerator   manual_codepoint=5L
Created enum type CTL_net(false, 3, Unsigned,[enum ...(Some "KiwiSystem/Kiwi/PauseControl",
 [(0L, "autoPauseEnable", "KiwiSystem/Kiwi/PauseControl");
  (1L, "hardPauseEnable", "KiwiSystem/Kiwi/PauseControl");
  (2L, "softPauseEnable", "KiwiSystem/Kiwi/PauseControl");
  (3L, "maximalPauseEnable", "KiwiSystem/Kiwi/PauseControl");
  (4L, "bblockPauseEnable", "KiwiSystem/Kiwi/PauseControl");
  (5L, "pipelinedAccelerator", "KiwiSystem/Kiwi/PauseControl")])]): KiwiSystem/Kiwi/PauseControl:  arity 6 entries,  maxvalue=5, field bitwidth=3.
Opening log file  obj/KiwiSystem_Kiwi_PauseControl.dtable
WF:cil_gen_dtable: finished generating dtable for real_rn=RN_idl ["PauseControl"; "Kiwi"; "KiwiSystem"] structf=true
KiwiSystem/Kiwi/PauseControl: Did/could not unclass other "CTL_net(false, 3, Unsigned,[enum ...(Some "KiwiSystem/Kiwi/PauseControl",
 [(0L, "autoPauseEnable", "KiwiSystem/Kiwi/PauseControl");
  (1L, "hardPauseEnable", "KiwiSystem/Kiwi/PauseControl");
  (2L, "softPauseEnable", "KiwiSystem/Kiwi/PauseControl");
  (3L, "maximalPauseEnable", "KiwiSystem/Kiwi/PauseControl");
  (4L, "bblockPauseEnable", "KiwiSystem/Kiwi/PauseControl");
  (5L, "pipelinedAccelerator", "KiwiSystem/Kiwi/PauseControl")])])"
WF:normed_ast_item_lookup: finished KiwiSystem/Kiwi/PauseControl
disamname=PauseControlSet/KiwiSystem/Kiwi/PauseControl
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method KPragma uid=KPragma14
disamname=KPragma/SINT/SINT/$star1$/@/16/SS/BOOL
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method KPragma uid=KPragma12
disamname=KPragma/SINT/$star1$/@/16/SS/BOOL
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method KPragma uid=KPragma10
disamname=KPragma/$star1$/@/16/SS/BOOL
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method WriteLine uid=WriteLine18
disamname=WriteLine/CTL_object/CTL_object/CTL_object/CTL_object/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method WriteLine uid=WriteLine16
disamname=WriteLine/CTL_object/CTL_object/CTL_object/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method WriteLine uid=WriteLine14
disamname=WriteLine/CTL_object/CTL_object/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method WriteLine uid=WriteLine12
disamname=WriteLine/CTL_object/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method WriteLine uid=WriteLine10
disamname=WriteLine/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field tnow
Normalised field norm item from KiwiSystem/Kiwi: norm field tnow volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field old_pausemode_value
Normalised field norm item from KiwiSystem/Kiwi: norm field old_pausemode_value volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:normed_ast_item_lookup: start System/Attribute (toks=2)
WF:normed_ast_item_lookup: Knot entered for System/Attribute (ready for norm000 call)
Norm class normed: no parents for System/Attribute
WF:norm000: norm item from System/Attribute
WF:norm000: norm item from System/Attribute: cil_directory class System/Attribute with 0 type formals
WF:normed_ast_item_lookup: Knot System/Attribute tied
Installed normbase System/Attribute with lr1=1  lr0=1 c=1
WF:normed_ast_item_lookup: Eager generate dtable for System/Attribute 
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["Attribute"; "System"]
WF:cil_gen_dtable: start on class Normd_class   System/Attribute

Record/class instance System.Attribute made: non-enum.  Size=4 bytes
Opening log file  obj/System_Attribute.dtable
WF:cil_gen_dtable: finished generating dtable for real_rn=RN_idl ["Attribute"; "System"] structf=false
WF:normed_ast_item_lookup: finished System/Attribute
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor12
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory struct KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field pipelinedAccelerator
Normalised field norm item from KiwiSystem/Kiwi: norm field pipelinedAccelerator volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field bblockPauseEnable
Normalised field norm item from KiwiSystem/Kiwi: norm field bblockPauseEnable volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field maximalPauseEnable
Normalised field norm item from KiwiSystem/Kiwi: norm field maximalPauseEnable volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field softPauseEnable
Normalised field norm item from KiwiSystem/Kiwi: norm field softPauseEnable volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field hardPauseEnable
Normalised field norm item from KiwiSystem/Kiwi: norm field hardPauseEnable volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field autoPauseEnable
Normalised field norm item from KiwiSystem/Kiwi: norm field autoPauseEnable volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field value__
Normalised field norm item from KiwiSystem/Kiwi: norm field value__ volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor14
disamname=.ctor/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field name
Normalised field norm item from KiwiSystem/Kiwi: norm field name volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor18
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor16
disamname=.ctor/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field name
Normalised field norm item from KiwiSystem/Kiwi: norm field name volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor22
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor20
disamname=.ctor/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field name
Normalised field norm item from KiwiSystem/Kiwi: norm field name volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor24
disamname=.ctor/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field name
Normalised field norm item from KiwiSystem/Kiwi: norm field name volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor26
disamname=.ctor/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field name
Normalised field norm item from KiwiSystem/Kiwi: norm field name volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor28
disamname=.ctor/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field name
Normalised field norm item from KiwiSystem/Kiwi: norm field name volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor30
disamname=.ctor/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field name
Normalised field norm item from KiwiSystem/Kiwi: norm field name volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor36
disamname=.ctor/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor34
disamname=.ctor/SINT/SINT
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor32
disamname=.ctor/$star1$/@/16/SS/SINT/SINT
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field hiIndex
Normalised field norm item from KiwiSystem/Kiwi: norm field hiIndex volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field loIndex
Normalised field norm item from KiwiSystem/Kiwi: norm field loIndex volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field name
Normalised field norm item from KiwiSystem/Kiwi: norm field name volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor42
disamname=.ctor/$star1$/@/16/SS/SINT/SINT
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor40
disamname=.ctor/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor38
disamname=.ctor/SINT/SINT
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field hiIndex
Normalised field norm item from KiwiSystem/Kiwi: norm field hiIndex volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field loIndex
Normalised field norm item from KiwiSystem/Kiwi: norm field loIndex volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field name
Normalised field norm item from KiwiSystem/Kiwi: norm field name volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor44
disamname=.ctor/SINT
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor46
disamname=.ctor/SINT
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor48
disamname=.ctor/SINT
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor50
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor52
disamname=.ctor/SINT
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor54
disamname=.ctor/SINT
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor58
disamname=.ctor/SINT
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor56
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor64
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor62
disamname=.ctor/SINT/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor60
disamname=.ctor/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor66
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor72
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor70
disamname=.ctor/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor68
disamname=.ctor/$star1$/@/16/SS/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor78
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor76
disamname=.ctor/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor74
disamname=.ctor/$star1$/@/16/SS/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor84
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor82
disamname=.ctor/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor80
disamname=.ctor/$star1$/@/16/SS/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor90
disamname=.ctor/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor88
disamname=.ctor/KiwiSystem/Kiwi/PauseControl
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor86
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field name
Normalised field norm item from KiwiSystem/Kiwi: norm field name volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor94
disamname=.ctor/$star1$/@/16/SS/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor92
disamname=.ctor/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field name
Normalised field norm item from KiwiSystem/Kiwi: norm field name volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor96
disamname=.ctor/$star1$/@/16/SS/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor98
disamname=.ctor/SINT
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor100
disamname=.ctor/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor102
disamname=.ctor/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field name
Normalised field norm item from KiwiSystem/Kiwi: norm field name volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor104
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor106
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor108
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor110
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor112
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor114
disamname=.ctor/$star1$/@/16/SS/$star1$/@/16/SS
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field name
Normalised field norm item from KiwiSystem/Kiwi: norm field name volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 1 type formals
  norm000 bind template black/white T to !T
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor116
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method Read uid=Read10
disamname=Read
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method Write uid=Write10
disamname=Write/T
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field emptyflag
<NONE>
Normalised field norm item from KiwiSystem/Kiwi: norm field emptyflag volf=true additional_volf=false length of ats=1 or 1
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm field datum
<NONE>
Normalised field norm item from KiwiSystem/Kiwi: norm field datum volf=false additional_volf=false length of ats=1 or 1
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 0 type formals
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor118
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: cil_directory class KiwiSystem/Kiwi with 1 type formals
  norm000 bind template black/white T to !T
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method .ctor uid=ctor120
disamname=.ctor
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method handleArith uid=handleArith10
disamname=handleArith/SINT/CTL_object
WF:norm000: norm item from KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi: norm method size uid=size10
disamname=size
WF:normed_ast_item_lookup: Knot KiwiSystem/Kiwi tied
Installed normbase KiwiSystem/Kiwi with lr1=1  lr0=1 c=1
WF:normed_ast_item_lookup: Eager generate dtable for KiwiSystem/Kiwi 
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["Kiwi"; "KiwiSystem"]
WF:cil_gen_dtable: start on class Normd_class  public beforefieldinit ansi KiwiSystem/Kiwi

Typenorm classref KiwiSystem/Kiwi/PauseControl requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["PauseControl"; "Kiwi"; "KiwiSystem"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["PauseControl"; "Kiwi"; "KiwiSystem"]
WF:cil_gen_dtable: start on struct Normd_struct  nested public ansi valuetype enum sealed KiwiSystem/Kiwi/PauseControl extends CT_cr(System/Enum, <<NONE>>)

dtable_eval ans is valuetype:CTL_net(false, 3, Unsigned,[enum ...(Some "KiwiSystem/Kiwi/PauseControl",
 [(0L, "autoPauseEnable", "KiwiSystem/Kiwi/PauseControl");
  (1L, "hardPauseEnable", "KiwiSystem/Kiwi/PauseControl");
  (2L, "softPauseEnable", "KiwiSystem/Kiwi/PauseControl");
  (3L, "maximalPauseEnable", "KiwiSystem/Kiwi/PauseControl");
  (4L, "bblockPauseEnable", "KiwiSystem/Kiwi/PauseControl");
  (5L, "pipelinedAccelerator", "KiwiSystem/Kiwi/PauseControl")])])
WF:gen_dtable: gen_dtable of field: Normd_field static private valuetype:CT_cr(KiwiSystem/Kiwi/PauseControl, <<NONE>>) old_pausemode_value ATTS=(<NONE>) ids='old_pausemode_value'  vt=true is_array=false volf=false
dtable_eval ans is CTL_net(false, 64, Unsigned,[native])
WF:gen_dtable: gen_dtable of field: Normd_field static public CTL_net(false, 64, Unsigned,[native]) tnow ATTS=(<NONE>) ids='tnow'  vt=true is_array=false volf=false
Record/class instance KiwiSystem.Kiwi made: non-enum.  Size=13 bytes
Opening log file  obj/KiwiSystem_Kiwi.dtable
WF:cil_gen_dtable: finished generating dtable for real_rn=RN_idl ["Kiwi"; "KiwiSystem"] structf=false
WF:normed_ast_item_lookup: finished KiwiSystem/Kiwi
WF:norm000: norm item from KiwiSystem/Kiwi/.cctor
WF:norm000: norm item from KiwiSystem/Kiwi/.cctor: norm method .cctor uid=cctor10
disamname=.cctor
WF:normed_ast_item_lookup: Knot KiwiSystem/Kiwi/.cctor tied
Installed normbase KiwiSystem/Kiwi/.cctor with lr1=1  lr0=1 c=1
No eager dtable gen for KiwiSystem/Kiwi/.cctor
enumf=false No eager dtable make for Method:KiwiSystem/Kiwi/.cctor
WF:normed_ast_item_lookup: finished KiwiSystem/Kiwi/.cctor
ct2idl CT_cr(KiwiSystem/Kiwi, <<NONE>>) ans= KiwiSystem/Kiwi
aid was not yet inserted in ataken base: aid=ktop10 0 heapspace=false
nonataken oracle: ktop10 d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-phy nemtok=ktop10  vuid=PHYS {name = ["ktop10"];
      dtidl = ["Kiwi"; "KiwiSystem"];
      baser = -1000L;
      length = null;}
compile9 root dt=CT_cr(KiwiSystem/Kiwi, <<NONE>>)
WF:KiwiC: front end input processing of class or method called KiwiSystem/Kiwi: start
WF:root_walk start thread at a static method (used as an entry point). Method name=.cctor uid=cctor10: root_walk start thread at a static method (used as an entry point). Method name=.cctor uid=cctor10
WF:TSTART tree_walk specificf: .cctor this=Var(ktop10%KiwiSystem/Kiwi%-1000%None, CT_cr(KiwiSystem/Kiwi, <<NONE>>), ..., {constant=true}): START COMPILE OF THREAD/EP. tailhang=false specificf=S_kickoff_collate
WF:KiwiC start_thread (or entry point) id=cctor10: Commence
Env at start of thread T400  KES:$memmap/staticbrk --> =CEE live CEE_int(4000) 
Env at start of thread T400  KES:$memmap/heapbrk --> =CEE live CEE_heapspace(400000,^0=<NONE>,inuse=<NONE>, discreps=<NONE>) 
etarget =etarget10 retlab=T400retpoint_
WF:main KiwiC pass of .cctor uid=cctor10: Commence
WF:generate_kcoder: start iteration 0
typecheck: Inserted 0 method arguments
WF:First pass of KiwiSystem/T400/.cctor/T400/.cctor/cctor10: Commence
code_setup: keep_return=true, tailhangf=false

code_setup: sequence of 113 instructions

Report on Dest labs used: none exist.
WF:First pass of KiwiSystem/T400/.cctor/T400/.cctor/cctor10: Firstpass spills done. Typecheck start.
First pass structure made for KiwiSystem/T400/.cctor/T400/.cctor/cctor10 of length 1 with 7 CIL instructions
pc=0: Making 0 spills
Made spills
reachable basic block pcvalues 0
WF:elab_block: KiwiSystem/T400/.cctor/T400/.cctor/cctor10--typecheck--------------------- pc=0
Drop stsfld callstring=KiwiSystem/T400/.cctor/CZ:0:2 dt=CT_cr(KiwiSystem/Kiwi, <<NONE>>) idl=old_pausemode_value
WF:normed_ast_item_lookup: start KiwiSystem/Kiwi/old_pausemode_value (toks=3)
WF:normed_ast_item_lookup: Knot entered for KiwiSystem/Kiwi/old_pausemode_value (ready for norm000 call)
Norm class normed: no parents for KiwiSystem/Kiwi/old_pausemode_value
WF:norm000: norm item from KiwiSystem/Kiwi/old_pausemode_value
WF:norm000: norm item from KiwiSystem/Kiwi/old_pausemode_value: norm field old_pausemode_value
Normalised field norm item from KiwiSystem/Kiwi/old_pausemode_value: norm field old_pausemode_value volf=false additional_volf=false length of ats=0 or 0
WF:normed_ast_item_lookup: Knot KiwiSystem/Kiwi/old_pausemode_value tied
Installed normbase KiwiSystem/Kiwi/old_pausemode_value with lr1=1  lr0=1 c=1
No eager dtable gen for KiwiSystem/Kiwi/old_pausemode_value
enumf=false No eager dtable make for valuetype:CT_cr(KiwiSystem/Kiwi/PauseControl, <<NONE>>)
WF:normed_ast_item_lookup: finished KiwiSystem/Kiwi/old_pausemode_value
on_demand static_locate sheap_id=KiwiSystem/Kiwi/old_pausemode_value : 1 suitable items found for on_demand static field definition.
WF:field_def: : on_demand static_locate sheap_id=KiwiSystem/Kiwi/old_pausemode_value
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=KiwiSystem/Kiwi/old_pausemode_value bytes=0 bytes at 30000.  ce=CE_x(num 30000)
ct2idl valuetype:CT_cr(KiwiSystem/Kiwi/PauseControl, <<NONE>>) ans= KiwiSystem/Kiwi/PauseControl
static_field_def: normed type is valuetype:CT_cr(KiwiSystem/Kiwi/PauseControl, <<NONE>>) for KiwiSystem/Kiwi/old_pausemode_value%KiwiSystem/Kiwi/PauseControl%30000%None
I/O designation for KiwiSystem/Kiwi/old_pausemode_value%KiwiSystem/Kiwi/PauseControl%30000%None is LOCAL
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=KiwiSystem/Kiwi/old_pausemode_value bytes=4 bytes at 30000.  ce=CE_x(num 30000)
ct2idl valuetype:CT_cr(KiwiSystem/Kiwi/PauseControl, <<NONE>>) ans= KiwiSystem/Kiwi/PauseControl
aid was not yet inserted in ataken base: aid=KiwiSystem/Kiwi/old_pausemode_value 0 heapspace=false
nonataken oracle: KiwiSystem/Kiwi/old_pausemode_value d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-phy nemtok=KiwiSystem/Kiwi/old_pausemode_value  vuid=PHYS {name = ["KiwiSystem/Kiwi/old_pausemode_value"];
      dtidl = ["PauseControl"; "Kiwi"; "KiwiSystem"];
      baser = -1000L;
      length = null;}


Drop stsfld callstring=KiwiSystem/T400/.cctor/CZ:0:5 dt=CT_cr(KiwiSystem/Kiwi, <<NONE>>) idl=tnow
WF:normed_ast_item_lookup: start KiwiSystem/Kiwi/tnow (toks=3)
WF:normed_ast_item_lookup: Knot entered for KiwiSystem/Kiwi/tnow (ready for norm000 call)
Norm class normed: no parents for KiwiSystem/Kiwi/tnow
WF:norm000: norm item from KiwiSystem/Kiwi/tnow
WF:norm000: norm item from KiwiSystem/Kiwi/tnow: norm field tnow
Normalised field norm item from KiwiSystem/Kiwi/tnow: norm field tnow volf=false additional_volf=false length of ats=0 or 0
WF:normed_ast_item_lookup: Knot KiwiSystem/Kiwi/tnow tied
Installed normbase KiwiSystem/Kiwi/tnow with lr1=1  lr0=1 c=1
No eager dtable gen for KiwiSystem/Kiwi/tnow
WF:normed_ast_item_lookup: finished KiwiSystem/Kiwi/tnow
on_demand static_locate sheap_id=KiwiSystem/Kiwi/tnow : 1 suitable items found for on_demand static field definition.
WF:field_def: : on_demand static_locate sheap_id=KiwiSystem/Kiwi/tnow
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=KiwiSystem/Kiwi/tnow bytes=0 bytes at 30008.  ce=CE_x(num 30008)
ct2idl CTL_net(false, 64, Unsigned,[native]) ans= 64/US
static_field_def: normed type is CTL_net(false, 64, Unsigned,[native]) for KiwiSystem/Kiwi/tnow%64/US%30008%None
I/O designation for KiwiSystem/Kiwi/tnow%64/US%30008%None is LOCAL
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=KiwiSystem/Kiwi/tnow bytes=8 bytes at 30008.  ce=CE_x(num 30008)
ct2idl CTL_net(false, 64, Unsigned,[native]) ans= 64/US
aid was not yet inserted in ataken base: aid=KiwiSystem/Kiwi/tnow 0 heapspace=false
nonataken oracle: KiwiSystem/Kiwi/tnow d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-phy nemtok=KiwiSystem/Kiwi/tnow  vuid=PHYS {name = ["KiwiSystem/Kiwi/tnow"];
      dtidl = ["US"; "64"];
      baser = -1000L;
      length = null;}


WF:First pass of KiwiSystem/T400/.cctor/T400/.cctor/cctor10: Firstpass and typecheck done.
 Concourse reachable is 0
 Exit states are 0
WF:First pass of KiwiSystem/T400/.cctor/T400/.cctor/cctor10: End of first pass
WF:rehydrate droppings for : start .cctor
Typenorm classref KiwiSystem/Kiwi requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["Kiwi"; "KiwiSystem"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["Kiwi"; "KiwiSystem"]
Typenorm classref KiwiSystem/Kiwi requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["Kiwi"; "KiwiSystem"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["Kiwi"; "KiwiSystem"]
WF:rehydrate droppings for : done .cctor
gtrace: Inserted 0 method arguments
WF:elab_block: KiwiSystem/T400/.cctor/T400/.cctor/cctor10--gtrace--------------------- pc=0
named reg existed sheap Var(KiwiSystem/Kiwi/old_pausemode_value%KiwiSystem/Kiwi/PauseControl%-1000%None, valuetype:CT_cr(KiwiSystem/Kiwi/PauseControl, <<NONE>>), ..., )
named reg existed sheap Var(KiwiSystem/Kiwi/tnow%64/US%-1000%None, CTL_net(false, 64, Unsigned,[native]), ..., )
Return instruction: retlab=true tailhang=false
cctor10: rsteps at end 9993
Ataken scan complete. 2 items.
T400: Elab5 divide_into_basic_blocks: Exit block is 0-2-F
Thread .cctor uid=cctor10 has 3 CIL instructions in 1 basic blocks
Report on Transitions for T400
  0   0-2-F  --> <NONE>
End report on Transitions for T400 (1 items)

WF:dfa: T400: Live variable analysis of 3 points start.
WF:dfa: T400: Gen and Kill sets computed.
WF:dfa: T400: Live variable analysis of 3 points completed in 0 iterations.
WF:dfa: done
Start of aux report kiwife virtual to physical register colouring/mapping for thread T400
: Linear scan colouring done for 0 vregs using 0 pregs
End of aux report kiwife virtual to physical register colouring/mapping for thread T400
WF:kcode5_static_elaborate of tid=T400 no_basic_blocks=1: commence
kcode5_static_elaborate of tid=T400 no_basic_blocks=1: Start generate lasso stem static elaborate
WF:kcode5_static_elaborate of tid=T400 no_basic_blocks=1: Block start. PCT400:0 region=(100))
kcode5_static_elaborate of tid=T400 no_basic_blocks=1: Log visit to 0 at age=0
QX9: gt_step:KER_lasso_stem:/home/djg11/d320/hprls/kiwipro/kiwic/distro/lib/../support/Kiwi.dll:>>0000:
>>0000:100::SrcStack=
 --- ThreadStart_cctor10
 kcode0000:   sassign KiwiSystem/Kiwi/old_pausemode_value := CE_x(num 2)
K_as_sassign:  lhs=Var(KiwiSystem/Kiwi/old_pausemode_value%KiwiSystem/Kiwi/PauseControl%-1000%None, valuetype:CT_cr(KiwiSystem/Kiwi/PauseControl, <<NONE>>), ..., )
     sassign rhs=CE_x(num 2)

Netgen: Wt for Var(KiwiSystem/Kiwi/old_pausemode_value%KiwiSystem/Kiwi/PauseControl%-1000%None, valuetype:CT_cr(KiwiSystem/Kiwi/PauseControl, <<NONE>>), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=KiwiSystem/Kiwi/old_pausemode_value is_string=false
 NETGEN WOND/OBJ io=LOCAL
lnetgen: netgen dt=valuetype:CT_cr(KiwiSystem/Kiwi/PauseControl, <<NONE>>), use_integer=false, dims=<NONE>
netgen ans=KiwiSystem/Kiwi/old_pausemode_value[31:0]:LOCAL::Unsigned{init=0}
evolve_scalar: nona: tag=KES:KiwiSystem/Kiwi/old_pausemode_value := CE_x(bnumU U32'2)
hpr emit at 1:KiwiSystem/Kiwi/old_pausemode_value := U32'2;



QX9: gt_step:KER_lasso_stem:threadstart//T400/.cctor kcode0001:   sassign KiwiSystem/Kiwi/tnow := CE_x(bnumS S64'0)
K_as_sassign:  lhs=Var(KiwiSystem/Kiwi/tnow%64/US%-1000%None, CTL_net(false, 64, Unsigned,[native]), ..., )
     sassign rhs=CE_x(bnumS S64'0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 64, Unsigned,[native])
Netgen: Wt for Var(KiwiSystem/Kiwi/tnow%64/US%-1000%None, CTL_net(false, 64, Unsigned,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=KiwiSystem/Kiwi/tnow is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 64, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=KiwiSystem/Kiwi/tnow[63:0]:LOCAL::Unsigned{init=0}
evolve_scalar: nona: tag=KES:KiwiSystem/Kiwi/tnow := CE_x(bnumU U64'0)
hpr emit at 2:KiwiSystem/Kiwi/tnow := U64'0;



QX9: gt_step:KER_lasso_stem:threadstart//T400/.cctor kcode0002: K_topret(NONE)
hpr emit at 3:Xreturn 0;


kcode5_static_elaborate of tid=T400 no_basic_blocks=1: New region encountered: age=0
kcode5_static_elaborate of tid=T400 no_basic_blocks=1: Finished generating static elaborate trajectory
kcode5_static_elaborate of tid=T400 no_basic_blocks=1: Most advanced basic block start was 0 (total no blocks=1)
emit remark: End of static elaboration for tid T400. After all generate loops are unwound we arrive here: 0
WF:KiwiC-stages: End of static elaboration for tid T400. After all generate loops are unwound we arrive here: 0
WF:constant_fold_meets tid=T400 entry_point=0: start
Reverse post-order ordering for constant fold is 0
WF:constant_fold_meets tid=T400 entry_point=0: constant_fold: start iterate over basic blocks
T400: Constant_fold meet iteration 0
QX9: gt_step:KER_constant_meet:/home/djg11/d320/hprls/kiwipro/kiwic/distro/lib/../support/Kiwi.dll:<no codepoint>callstring__=constant_fold_meets tid=T400 entry_point=0:SrcStack=
 --- ThreadStart_cctor10
 kcode0000:   sassign KiwiSystem/Kiwi/old_pausemode_value := CE_x(num 2)
K_as_sassign:  lhs=Var(KiwiSystem/Kiwi/old_pausemode_value%KiwiSystem/Kiwi/PauseControl%-1000%None, valuetype:CT_cr(KiwiSystem/Kiwi/PauseControl, <<NONE>>), ..., )
     sassign rhs=CE_x(num 2)

Netgen: Wt for Var(KiwiSystem/Kiwi/old_pausemode_value%KiwiSystem/Kiwi/PauseControl%-1000%None, valuetype:CT_cr(KiwiSystem/Kiwi/PauseControl, <<NONE>>), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=KiwiSystem/Kiwi/old_pausemode_value is_string=false
 NETGEN WOND/OBJ io=LOCAL
lnetgen: netgen dt=valuetype:CT_cr(KiwiSystem/Kiwi/PauseControl, <<NONE>>), use_integer=false, dims=<NONE>
netgen ans=KiwiSystem/Kiwi/old_pausemode_value[31:0]:LOCAL::Unsigned{init=0}
evolve_scalar: nona: tag=KES:KiwiSystem/Kiwi/old_pausemode_value := CE_x(bnumU U32'2)
QX9: gt_step:KER_constant_meet:threadstart//T400/.cctor kcode0001:   sassign KiwiSystem/Kiwi/tnow := CE_x(bnumS S64'0)
K_as_sassign:  lhs=Var(KiwiSystem/Kiwi/tnow%64/US%-1000%None, CTL_net(false, 64, Unsigned,[native]), ..., )
     sassign rhs=CE_x(bnumS S64'0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 64, Unsigned,[native])
Netgen: Wt for Var(KiwiSystem/Kiwi/tnow%64/US%-1000%None, CTL_net(false, 64, Unsigned,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=KiwiSystem/Kiwi/tnow is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 64, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=KiwiSystem/Kiwi/tnow[63:0]:LOCAL::Unsigned{init=0}
evolve_scalar: nona: tag=KES:KiwiSystem/Kiwi/tnow := CE_x(bnumU U64'0)
QX9: gt_step:KER_constant_meet:threadstart//T400/.cctor kcode0002: K_topret(NONE)
marking a diff (degenerate case) on 0
Constant Meet: 0-2-F-nA=0:0: Change to constants out
T400: Constant_fold meet iteration 1
Constant Meet: 0-2-F-nA=0:0 No change to constants in
WF:constant_fold_meets tid=T400 entry_point=0: constant_fold: finished iterate over basic blocks
WF:KiwiC-stages: tid=T400: End of constant folding
Ataken scan complete. 2 items.
Rendering basic block 0/1   0-2-F
WF:elab5_render T400: commence
WF:elab5_render T400: elab5_render T400: Block start. PCT400:0
emit at 2: label T400_0
elab5_render T400Start generate traj 0 .. 2
QX9: gt_step:KER_code_generation:/home/djg11/d320/hprls/kiwipro/kiwic/distro/lib/../support/Kiwi.dll:<no codepoint>callstring__=elab5_render T400: Block start. PCT400:0:SrcStack=
 --- ThreadStart_cctor10
 kcode0000:   sassign KiwiSystem/Kiwi/old_pausemode_value := CE_x(num 2)
K_as_sassign:  lhs=Var(KiwiSystem/Kiwi/old_pausemode_value%KiwiSystem/Kiwi/PauseControl%-1000%None, valuetype:CT_cr(KiwiSystem/Kiwi/PauseControl, <<NONE>>), ..., )
     sassign rhs=CE_x(num 2)

Netgen: Wt for Var(KiwiSystem/Kiwi/old_pausemode_value%KiwiSystem/Kiwi/PauseControl%-1000%None, valuetype:CT_cr(KiwiSystem/Kiwi/PauseControl, <<NONE>>), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=KiwiSystem/Kiwi/old_pausemode_value is_string=false
 NETGEN WOND/OBJ io=LOCAL
lnetgen: netgen dt=valuetype:CT_cr(KiwiSystem/Kiwi/PauseControl, <<NONE>>), use_integer=false, dims=<NONE>
netgen ans=KiwiSystem/Kiwi/old_pausemode_value[31:0]:LOCAL::Unsigned{init=0}
evolve_scalar: nona: tag=KES:KiwiSystem/Kiwi/old_pausemode_value := CE_x(bnumU U32'2)
hpr emit at 4:KiwiSystem/Kiwi/old_pausemode_value := U32'2;



QX9: gt_step:KER_code_generation:threadstart//T400/.cctor kcode0001:   sassign KiwiSystem/Kiwi/tnow := CE_x(bnumS S64'0)
K_as_sassign:  lhs=Var(KiwiSystem/Kiwi/tnow%64/US%-1000%None, CTL_net(false, 64, Unsigned,[native]), ..., )
     sassign rhs=CE_x(bnumS S64'0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 64, Unsigned,[native])
Netgen: Wt for Var(KiwiSystem/Kiwi/tnow%64/US%-1000%None, CTL_net(false, 64, Unsigned,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=KiwiSystem/Kiwi/tnow is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 64, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=KiwiSystem/Kiwi/tnow[63:0]:LOCAL::Unsigned{init=0}
evolve_scalar: nona: tag=KES:KiwiSystem/Kiwi/tnow := CE_x(bnumU U64'0)
hpr emit at 5:KiwiSystem/Kiwi/tnow := U64'0;



QX9: gt_step:KER_code_generation:threadstart//T400/.cctor kcode0002: K_topret(NONE)
hpr emit at 6:Xreturn 0;


elab5_render T400ran off end
hpr top/tail emit: 7:Xreturn 1;


hpr emit at 7:Xreturn 1;


hpr top/tail emit: 8:// End of DIC comment 1



hpr emit at 8:// End of DIC comment 1



WF:Assemble VM: KiwiSystem_T400_.cctor: start
WF:reassemble_dic: start
WF:reassemble_dic: Reassembled 9 dic locations
redirect optimise 0/9
WF:Assemble VM: KiwiSystem_T400_.cctor: finished 9 instructions. gc=
WF:main pass of thread used for .cctor: ending
WF:optimise_dic .cctor uid=cctor10: starting anal
WF:optimise_dic .cctor uid=cctor10: done anal
WF:optimise_dic .cctor uid=cctor10: starting kill (commenting out) of spare lines
WF:optimise_dic .cctor uid=cctor10: done kill of spare lines
WF:TSTART tree_walk specificf: .cctor this=Var(ktop10%KiwiSystem/Kiwi%-1000%None, CT_cr(KiwiSystem/Kiwi, <<NONE>>), ..., {constant=true}): FINISHED COMPILE OF THREAD/EP
rip_exec_code : constructor block count=1, others=0
Jump to end at 6
Jump to end at 7
Root method elaborated: specificf=S_kickoff_collate leftover=1+0
WF:KiwiC: Created VM2 machine : cctor18end
WF:root_walk start thread at a static method (used as an entry point). Method name=.cctor uid=cctor10: root e/p end
WF:KiwiC: front end input processing of class or method called KiwiSystem/Kiwi: done






WF:auxiliary_static_cctors: start on System/BitConverter
Munich: Auxiliary static classes constructed aux System/BitConverter donef=false
WF:normed_ast_item_lookup: start System/BitConverter/.cctor (toks=3)
WF:normed_ast_item_lookup: Knot entered for System/BitConverter/.cctor (ready for norm000 call)
parent idl=System.BitConverter for System.BitConverter..cctor
WF:normed_ast_item_lookup: start System/BitConverter (toks=2)
WF:normed_ast_item_lookup: Knot entered for System/BitConverter (ready for norm000 call)
Norm class normed: no parents for System/BitConverter
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: cil_directory class System/BitConverter with 0 type formals
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method .cctor uid=cctor12
disamname=.cctor
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method .ctor uid=ctor124
disamname=.ctor
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method ToDouble uid=ToDouble10
disamname=ToDouble/SINT/$star1$/@/8/US
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method ToSingle uid=ToSingle10
disamname=ToSingle/SINT/$star1$/@/8/US
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method GetBytes uid=GetBytes28
disamname=GetBytes/FPD
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method GetBytes uid=GetBytes26
disamname=GetBytes/FPS
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method GetBytes uid=GetBytes24
disamname=GetBytes/BOOL
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method ToBoolean uid=ToBoolean10
disamname=ToBoolean/SINT/$star1$/@/8/US
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method GetBytes uid=GetBytes22
disamname=GetBytes/16/SS
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method ToChar uid=ToChar10
disamname=ToChar/SINT/$star1$/@/8/US
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method GetBytes uid=GetBytes20
disamname=GetBytes/16/US
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method ToUInt16 uid=ToUInt1610
disamname=ToUInt16/SINT/$star1$/@/8/US
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method GetBytes uid=GetBytes18
disamname=GetBytes/UINT
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method ToUInt32 uid=ToUInt3210
disamname=ToUInt32/SINT/$star1$/@/8/US
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method GetBytes uid=GetBytes16
disamname=GetBytes/64/US
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method ToUInt64 uid=ToUInt6410
disamname=ToUInt64/SINT/$star1$/@/8/US
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method GetBytes uid=GetBytes14
disamname=GetBytes/16/SS
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method ToInt16 uid=ToInt1610
disamname=ToInt16/SINT/$star1$/@/8/US
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method GetBytes uid=GetBytes12
disamname=GetBytes/SINT
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method ToInt32 uid=ToInt3210
disamname=ToInt32/SINT/$star1$/@/8/US
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method GetBytes uid=GetBytes10
disamname=GetBytes/64/SS
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm method ToInt64 uid=ToInt6410
disamname=ToInt64/SINT/$star1$/@/8/US
WF:norm000: norm item from System/BitConverter
WF:norm000: norm item from System/BitConverter: norm field IsLittleEndian
Normalised field norm item from System/BitConverter: norm field IsLittleEndian volf=false additional_volf=false length of ats=0 or 0
WF:normed_ast_item_lookup: Knot System/BitConverter tied
Installed normbase System/BitConverter with lr1=1  lr0=1 c=1
WF:normed_ast_item_lookup: Eager generate dtable for System/BitConverter 
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["BitConverter"; "System"]
WF:cil_gen_dtable: start on class Normd_class  public beforefieldinit ansi System/BitConverter

dtable_eval ans is CTL_net(false, 1, Unsigned,[native])
WF:gen_dtable: gen_dtable of field: Normd_field initonly static public CTL_net(false, 1, Unsigned,[native]) IsLittleEndian ATTS=(<NONE>) ids='IsLittleEndian'  vt=true is_array=false volf=false
Record/class instance System.BitConverter made: non-enum.  Size=5 bytes
Opening log file  obj/System_BitConverter.dtable
WF:cil_gen_dtable: finished generating dtable for real_rn=RN_idl ["BitConverter"; "System"] structf=false
WF:normed_ast_item_lookup: finished System/BitConverter
WF:norm000: norm item from System/BitConverter/.cctor
WF:norm000: norm item from System/BitConverter/.cctor: norm method .cctor uid=cctor12
disamname=.cctor
WF:normed_ast_item_lookup: Knot System/BitConverter/.cctor tied
Installed normbase System/BitConverter/.cctor with lr1=1  lr0=1 c=1
No eager dtable gen for System/BitConverter/.cctor
enumf=false No eager dtable make for Method:System/BitConverter/.cctor
WF:normed_ast_item_lookup: finished System/BitConverter/.cctor
ct2idl CT_cr(System/BitConverter, <<NONE>>) ans= System/BitConverter
aid was not yet inserted in ataken base: aid=ktop12 0 heapspace=false
nonataken oracle: ktop12 d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-phy nemtok=ktop12  vuid=PHYS {name = ["ktop12"];
      dtidl = ["BitConverter"; "System"];
      baser = -1000L;
      length = null;}
compile9 root dt=CT_cr(System/BitConverter, <<NONE>>)
WF:KiwiC: front end input processing of class or method called System/BitConverter: start
WF:root_walk start thread at a static method (used as an entry point). Method name=.cctor uid=cctor12: root_walk start thread at a static method (used as an entry point). Method name=.cctor uid=cctor12
WF:TSTART tree_walk specificf: .cctor this=Var(ktop12%System/BitConverter%-1000%None, CT_cr(System/BitConverter, <<NONE>>), ..., {constant=true}): START COMPILE OF THREAD/EP. tailhang=false specificf=S_kickoff_collate
WF:KiwiC start_thread (or entry point) id=cctor12: Commence
Env at start of thread T401  KES:KiwiSystem/Kiwi/old_pausemode_value --> =CEE_scalar(CE_x(bnumU U32'2)) 
Env at start of thread T401  KES:KiwiSystem/Kiwi/tnow --> =CEE_scalar(CE_x(bnumU U64'0)) 
Env at start of thread T401  KES:$memmap/heapbrk --> =CEE live CEE_heapspace(400000,^0=<NONE>,inuse=<NONE>, discreps=<NONE>) 
Env at start of thread T401  KES:$memmap/staticbrk --> =CEE live CEE_int(4000) 
etarget =etarget12 retlab=T401retpoint_
WF:main KiwiC pass of .cctor uid=cctor12: Commence
WF:generate_kcoder: start iteration 0
typecheck: Inserted 0 method arguments
WF:First pass of System/T401/.cctor/T401/.cctor/cctor12: Commence
code_setup: keep_return=true, tailhangf=false

code_setup: sequence of 107 instructions

Report on Dest labs used: none exist.
WF:First pass of System/T401/.cctor/T401/.cctor/cctor12: Firstpass spills done. Typecheck start.
First pass structure made for System/T401/.cctor/T401/.cctor/cctor12 of length 1 with 4 CIL instructions
pc=0: Making 0 spills
Made spills
reachable basic block pcvalues 0
WF:elab_block: System/T401/.cctor/T401/.cctor/cctor12--typecheck--------------------- pc=0
Drop stsfld callstring=System/T401/.cctor/CZ:0:2 dt=CT_cr(System/BitConverter, <<NONE>>) idl=IsLittleEndian
WF:normed_ast_item_lookup: start System/BitConverter/IsLittleEndian (toks=3)
WF:normed_ast_item_lookup: Knot entered for System/BitConverter/IsLittleEndian (ready for norm000 call)
Norm class normed: no parents for System/BitConverter/IsLittleEndian
WF:norm000: norm item from System/BitConverter/IsLittleEndian
WF:norm000: norm item from System/BitConverter/IsLittleEndian: norm field IsLittleEndian
Normalised field norm item from System/BitConverter/IsLittleEndian: norm field IsLittleEndian volf=false additional_volf=false length of ats=0 or 0
WF:normed_ast_item_lookup: Knot System/BitConverter/IsLittleEndian tied
Installed normbase System/BitConverter/IsLittleEndian with lr1=1  lr0=1 c=1
No eager dtable gen for System/BitConverter/IsLittleEndian
WF:normed_ast_item_lookup: finished System/BitConverter/IsLittleEndian
on_demand static_locate sheap_id=System/BitConverter/IsLittleEndian : 1 suitable items found for on_demand static field definition.
WF:field_def: : on_demand static_locate sheap_id=System/BitConverter/IsLittleEndian
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=System/BitConverter/IsLittleEndian bytes=0 bytes at 30016.  ce=CE_x(num 30016)
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
static_field_def: normed type is CTL_net(false, 1, Unsigned,[native]) for System/BitConverter/IsLittleEndian%BOOL%30016%None
I/O designation for System/BitConverter/IsLittleEndian%BOOL%30016%None is LOCAL
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=System/BitConverter/IsLittleEndian bytes=1 bytes at 30016.  ce=CE_x(num 30016)
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
aid was not yet inserted in ataken base: aid=System/BitConverter/IsLittleEndian 0 heapspace=false
nonataken oracle: System/BitConverter/IsLittleEndian d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-phy nemtok=System/BitConverter/IsLittleEndian  vuid=PHYS {name = ["System/BitConverter/IsLittleEndian"];
      dtidl = ["BOOL"];
      baser = -1000L;
      length = null;}


WF:First pass of System/T401/.cctor/T401/.cctor/cctor12: Firstpass and typecheck done.
 Concourse reachable is 0
 Exit states are 0
WF:First pass of System/T401/.cctor/T401/.cctor/cctor12: End of first pass
WF:rehydrate droppings for : start .cctor
Typenorm classref System/BitConverter requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["BitConverter"; "System"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["BitConverter"; "System"]
WF:rehydrate droppings for : done .cctor
gtrace: Inserted 0 method arguments
WF:elab_block: System/T401/.cctor/T401/.cctor/cctor12--gtrace--------------------- pc=0
named reg existed sheap Var(System/BitConverter/IsLittleEndian%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., )
Return instruction: retlab=true tailhang=false
cctor12: rsteps at end 9996
Ataken scan complete. 1 items.
T401: Elab5 divide_into_basic_blocks: Exit block is 0-1-F
Thread .cctor uid=cctor12 has 2 CIL instructions in 1 basic blocks
Report on Transitions for T401
  0   0-1-F  --> <NONE>
End report on Transitions for T401 (1 items)

WF:dfa: T401: Live variable analysis of 2 points start.
WF:dfa: T401: Gen and Kill sets computed.
WF:dfa: T401: Live variable analysis of 2 points completed in 0 iterations.
WF:dfa: done
Start of aux report kiwife virtual to physical register colouring/mapping for thread T401
: Linear scan colouring done for 0 vregs using 0 pregs
End of aux report kiwife virtual to physical register colouring/mapping for thread T401
WF:kcode5_static_elaborate of tid=T401 no_basic_blocks=1: commence
kcode5_static_elaborate of tid=T401 no_basic_blocks=1: Start generate lasso stem static elaborate
WF:kcode5_static_elaborate of tid=T401 no_basic_blocks=1: Block start. PCT401:0 region=(100))
kcode5_static_elaborate of tid=T401 no_basic_blocks=1: Log visit to 0 at age=0
QX9: gt_step:KER_lasso_stem:/home/djg11/d320/hprls/kiwipro/kiwic/distro/lib/../support/Kiwic.dll:>>0000:
>>0000:100::SrcStack=
 --- ThreadStart_cctor12
 kcode0000:   sassign System/BitConverter/IsLittleEndian := CE_x(num 1)
K_as_sassign:  lhs=Var(System/BitConverter/IsLittleEndian%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., )
     sassign rhs=CE_x(num 1)

Netgen: Wt for Var(System/BitConverter/IsLittleEndian%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=System/BitConverter/IsLittleEndian is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 1, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=System/BitConverter/IsLittleEndian:LOCAL::Unsigned{init=0}
evolve_scalar: nona: tag=KES:System/BitConverter/IsLittleEndian := CE_x(bnumU U1'1)
hpr emit at 1:System/BitConverter/IsLittleEndian := U1'1;



QX9: gt_step:KER_lasso_stem:threadstart//T401/.cctor kcode0001: K_topret(NONE)
hpr emit at 2:Xreturn 0;


kcode5_static_elaborate of tid=T401 no_basic_blocks=1: New region encountered: age=0
kcode5_static_elaborate of tid=T401 no_basic_blocks=1: Finished generating static elaborate trajectory
kcode5_static_elaborate of tid=T401 no_basic_blocks=1: Most advanced basic block start was 0 (total no blocks=1)
emit remark: End of static elaboration for tid T401. After all generate loops are unwound we arrive here: 0
WF:KiwiC-stages: End of static elaboration for tid T401. After all generate loops are unwound we arrive here: 0
WF:constant_fold_meets tid=T401 entry_point=0: start
Reverse post-order ordering for constant fold is 0
WF:constant_fold_meets tid=T401 entry_point=0: constant_fold: start iterate over basic blocks
T401: Constant_fold meet iteration 0
QX9: gt_step:KER_constant_meet:/home/djg11/d320/hprls/kiwipro/kiwic/distro/lib/../support/Kiwic.dll:<no codepoint>callstring__=constant_fold_meets tid=T401 entry_point=0:SrcStack=
 --- ThreadStart_cctor12
 kcode0000:   sassign System/BitConverter/IsLittleEndian := CE_x(num 1)
K_as_sassign:  lhs=Var(System/BitConverter/IsLittleEndian%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., )
     sassign rhs=CE_x(num 1)

Netgen: Wt for Var(System/BitConverter/IsLittleEndian%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=System/BitConverter/IsLittleEndian is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 1, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=System/BitConverter/IsLittleEndian:LOCAL::Unsigned{init=0}
evolve_scalar: nona: tag=KES:System/BitConverter/IsLittleEndian := CE_x(bnumU U1'1)
QX9: gt_step:KER_constant_meet:threadstart//T401/.cctor kcode0001: K_topret(NONE)
marking a diff (degenerate case) on 0
Constant Meet: 0-1-F-nA=0:0: Change to constants out
T401: Constant_fold meet iteration 1
Constant Meet: 0-1-F-nA=0:0 No change to constants in
WF:constant_fold_meets tid=T401 entry_point=0: constant_fold: finished iterate over basic blocks
WF:KiwiC-stages: tid=T401: End of constant folding
Ataken scan complete. 1 items.
Rendering basic block 0/1   0-1-F
WF:elab5_render T401: commence
WF:elab5_render T401: elab5_render T401: Block start. PCT401:0
emit at 2: label T401_0
elab5_render T401Start generate traj 0 .. 1
QX9: gt_step:KER_code_generation:/home/djg11/d320/hprls/kiwipro/kiwic/distro/lib/../support/Kiwic.dll:<no codepoint>callstring__=elab5_render T401: Block start. PCT401:0:SrcStack=
 --- ThreadStart_cctor12
 kcode0000:   sassign System/BitConverter/IsLittleEndian := CE_x(num 1)
K_as_sassign:  lhs=Var(System/BitConverter/IsLittleEndian%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., )
     sassign rhs=CE_x(num 1)

Netgen: Wt for Var(System/BitConverter/IsLittleEndian%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=System/BitConverter/IsLittleEndian is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 1, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=System/BitConverter/IsLittleEndian:LOCAL::Unsigned{init=0}
evolve_scalar: nona: tag=KES:System/BitConverter/IsLittleEndian := CE_x(bnumU U1'1)
hpr emit at 4:System/BitConverter/IsLittleEndian := U1'1;



QX9: gt_step:KER_code_generation:threadstart//T401/.cctor kcode0001: K_topret(NONE)
hpr emit at 5:Xreturn 0;


elab5_render T401ran off end
hpr top/tail emit: 6:Xreturn 1;


hpr emit at 6:Xreturn 1;


hpr top/tail emit: 7:// End of DIC comment 1



hpr emit at 7:// End of DIC comment 1



WF:Assemble VM: System_T401_.cctor: start
WF:reassemble_dic: start
WF:reassemble_dic: Reassembled 8 dic locations
redirect optimise 0/8
WF:Assemble VM: System_T401_.cctor: finished 8 instructions. gc=
WF:main pass of thread used for .cctor: ending
WF:optimise_dic .cctor uid=cctor12: starting anal
WF:optimise_dic .cctor uid=cctor12: done anal
WF:optimise_dic .cctor uid=cctor12: starting kill (commenting out) of spare lines
WF:optimise_dic .cctor uid=cctor12: done kill of spare lines
WF:TSTART tree_walk specificf: .cctor this=Var(ktop12%System/BitConverter%-1000%None, CT_cr(System/BitConverter, <<NONE>>), ..., {constant=true}): FINISHED COMPILE OF THREAD/EP
rip_exec_code : constructor block count=1, others=0
Jump to end at 5
Jump to end at 6
Root method elaborated: specificf=S_kickoff_collate leftover=1+1
WF:KiwiC: Created VM2 machine : cctor20end
WF:root_walk start thread at a static method (used as an entry point). Method name=.cctor uid=cctor12: root e/p end
WF:KiwiC: front end input processing of class or method called System/BitConverter: done






WF:auxiliary_static_cctors: start on KSubs2_Director
Munich: Auxiliary static classes constructed aux KSubs2_Director donef=false
WF:normed_ast_item_lookup: start KSubs2_Director/.cctor (toks=2)
WF:normed_ast_item_lookup: Knot entered for KSubs2_Director/.cctor (ready for norm000 call)
parent idl=KSubs2_Director for KSubs2_Director..cctor
WF:normed_ast_item_lookup: start KSubs2_Director (toks=1)
WF:normed_ast_item_lookup: Knot entered for KSubs2_Director (ready for norm000 call)
Norm class normed: no parents for KSubs2_Director
WF:norm000: norm item from KSubs2_Director
WF:norm000: norm item from KSubs2_Director: cil_directory class KSubs2_Director with 0 type formals
WF:norm000: norm item from KSubs2_Director
WF:norm000: norm item from KSubs2_Director: norm method .cctor uid=cctor14
disamname=.cctor
WF:norm000: norm item from KSubs2_Director
WF:norm000: norm item from KSubs2_Director: norm method .ctor uid=ctor148
disamname=.ctor
WF:norm000: norm item from KSubs2_Director
WF:norm000: norm item from KSubs2_Director: norm method host_pio_process uid=hostpioprocess10
disamname=host_pio_process
WF:norm000: norm item from KSubs2_Director
WF:norm000: norm item from KSubs2_Director: norm field pio_space
Normalised field norm item from KSubs2_Director: norm field pio_space volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KSubs2_Director
WF:norm000: norm item from KSubs2_Director: norm field pio_size
Normalised field norm item from KSubs2_Director: norm field pio_size volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from KSubs2_Director
WF:norm000: norm item from KSubs2_Director: norm field pio_hwen
Attribute argument marshal:InputBitPortAttribute: : "pio_hwen"
Normalised field norm item from KSubs2_Director: norm field pio_hwen volf=false additional_volf=false length of ats=1 or 1
WF:norm000: norm item from KSubs2_Director
WF:norm000: norm item from KSubs2_Director: norm field pio_rdata
Attribute argument marshal:OutputWordPortAttribute: : "pio_rdata"
Normalised field norm item from KSubs2_Director: norm field pio_rdata volf=false additional_volf=false length of ats=1 or 1
WF:norm000: norm item from KSubs2_Director
WF:norm000: norm item from KSubs2_Director: norm field pio_wdata
Attribute argument marshal:InputWordPortAttribute: : "pio_wdata"
Normalised field norm item from KSubs2_Director: norm field pio_wdata volf=false additional_volf=false length of ats=1 or 1
WF:norm000: norm item from KSubs2_Director
WF:norm000: norm item from KSubs2_Director: norm field pio_addr
Attribute argument marshal:InputWordPortAttribute: : "pio_addr"
Normalised field norm item from KSubs2_Director: norm field pio_addr volf=false additional_volf=false length of ats=1 or 1
WF:norm000: norm item from KSubs2_Director
WF:norm000: norm item from KSubs2_Director: norm field design_serial_number
Attribute argument marshal:OutputWordPortAttribute: : "design_serial_number"
Normalised field norm item from KSubs2_Director: norm field design_serial_number volf=false additional_volf=false length of ats=1 or 1
WF:normed_ast_item_lookup: Knot KSubs2_Director tied
Installed normbase KSubs2_Director with lr1=1  lr0=1 c=1
WF:normed_ast_item_lookup: Eager generate dtable for KSubs2_Director 
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["KSubs2_Director"]
WF:cil_gen_dtable: start on class Normd_class  beforefieldinit ansi KSubs2_Director

dtable_eval ans is CTL_net(false, 32, Signed,[native])
WF:gen_dtable: gen_dtable of field: Normd_field static private CTL_net(false, 32, Signed,[native]) design_serial_number ATTS=(OutputWordPortAttribute("design_serial_number")) ids='design_serial_number'  vt=true is_array=false volf=false
dtable_eval ans is CTL_net(false, 32, Signed,[native])
WF:gen_dtable: gen_dtable of field: Normd_field static private CTL_net(false, 32, Signed,[native]) pio_addr ATTS=(InputWordPortAttribute("pio_addr")) ids='pio_addr'  vt=true is_array=false volf=false
dtable_eval ans is CTL_net(false, 32, Signed,[native])
WF:gen_dtable: gen_dtable of field: Normd_field static private CTL_net(false, 32, Signed,[native]) pio_wdata ATTS=(InputWordPortAttribute("pio_wdata")) ids='pio_wdata'  vt=true is_array=false volf=false
dtable_eval ans is CTL_net(false, 32, Signed,[native])
WF:gen_dtable: gen_dtable of field: Normd_field static private CTL_net(false, 32, Signed,[native]) pio_rdata ATTS=(OutputWordPortAttribute("pio_rdata")) ids='pio_rdata'  vt=true is_array=false volf=false
dtable_eval ans is CTL_net(false, 1, Unsigned,[native])
WF:gen_dtable: gen_dtable of field: Normd_field static private CTL_net(false, 1, Unsigned,[native]) pio_hwen ATTS=(InputBitPortAttribute("pio_hwen")) ids='pio_hwen'  vt=true is_array=false volf=false
dtable_eval ans is CTL_net(false, 32, Signed,[native])
dtable_eval ans is &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>))
WF:gen_dtable: gen_dtable of field: Normd_field static public &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)) pio_space ATTS=(<NONE>) ids='pio_space'  vt=true is_array=false volf=false
+++gen_dtable: gen_record_tag star : &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>))
Record/class instance KSubs2_Director made: Size 25 bytes
Opening log file  obj/KSubs2_Director.dtable
WF:cil_gen_dtable: finished generating dtable for real_rn=RN_idl ["KSubs2_Director"] structf=false
WF:normed_ast_item_lookup: finished KSubs2_Director
WF:norm000: norm item from KSubs2_Director/.cctor
WF:norm000: norm item from KSubs2_Director/.cctor: norm method .cctor uid=cctor14
disamname=.cctor
WF:normed_ast_item_lookup: Knot KSubs2_Director/.cctor tied
Installed normbase KSubs2_Director/.cctor with lr1=1  lr0=1 c=1
No eager dtable gen for KSubs2_Director/.cctor
enumf=false No eager dtable make for Method:KSubs2_Director/.cctor
WF:normed_ast_item_lookup: finished KSubs2_Director/.cctor
ct2idl CT_cr(KSubs2_Director, <<NONE>>) ans= KSubs2_Director
aid was not yet inserted in ataken base: aid=ktop14 0 heapspace=false
nonataken oracle: ktop14 d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-phy nemtok=ktop14  vuid=PHYS {name = ["ktop14"];
      dtidl = ["KSubs2_Director"];
      baser = -1000L;
      length = null;}
compile9 root dt=CT_cr(KSubs2_Director, <<NONE>>)
WF:KiwiC: front end input processing of class or method called KSubs2_Director: start
WF:root_walk start thread at a static method (used as an entry point). Method name=.cctor uid=cctor14: root_walk start thread at a static method (used as an entry point). Method name=.cctor uid=cctor14
WF:TSTART tree_walk specificf: .cctor this=Var(ktop14%KSubs2_Director%-1000%None, CT_cr(KSubs2_Director, <<NONE>>), ..., {constant=true}): START COMPILE OF THREAD/EP. tailhang=false specificf=S_kickoff_collate
WF:KiwiC start_thread (or entry point) id=cctor14: Commence
Env at start of thread T402  KES:KiwiSystem/Kiwi/old_pausemode_value --> =CEE_scalar(CE_x(bnumU U32'2)) 
Env at start of thread T402  KES:KiwiSystem/Kiwi/tnow --> =CEE_scalar(CE_x(bnumU U64'0)) 
Env at start of thread T402  KES:System/BitConverter/IsLittleEndian --> =CEE_scalar(CE_x(bnumU U1'1)) 
Env at start of thread T402  KES:$memmap/heapbrk --> =CEE live CEE_heapspace(400000,^0=<NONE>,inuse=<NONE>, discreps=<NONE>) 
Env at start of thread T402  KES:$memmap/staticbrk --> =CEE live CEE_int(4000) 
etarget =etarget14 retlab=T402retpoint_
WF:main KiwiC pass of .cctor uid=cctor14: Commence
WF:generate_kcoder: start iteration 0
typecheck: Inserted 0 method arguments
WF:First pass of T402/.cctor/T402/.cctor/cctor14: Commence
code_setup: keep_return=true, tailhangf=false

code_setup: sequence of 117 instructions

Report on Dest labs used: none exist.
WF:First pass of T402/.cctor/T402/.cctor/cctor14: Firstpass spills done. Typecheck start.
First pass structure made for T402/.cctor/T402/.cctor/cctor14 of length 1 with 9 CIL instructions
pc=0: Making 0 spills
Made spills
reachable basic block pcvalues 0
WF:elab_block: T402/.cctor/T402/.cctor/cctor14--typecheck--------------------- pc=0
Drop stsfld callstring=T402/.cctor/CZ:0:2 dt=CT_cr(KSubs2_Director, <<NONE>>) idl=design_serial_number
WF:normed_ast_item_lookup: start KSubs2_Director/design_serial_number (toks=2)
WF:normed_ast_item_lookup: Knot entered for KSubs2_Director/design_serial_number (ready for norm000 call)
Norm class normed: no parents for KSubs2_Director/design_serial_number
WF:norm000: norm item from KSubs2_Director/design_serial_number
WF:norm000: norm item from KSubs2_Director/design_serial_number: norm field design_serial_number
Attribute argument marshal:OutputWordPortAttribute: : "design_serial_number"
Normalised field norm item from KSubs2_Director/design_serial_number: norm field design_serial_number volf=false additional_volf=false length of ats=1 or 1
WF:normed_ast_item_lookup: Knot KSubs2_Director/design_serial_number tied
Installed normbase KSubs2_Director/design_serial_number with lr1=1  lr0=1 c=1
No eager dtable gen for KSubs2_Director/design_serial_number
WF:normed_ast_item_lookup: finished KSubs2_Director/design_serial_number
on_demand static_locate sheap_id=KSubs2_Director/design_serial_number : 1 suitable items found for on_demand static field definition.
WF:field_def: : on_demand static_locate sheap_id=KSubs2_Director/design_serial_number
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=KSubs2_Director/design_serial_number bytes=0 bytes at 30024.  ce=CE_x(num 30024)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
static_field_def: normed type is CTL_net(false, 32, Signed,[native]) for KSubs2_Director/design_serial_number%SINT%30024%None
I/O designation for KSubs2_Director/design_serial_number%SINT%30024%None is OUTPUT
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=KSubs2_Director/design_serial_number bytes=4 bytes at 30024.  ce=CE_x(num 30024)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
Record_memdesc_item: regf=false msg=uav-phy nemtok=KSubs2_Director/design_serial_number  vuid=PHYS {name = ["KSubs2_Director/design_serial_number"];
      dtidl = ["SINT"];
      baser = -1000L;
      length = null;}


Drop stsfld callstring=T402/.cctor/CZ:0:4 dt=CT_cr(KSubs2_Director, <<NONE>>) idl=pio_rdata
WF:normed_ast_item_lookup: start KSubs2_Director/pio_rdata (toks=2)
WF:normed_ast_item_lookup: Knot entered for KSubs2_Director/pio_rdata (ready for norm000 call)
Norm class normed: no parents for KSubs2_Director/pio_rdata
WF:norm000: norm item from KSubs2_Director/pio_rdata
WF:norm000: norm item from KSubs2_Director/pio_rdata: norm field pio_rdata
Attribute argument marshal:OutputWordPortAttribute: : "pio_rdata"
Normalised field norm item from KSubs2_Director/pio_rdata: norm field pio_rdata volf=false additional_volf=false length of ats=1 or 1
WF:normed_ast_item_lookup: Knot KSubs2_Director/pio_rdata tied
Installed normbase KSubs2_Director/pio_rdata with lr1=1  lr0=1 c=1
No eager dtable gen for KSubs2_Director/pio_rdata
WF:normed_ast_item_lookup: finished KSubs2_Director/pio_rdata
on_demand static_locate sheap_id=KSubs2_Director/pio_rdata : 1 suitable items found for on_demand static field definition.
WF:field_def: : on_demand static_locate sheap_id=KSubs2_Director/pio_rdata
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=KSubs2_Director/pio_rdata bytes=0 bytes at 30032.  ce=CE_x(num 30032)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
static_field_def: normed type is CTL_net(false, 32, Signed,[native]) for KSubs2_Director/pio_rdata%SINT%30032%None
I/O designation for KSubs2_Director/pio_rdata%SINT%30032%None is OUTPUT
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=KSubs2_Director/pio_rdata bytes=4 bytes at 30032.  ce=CE_x(num 30032)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
Record_memdesc_item: regf=false msg=uav-phy nemtok=KSubs2_Director/pio_rdata  vuid=PHYS {name = ["KSubs2_Director/pio_rdata"];
      dtidl = ["SINT"];
      baser = -1000L;
      length = null;}


Drop stsfld callstring=T402/.cctor/CZ:0:7 dt=CT_cr(KSubs2_Director, <<NONE>>) idl=pio_space
WF:normed_ast_item_lookup: start KSubs2_Director/pio_space (toks=2)
WF:normed_ast_item_lookup: Knot entered for KSubs2_Director/pio_space (ready for norm000 call)
Norm class normed: no parents for KSubs2_Director/pio_space
WF:norm000: norm item from KSubs2_Director/pio_space
WF:norm000: norm item from KSubs2_Director/pio_space: norm field pio_space
Normalised field norm item from KSubs2_Director/pio_space: norm field pio_space volf=false additional_volf=false length of ats=0 or 0
WF:normed_ast_item_lookup: Knot KSubs2_Director/pio_space tied
Installed normbase KSubs2_Director/pio_space with lr1=1  lr0=1 c=1
No eager dtable gen for KSubs2_Director/pio_space
enumf=false No eager dtable make for &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>))
WF:normed_ast_item_lookup: finished KSubs2_Director/pio_space
on_demand static_locate sheap_id=KSubs2_Director/pio_space : 1 suitable items found for on_demand static field definition.
WF:field_def: : on_demand static_locate sheap_id=KSubs2_Director/pio_space
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=KSubs2_Director/pio_space bytes=0 bytes at 30040.  ce=CE_x(num 30040)
ct2idl &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)) ans= $star1$/@/SINT
static_field_def: normed type is &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)) for KSubs2_Director/pio_space%$star1$/@/SINT%30040%None
I/O designation for KSubs2_Director/pio_space%$star1$/@/SINT%30040%None is LOCAL
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=KSubs2_Director/pio_space bytes=4 bytes at 30040.  ce=CE_x(num 30040)
ct2idl &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)) ans= $star1$/@/SINT
aid was not yet inserted in ataken base: aid=KSubs2_Director/pio_space 0 heapspace=false
nonataken oracle: KSubs2_Director/pio_space d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-phy nemtok=KSubs2_Director/pio_space  vuid=PHYS {name = ["KSubs2_Director/pio_space"];
      dtidl = ["SINT"; "@"; "$star1$"];
      baser = -1000L;
      length = null;}


WF:First pass of T402/.cctor/T402/.cctor/cctor14: Firstpass and typecheck done.
 Concourse reachable is 0
 Exit states are 0
WF:First pass of T402/.cctor/T402/.cctor/cctor14: End of first pass
WF:rehydrate droppings for : start .cctor
Typenorm classref KSubs2_Director requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["KSubs2_Director"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["KSubs2_Director"]
Typenorm classref KSubs2_Director requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["KSubs2_Director"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["KSubs2_Director"]
Typenorm classref KSubs2_Director requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["KSubs2_Director"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["KSubs2_Director"]
WF:rehydrate droppings for : done .cctor
gtrace: Inserted 0 method arguments
WF:elab_block: T402/.cctor/T402/.cctor/cctor14--gtrace--------------------- pc=0
named reg existed sheap Var(KSubs2_Director/design_serial_number%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=design_serial_number, io_output=true})
named reg existed sheap Var(KSubs2_Director/pio_rdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_rdata, io_output=true})
get hintname scan       stsfld (valuetype [System]Int32)[0] KSubs2_Director::pio_space

hintname succeeded for KSubs2_Director/pio_space : Cez=Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., )
ct2idl &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)) ans= $star1$/@/SINT
aid was not yet inserted in ataken base: aid=CS/0.6/refxxarray10 0 heapspace=false
nonataken oracle: CS/0.6/refxxarray10 d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-phy nemtok=CS/0.6/refxxarray10  vuid=PHYS {name = ["CS/0.6/refxxarray10"];
      dtidl = ["SINT"; "@"; "$star1$"];
      baser = -1000L;
      length = null;}
named reg existed sheap Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., )
Return instruction: retlab=true tailhang=false
cctor14: rsteps at end 9991
ignored eq for store1 V0002: :  lhs=d1  rhs=d1
ignored eq for store1 V0003: :  lhs=d1  rhs=d1
Ataken scan complete. 4 items.
T402: Elab5 divide_into_basic_blocks: Exit block is 0-4-F
Thread .cctor uid=cctor14 has 5 CIL instructions in 1 basic blocks
Report on Transitions for T402
  0   0-4-F  --> <NONE>
End report on Transitions for T402 (1 items)

WF:dfa: T402: Live variable analysis of 5 points start.
WF:dfa: T402: Gen and Kill sets computed.
WF:dfa: T402: Live variable analysis of 5 points completed in 0 iterations.
WF:dfa: done
Start of aux report kiwife virtual to physical register colouring/mapping for thread T402
: Linear scan colouring done for 0 vregs using 0 pregs
End of aux report kiwife virtual to physical register colouring/mapping for thread T402
WF:kcode5_static_elaborate of tid=T402 no_basic_blocks=1: commence
kcode5_static_elaborate of tid=T402 no_basic_blocks=1: Start generate lasso stem static elaborate
WF:kcode5_static_elaborate of tid=T402 no_basic_blocks=1: Block start. PCT402:0 region=(100))
kcode5_static_elaborate of tid=T402 no_basic_blocks=1: Log visit to 0 at age=0
QX9: gt_step:KER_lasso_stem:csharp/KSubs2_Director.dll:>>0000:
>>0000:100::SrcStack=
 --- ThreadStart_cctor14
 kcode0000:   sassign KSubs2_Director/design_serial_number := CE_x(bnumS S32'2232578)
K_as_sassign:  lhs=Var(KSubs2_Director/design_serial_number%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=design_serial_number, io_output=true})
     sassign rhs=CE_x(bnumS S32'2232578)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(KSubs2_Director/design_serial_number%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=design_serial_number, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>design_serial_number<
 NETGEN io=OUTPUT id=design_serial_number is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=design_serial_number[-2147483648..2147483647]:OUTPUT::Signed{init=0, io_output=true, username=design_serial_number}
evolve_scalar: nona: tag=KES:KSubs2_Director/design_serial_number := CE_x(bnumS S32'2232578)
hpr emit at 1:design_serial_number := S32'2232578;



QX9: gt_step:KER_lasso_stem:threadstart//T402/.cctor kcode0001:   sassign KSubs2_Director/pio_rdata := CE_x(num 0)
K_as_sassign:  lhs=Var(KSubs2_Director/pio_rdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_rdata, io_output=true})
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(KSubs2_Director/pio_rdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_rdata, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>pio_rdata<
 NETGEN io=OUTPUT id=pio_rdata is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=pio_rdata[-2147483648..2147483647]:OUTPUT::Signed{init=0, io_output=true, username=pio_rdata}
evolve_scalar: nona: tag=KES:KSubs2_Director/pio_rdata := CE_x(num 0)
hpr emit at 2:pio_rdata := 0;



QX9: gt_step:KER_lasso_stem:threadstart//T402/.cctor kcode0002:   sassign CS/0.6/refxxarray10 := CE_newarr[CE_x(num 10)]
K_as_sassign:  lhs=Var(CS/0.6/refxxarray10%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., )
     sassign rhs=CE_newarr(CTL_net(false, 32, Signed,[native]), CE_x(num 10), CS/0.6/aitem10,pio_space_)

ct2idl CT_arr(CTL_net(false, 32, Signed,[native]), 10) ans= @/SINT
obj_alloc_core for CT_arr(CTL_net(false, 32, Signed,[native]), 10): reallyf=true Heap pointer was CEE_heapspace(400000,^0=<NONE>,inuse=<NONE>, discreps=<NONE>)
 obj_alloc: storemode=STOREMODE_runtime_heap reallyf=true widl=@/SINT bytes=40 bytes at 400000.  ce=CE_x(num 400000)
Record_memdesc_item: regf=true msg=newarr nemtok=CS/0.6/aitem10  vuid=PHYS {name = ["@_SINT"];
      dtidl = ["SINT"; "@"];
      baser = 400000L;
      length = Some 40L;}
Allocated array CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true}), 40 bytes at 400000  aid=CS/0.6/aitem10
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.6/aitem10 found d1
Netgen: Wt for Var(CS/0.6/refxxarray10%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=CS/0.6/refxxarray10 is_string=false
 NETGEN L2662 ARR/NET n=1 io=LOCAL
lnetgen: netgen dt=&(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), use_integer=false, dims=<NONE>
netgen ans=CS/0.6/refxxarray10[31:0]:LOCAL::Signed{init=0}
evolve_scalar: nona: tag=KES:CS/0.6/refxxarray10 := CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
hpr emit at 3:CS/0.6/refxxarray10 := {SC:d1,S64'400000};



QX9: gt_step:KER_lasso_stem:threadstart//T402/.cctor kcode0003:   sassign KSubs2_Director/pio_space := CS/0.6/refxxarray10
K_as_sassign:  lhs=Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., )
     sassign rhs=Var(CS/0.6/refxxarray10%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., )

    nona   envlook uid=CS/0.6/refxxarray10%$star1$/@/SINT%-1000%None
    nona   envlook tag=KES:CS/0.6/refxxarray10 env_value=CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.6/aitem10 found d1
Netgen: Wt for Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=KSubs2_Director/pio_space is_string=false
 NETGEN L2662 ARR/NET n=1 io=LOCAL
lnetgen: netgen dt=&(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), use_integer=false, dims=<NONE>
netgen ans=KSubs2_Director/pio_space[31:0]:LOCAL::Signed{init=0}
evolve_scalar: nona: tag=KES:KSubs2_Director/pio_space := CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
hpr emit at 4:KSubs2_Director/pio_space := {SC:d1,S64'400000};



QX9: gt_step:KER_lasso_stem:threadstart//T402/.cctor kcode0004: K_topret(NONE)
hpr emit at 5:Xreturn 0;


kcode5_static_elaborate of tid=T402 no_basic_blocks=1: New region encountered: age=0
kcode5_static_elaborate of tid=T402 no_basic_blocks=1: Finished generating static elaborate trajectory
kcode5_static_elaborate of tid=T402 no_basic_blocks=1: Most advanced basic block start was 0 (total no blocks=1)
emit remark: End of static elaboration for tid T402. After all generate loops are unwound we arrive here: 0
WF:KiwiC-stages: End of static elaboration for tid T402. After all generate loops are unwound we arrive here: 0
WF:constant_fold_meets tid=T402 entry_point=0: start
Reverse post-order ordering for constant fold is 0
WF:constant_fold_meets tid=T402 entry_point=0: constant_fold: start iterate over basic blocks
T402: Constant_fold meet iteration 0
QX9: gt_step:KER_constant_meet:csharp/KSubs2_Director.dll:<no codepoint>callstring__=constant_fold_meets tid=T402 entry_point=0:SrcStack=
 --- ThreadStart_cctor14
 kcode0000:   sassign KSubs2_Director/design_serial_number := CE_x(bnumS S32'2232578)
K_as_sassign:  lhs=Var(KSubs2_Director/design_serial_number%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=design_serial_number, io_output=true})
     sassign rhs=CE_x(bnumS S32'2232578)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(KSubs2_Director/design_serial_number%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=design_serial_number, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>design_serial_number<
 NETGEN io=OUTPUT id=design_serial_number is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=design_serial_number[-2147483648..2147483647]:OUTPUT::Signed{init=0, io_output=true, username=design_serial_number}
evolve_scalar: nona: tag=KES:KSubs2_Director/design_serial_number := CE_x(bnumS S32'2232578)
QX9: gt_step:KER_constant_meet:threadstart//T402/.cctor kcode0001:   sassign KSubs2_Director/pio_rdata := CE_x(num 0)
K_as_sassign:  lhs=Var(KSubs2_Director/pio_rdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_rdata, io_output=true})
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(KSubs2_Director/pio_rdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_rdata, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>pio_rdata<
 NETGEN io=OUTPUT id=pio_rdata is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=pio_rdata[-2147483648..2147483647]:OUTPUT::Signed{init=0, io_output=true, username=pio_rdata}
evolve_scalar: nona: tag=KES:KSubs2_Director/pio_rdata := CE_x(num 0)
QX9: gt_step:KER_constant_meet:threadstart//T402/.cctor kcode0002:   sassign CS/0.6/refxxarray10 := CE_newarr[CE_x(num 10)]
K_as_sassign:  lhs=Var(CS/0.6/refxxarray10%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., )
     sassign rhs=CE_newarr(CTL_net(false, 32, Signed,[native]), CE_x(num 10), CS/0.6/aitem10,pio_space_)

ct2idl CT_arr(CTL_net(false, 32, Signed,[native]), 10) ans= @/SINT
obj_alloc_core for CT_arr(CTL_net(false, 32, Signed,[native]), 10): reallyf=true Heap pointer was CEE_heapspace(400040,^1=(400000,40,CT_arr(CTL_net(false, 32, Signed,[native]), 10)),inuse=<NONE>, discreps=<NONE>)
 obj_alloc: storemode=STOREMODE_compiletime_heap reallyf=true widl=@/SINT bytes=40 bytes at 400000.  ce=CE_x(num 400000)
Record_memdesc_item: regf=true msg=newarr nemtok=CS/0.6/aitem10  vuid=PHYS {name = ["@_SINT"];
      dtidl = ["SINT"; "@"];
      baser = 400000L;
      length = Some 40L;}
Allocated array CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true}), 40 bytes at 400000  aid=CS/0.6/aitem10
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.6/aitem10 found d1
Netgen: Wt for Var(CS/0.6/refxxarray10%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=CS/0.6/refxxarray10 is_string=false
 NETGEN L2662 ARR/NET n=1 io=LOCAL
lnetgen: netgen dt=&(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), use_integer=false, dims=<NONE>
netgen ans=CS/0.6/refxxarray10[31:0]:LOCAL::Signed{init=0}
evolve_scalar: nona: tag=KES:CS/0.6/refxxarray10 := CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
QX9: gt_step:KER_constant_meet:threadstart//T402/.cctor kcode0003:   sassign KSubs2_Director/pio_space := CS/0.6/refxxarray10
K_as_sassign:  lhs=Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., )
     sassign rhs=Var(CS/0.6/refxxarray10%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., )

    nona   envlook uid=CS/0.6/refxxarray10%$star1$/@/SINT%-1000%None
    nona   envlook tag=KES:CS/0.6/refxxarray10 env_value=CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.6/aitem10 found d1
Netgen: Wt for Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=KSubs2_Director/pio_space is_string=false
 NETGEN L2662 ARR/NET n=1 io=LOCAL
lnetgen: netgen dt=&(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), use_integer=false, dims=<NONE>
netgen ans=KSubs2_Director/pio_space[31:0]:LOCAL::Signed{init=0}
evolve_scalar: nona: tag=KES:KSubs2_Director/pio_space := CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
QX9: gt_step:KER_constant_meet:threadstart//T402/.cctor kcode0004: K_topret(NONE)
marking a diff (degenerate case) on 0
Constant Meet: 0-4-F-nA=0:0: Change to constants out
T402: Constant_fold meet iteration 1
Constant Meet: 0-4-F-nA=0:0 No change to constants in
WF:constant_fold_meets tid=T402 entry_point=0: constant_fold: finished iterate over basic blocks
WF:KiwiC-stages: tid=T402: End of constant folding
ignored eq for store1 V0002: :  lhs=d1  rhs=d1
ignored eq for store1 V0003: :  lhs=d1  rhs=d1
Ataken scan complete. 4 items.
Rendering basic block 0/1   0-4-F
WF:elab5_render T402: commence
WF:elab5_render T402: elab5_render T402: Block start. PCT402:0
emit at 2: label T402_0
elab5_render T402Start generate traj 0 .. 4
QX9: gt_step:KER_code_generation:csharp/KSubs2_Director.dll:<no codepoint>callstring__=elab5_render T402: Block start. PCT402:0:SrcStack=
 --- ThreadStart_cctor14
 kcode0000:   sassign KSubs2_Director/design_serial_number := CE_x(bnumS S32'2232578)
K_as_sassign:  lhs=Var(KSubs2_Director/design_serial_number%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=design_serial_number, io_output=true})
     sassign rhs=CE_x(bnumS S32'2232578)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(KSubs2_Director/design_serial_number%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=design_serial_number, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>design_serial_number<
 NETGEN io=OUTPUT id=design_serial_number is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=design_serial_number[-2147483648..2147483647]:OUTPUT::Signed{init=0, io_output=true, username=design_serial_number}
evolve_scalar: nona: tag=KES:KSubs2_Director/design_serial_number := CE_x(bnumS S32'2232578)
hpr emit at 4:design_serial_number := S32'2232578;



QX9: gt_step:KER_code_generation:threadstart//T402/.cctor kcode0001:   sassign KSubs2_Director/pio_rdata := CE_x(num 0)
K_as_sassign:  lhs=Var(KSubs2_Director/pio_rdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_rdata, io_output=true})
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(KSubs2_Director/pio_rdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_rdata, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>pio_rdata<
 NETGEN io=OUTPUT id=pio_rdata is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=pio_rdata[-2147483648..2147483647]:OUTPUT::Signed{init=0, io_output=true, username=pio_rdata}
evolve_scalar: nona: tag=KES:KSubs2_Director/pio_rdata := CE_x(num 0)
hpr emit at 5:pio_rdata := 0;



QX9: gt_step:KER_code_generation:threadstart//T402/.cctor kcode0002:   sassign CS/0.6/refxxarray10 := CE_newarr[CE_x(num 10)]
K_as_sassign:  lhs=Var(CS/0.6/refxxarray10%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., )
     sassign rhs=CE_newarr(CTL_net(false, 32, Signed,[native]), CE_x(num 10), CS/0.6/aitem10,pio_space_)

ct2idl CT_arr(CTL_net(false, 32, Signed,[native]), 10) ans= @/SINT
obj_alloc_core for CT_arr(CTL_net(false, 32, Signed,[native]), 10): reallyf=true Heap pointer was CEE_heapspace(400040,^1=(400000,40,CT_arr(CTL_net(false, 32, Signed,[native]), 10)),inuse=<NONE>, discreps=<NONE>)
 obj_alloc: storemode=STOREMODE_runtime_heap reallyf=true widl=@/SINT bytes=40 bytes at 400000.  ce=CE_x(num 400000)
Record_memdesc_item: regf=true msg=newarr nemtok=CS/0.6/aitem10  vuid=PHYS {name = ["@_SINT"];
      dtidl = ["SINT"; "@"];
      baser = 400000L;
      length = Some 40L;}
Allocated array CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true}), 40 bytes at 400000  aid=CS/0.6/aitem10
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.6/aitem10 found d1
Netgen: Wt for Var(CS/0.6/refxxarray10%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=CS/0.6/refxxarray10 is_string=false
 NETGEN L2662 ARR/NET n=1 io=LOCAL
lnetgen: netgen dt=&(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), use_integer=false, dims=<NONE>
netgen ans=CS/0.6/refxxarray10[31:0]:LOCAL::Signed{init=0}
evolve_scalar: nona: tag=KES:CS/0.6/refxxarray10 := CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
hpr emit at 6:CS/0.6/refxxarray10 := {SC:d1,S64'400000};



QX9: gt_step:KER_code_generation:threadstart//T402/.cctor kcode0003:   sassign KSubs2_Director/pio_space := CS/0.6/refxxarray10
K_as_sassign:  lhs=Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., )
     sassign rhs=Var(CS/0.6/refxxarray10%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., )

    nona   envlook uid=CS/0.6/refxxarray10%$star1$/@/SINT%-1000%None
    nona   envlook tag=KES:CS/0.6/refxxarray10 env_value=CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.6/aitem10 found d1
Netgen: Wt for Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=KSubs2_Director/pio_space is_string=false
 NETGEN L2662 ARR/NET n=1 io=LOCAL
lnetgen: netgen dt=&(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), use_integer=false, dims=<NONE>
netgen ans=KSubs2_Director/pio_space[31:0]:LOCAL::Signed{init=0}
evolve_scalar: nona: tag=KES:KSubs2_Director/pio_space := CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
hpr emit at 7:KSubs2_Director/pio_space := {SC:d1,S64'400000};



QX9: gt_step:KER_code_generation:threadstart//T402/.cctor kcode0004: K_topret(NONE)
hpr emit at 8:Xreturn 0;


elab5_render T402ran off end
hpr top/tail emit: 9:Xreturn 1;


hpr emit at 9:Xreturn 1;


hpr top/tail emit: 10:// End of DIC comment 1



hpr emit at 10:// End of DIC comment 1



WF:Assemble VM: T402_.cctor: start
WF:reassemble_dic: start
WF:reassemble_dic: Reassembled 11 dic locations
redirect optimise 0/11
WF:Assemble VM: T402_.cctor: finished 11 instructions. gc=
WF:main pass of thread used for .cctor: ending
WF:optimise_dic .cctor uid=cctor14: starting anal
WF:optimise_dic .cctor uid=cctor14: done anal
WF:optimise_dic .cctor uid=cctor14: starting kill (commenting out) of spare lines
WF:optimise_dic .cctor uid=cctor14: done kill of spare lines
WF:TSTART tree_walk specificf: .cctor this=Var(ktop14%KSubs2_Director%-1000%None, CT_cr(KSubs2_Director, <<NONE>>), ..., {constant=true}): FINISHED COMPILE OF THREAD/EP
rip_exec_code : constructor block count=1, others=0
Jump to end at 8
Jump to end at 9
Root method elaborated: specificf=S_kickoff_collate leftover=1+2
WF:KiwiC: Created VM2 machine : cctor22end
WF:root_walk start thread at a static method (used as an entry point). Method name=.cctor uid=cctor14: root e/p end
WF:KiwiC: front end input processing of class or method called KSubs2_Director: done






WF:auxiliary_static_cctors: start on primesya
Munich: Auxiliary static classes constructed aux primesya donef=false
WF:normed_ast_item_lookup: start primesya/.cctor (toks=2)
WF:normed_ast_item_lookup: Knot entered for primesya/.cctor (ready for norm000 call)
parent idl=primesya for primesya..cctor
WF:normed_ast_item_lookup: start primesya (toks=1)
WF:normed_ast_item_lookup: Knot entered for primesya (ready for norm000 call)
Norm class normed: no parents for primesya
WF:norm000: norm item from primesya
WF:norm000: norm item from primesya: cil_directory class primesya with 0 type formals
WF:norm000: norm item from primesya
WF:norm000: norm item from primesya: norm method .cctor uid=cctor16
disamname=.cctor
WF:norm000: norm item from primesya
WF:norm000: norm item from primesya: norm method .ctor uid=ctor150
disamname=.ctor
WF:norm000: norm item from primesya
WF:norm000: norm item from primesya: norm method Main uid=Main10
disamname=Main
WF:norm000: norm item from primesya
WF:norm000: norm item from primesya: norm field finished
Attribute argument marshal:OutputBitPortAttribute: : "finished"
Normalised field norm item from primesya: norm field finished volf=false additional_volf=false length of ats=1 or 1
WF:norm000: norm item from primesya
WF:norm000: norm item from primesya: norm field edesign
Blob read byte L993 31
Blob read byte L993 0
Attribute argument marshal:OutputWordPortAttribute: : 31, Attribute argument marshal:OutputWordPortAttribute: : 0
Attribute argument marshal:OutputNameAttribute: : "edesign"
Normalised field norm item from primesya: norm field edesign volf=false additional_volf=false length of ats=2 or 2
WF:norm000: norm item from primesya
WF:norm000: norm item from primesya: norm field evariant_output
Blob read byte L993 31
Blob read byte L993 0
Attribute argument marshal:OutputWordPortAttribute: : 31, Attribute argument marshal:OutputWordPortAttribute: : 0
Attribute argument marshal:OutputNameAttribute: : "evariant"
Normalised field norm item from primesya: norm field evariant_output volf=false additional_volf=false length of ats=2 or 2
WF:norm000: norm item from primesya
WF:norm000: norm item from primesya: norm field evariant_master
Normalised field norm item from primesya: norm field evariant_master volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from primesya
WF:norm000: norm item from primesya: norm field elimit
Blob read byte L993 31
Blob read byte L993 0
Attribute argument marshal:OutputWordPortAttribute: : 31, Attribute argument marshal:OutputWordPortAttribute: : 0
Attribute argument marshal:OutputNameAttribute: : "elimit"
Normalised field norm item from primesya: norm field elimit volf=false additional_volf=false length of ats=2 or 2
WF:norm000: norm item from primesya
WF:norm000: norm item from primesya: norm field count1
Normalised field norm item from primesya: norm field count1 volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from primesya
WF:norm000: norm item from primesya: norm field count
Blob read byte L993 31
Blob read byte L993 0
Attribute argument marshal:OutputWordPortAttribute: : 31, Attribute argument marshal:OutputWordPortAttribute: : 0
Attribute argument marshal:OutputNameAttribute: : "count"
Normalised field norm item from primesya: norm field count volf=false additional_volf=false length of ats=2 or 2
WF:norm000: norm item from primesya
WF:norm000: norm item from primesya: norm field vol
Blob read byte L993 31
Blob read byte L993 0
Attribute argument marshal:InputWordPortAttribute: : 31, Attribute argument marshal:InputWordPortAttribute: : 0
Attribute argument marshal:OutputNameAttribute: : "volume"
Normalised field norm item from primesya: norm field vol volf=false additional_volf=false length of ats=2 or 2
WF:norm000: norm item from primesya
WF:norm000: norm item from primesya: norm field PA
Normalised field norm item from primesya: norm field PA volf=false additional_volf=false length of ats=0 or 0
WF:norm000: norm item from primesya
WF:norm000: norm item from primesya: norm field limit
Normalised field norm item from primesya: norm field limit volf=false additional_volf=false length of ats=0 or 0
WF:normed_ast_item_lookup: Knot primesya tied
Installed normbase primesya with lr1=1  lr0=1 c=1
WF:normed_ast_item_lookup: Eager generate dtable for primesya 
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
WF:cil_gen_dtable: start on class Normd_class  beforefieldinit ansi primesya

dtable_eval ans is CTL_net(false, 32, Signed,[native])
WF:gen_dtable: gen_dtable of field: Normd_field static private CTL_net(false, 32, Signed,[native]) limit ATTS=(<NONE>) ids='limit'  vt=true is_array=false volf=false
dtable_eval ans is &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>))
WF:gen_dtable: gen_dtable of field: Normd_field static private &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)) PA ATTS=(<NONE>) ids='PA'  vt=true is_array=false volf=false
+++gen_dtable: gen_record_tag star : &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>))
dtable_eval ans is CTL_net(false, 32, Unsigned,[native])
WF:gen_dtable: gen_dtable of field: Normd_field static private CTL_net(false, 32, Unsigned,[native]) vol ATTS=(OutputNameAttribute("volume"), InputWordPortAttribute(31, 0)) ids='vol'  vt=true is_array=false volf=false
dtable_eval ans is CTL_net(false, 32, Unsigned,[native])
WF:gen_dtable: gen_dtable of field: Normd_field static private CTL_net(false, 32, Unsigned,[native]) count ATTS=(OutputNameAttribute("count"), OutputWordPortAttribute(31, 0)) ids='count'  vt=true is_array=false volf=false
dtable_eval ans is CTL_net(false, 32, Signed,[native])
WF:gen_dtable: gen_dtable of field: Normd_field static private CTL_net(false, 32, Signed,[native]) count1 ATTS=(<NONE>) ids='count1'  vt=true is_array=false volf=false
dtable_eval ans is CTL_net(false, 32, Signed,[native])
WF:gen_dtable: gen_dtable of field: Normd_field static private CTL_net(false, 32, Signed,[native]) elimit ATTS=(OutputNameAttribute("elimit"), OutputWordPortAttribute(31, 0)) ids='elimit'  vt=true is_array=false volf=false
dtable_eval ans is CTL_net(false, 32, Signed,[native])
dtable_eval ans is CTL_net(false, 32, Signed,[native])
WF:gen_dtable: gen_dtable of field: Normd_field static private CTL_net(false, 32, Signed,[native]) evariant_output ATTS=(OutputNameAttribute("evariant"), OutputWordPortAttribute(31, 0)) ids='evariant_output'  vt=true is_array=false volf=false
dtable_eval ans is CTL_net(false, 32, Signed,[native])
WF:gen_dtable: gen_dtable of field: Normd_field static private CTL_net(false, 32, Signed,[native]) edesign ATTS=(OutputNameAttribute("edesign"), OutputWordPortAttribute(31, 0)) ids='edesign'  vt=true is_array=false volf=false
dtable_eval ans is CTL_net(false, 1, Unsigned,[native])
WF:gen_dtable: gen_dtable of field: Normd_field static private CTL_net(false, 1, Unsigned,[native]) finished ATTS=(OutputBitPortAttribute("finished")) ids='finished'  vt=true is_array=false volf=false
Record/class instance primesya made: Size 37 bytes
Opening log file  obj/primesya.dtable
WF:cil_gen_dtable: finished generating dtable for real_rn=RN_idl ["primesya"] structf=false
WF:normed_ast_item_lookup: finished primesya
WF:norm000: norm item from primesya/.cctor
WF:norm000: norm item from primesya/.cctor: norm method .cctor uid=cctor16
disamname=.cctor
WF:normed_ast_item_lookup: Knot primesya/.cctor tied
Installed normbase primesya/.cctor with lr1=1  lr0=1 c=1
No eager dtable gen for primesya/.cctor
enumf=false No eager dtable make for Method:primesya/.cctor
WF:normed_ast_item_lookup: finished primesya/.cctor
ct2idl CT_cr(primesya, <<NONE>>) ans= primesya
aid was not yet inserted in ataken base: aid=ktop16 0 heapspace=false
nonataken oracle: ktop16 d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-phy nemtok=ktop16  vuid=PHYS {name = ["ktop16"];
      dtidl = ["primesya"];
      baser = -1000L;
      length = null;}
compile9 root dt=CT_cr(primesya, <<NONE>>)
WF:KiwiC: front end input processing of class or method called primesya: start
WF:root_walk start thread at a static method (used as an entry point). Method name=.cctor uid=cctor16: root_walk start thread at a static method (used as an entry point). Method name=.cctor uid=cctor16
WF:TSTART tree_walk specificf: .cctor this=Var(ktop16%primesya%-1000%None, CT_cr(primesya, <<NONE>>), ..., {constant=true}): START COMPILE OF THREAD/EP. tailhang=false specificf=S_kickoff_collate
WF:KiwiC start_thread (or entry point) id=cctor16: Commence
Env at start of thread T403  KES:CS/0.6/refxxarray10 --> =CEE_scalar(CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})) 
Env at start of thread T403  KES:KSubs2_Director/design_serial_number --> =CEE_scalar(CE_x(bnumS S32'2232578)) 
Env at start of thread T403  KES:KSubs2_Director/pio_rdata --> =CEE_scalar(CE_x(num 0)) 
Env at start of thread T403  KES:KSubs2_Director/pio_space --> =CEE_scalar(CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})) 
Env at start of thread T403  KES:KiwiSystem/Kiwi/old_pausemode_value --> =CEE_scalar(CE_x(bnumU U32'2)) 
Env at start of thread T403  KES:KiwiSystem/Kiwi/tnow --> =CEE_scalar(CE_x(bnumU U64'0)) 
Env at start of thread T403  KES:System/BitConverter/IsLittleEndian --> =CEE_scalar(CE_x(bnumU U1'1)) 
Env at start of thread T403  KES:$memmap/heapbrk --> =CEE live CEE_heapspace(400040,^1=(400000,40,CT_arr(CTL_net(false, 32, Signed,[native]), 10)),inuse=400000, discreps=<NONE>) 
Env at start of thread T403  KES:$memmap/staticbrk --> =CEE live CEE_int(4000) 
etarget =etarget16 retlab=T403retpoint_
WF:main KiwiC pass of .cctor uid=cctor16: Commence
WF:generate_kcoder: start iteration 0
typecheck: Inserted 0 method arguments
WF:First pass of T403/.cctor/T403/.cctor/cctor16: Commence
code_setup: keep_return=true, tailhangf=false

code_setup: sequence of 137 instructions

Report on Dest labs used: none exist.
WF:First pass of T403/.cctor/T403/.cctor/cctor16: Firstpass spills done. Typecheck start.
First pass structure made for T403/.cctor/T403/.cctor/cctor16 of length 1 with 19 CIL instructions
pc=0: Making 0 spills
Made spills
reachable basic block pcvalues 0
WF:elab_block: T403/.cctor/T403/.cctor/cctor16--typecheck--------------------- pc=0
Drop stsfld callstring=T403/.cctor/CZ:0:2 dt=CT_cr(primesya, <<NONE>>) idl=limit
WF:normed_ast_item_lookup: start primesya/limit (toks=2)
WF:normed_ast_item_lookup: Knot entered for primesya/limit (ready for norm000 call)
Norm class normed: no parents for primesya/limit
WF:norm000: norm item from primesya/limit
WF:norm000: norm item from primesya/limit: norm field limit
Normalised field norm item from primesya/limit: norm field limit volf=false additional_volf=false length of ats=0 or 0
WF:normed_ast_item_lookup: Knot primesya/limit tied
Installed normbase primesya/limit with lr1=1  lr0=1 c=1
No eager dtable gen for primesya/limit
WF:normed_ast_item_lookup: finished primesya/limit
on_demand static_locate sheap_id=primesya/limit : 1 suitable items found for on_demand static field definition.
WF:field_def: : on_demand static_locate sheap_id=primesya/limit
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=primesya/limit bytes=0 bytes at 30048.  ce=CE_x(num 30048)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
static_field_def: normed type is CTL_net(false, 32, Signed,[native]) for primesya/limit%SINT%30048%None
I/O designation for primesya/limit%SINT%30048%None is LOCAL
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=primesya/limit bytes=4 bytes at 30048.  ce=CE_x(num 30048)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
aid was not yet inserted in ataken base: aid=primesya/limit 0 heapspace=false
nonataken oracle: primesya/limit d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-phy nemtok=primesya/limit  vuid=PHYS {name = ["primesya/limit"];
      dtidl = ["SINT"];
      baser = -1000L;
      length = null;}


Drop ldsfld callstring=T403/.cctor/CZ:0:3 dt=CTL_net(false, 32, Signed,[native]) idl=limit
Drop stsfld callstring=T403/.cctor/CZ:0:5 dt=CT_cr(primesya, <<NONE>>) idl=PA
WF:normed_ast_item_lookup: start primesya/PA (toks=2)
WF:normed_ast_item_lookup: Knot entered for primesya/PA (ready for norm000 call)
Norm class normed: no parents for primesya/PA
WF:norm000: norm item from primesya/PA
WF:norm000: norm item from primesya/PA: norm field PA
Normalised field norm item from primesya/PA: norm field PA volf=false additional_volf=false length of ats=0 or 0
WF:normed_ast_item_lookup: Knot primesya/PA tied
Installed normbase primesya/PA with lr1=1  lr0=1 c=1
No eager dtable gen for primesya/PA
enumf=false No eager dtable make for &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>))
WF:normed_ast_item_lookup: finished primesya/PA
on_demand static_locate sheap_id=primesya/PA : 1 suitable items found for on_demand static field definition.
WF:field_def: : on_demand static_locate sheap_id=primesya/PA
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=primesya/PA bytes=0 bytes at 30056.  ce=CE_x(num 30056)
ct2idl &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)) ans= $star1$/@/BOOL
static_field_def: normed type is &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)) for primesya/PA%$star1$/@/BOOL%30056%None
I/O designation for primesya/PA%$star1$/@/BOOL%30056%None is LOCAL
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=primesya/PA bytes=4 bytes at 30056.  ce=CE_x(num 30056)
ct2idl &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)) ans= $star1$/@/BOOL
aid was not yet inserted in ataken base: aid=primesya/PA 0 heapspace=false
nonataken oracle: primesya/PA d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-phy nemtok=primesya/PA  vuid=PHYS {name = ["primesya/PA"];
      dtidl = ["BOOL"; "@"; "$star1$"];
      baser = -1000L;
      length = null;}


Drop stsfld callstring=T403/.cctor/CZ:0:7 dt=CT_cr(primesya, <<NONE>>) idl=count
WF:normed_ast_item_lookup: start primesya/count (toks=2)
WF:normed_ast_item_lookup: Knot entered for primesya/count (ready for norm000 call)
Norm class normed: no parents for primesya/count
WF:norm000: norm item from primesya/count
WF:norm000: norm item from primesya/count: norm field count
Blob read byte L993 31
Blob read byte L993 0
Attribute argument marshal:OutputWordPortAttribute: : 31, Attribute argument marshal:OutputWordPortAttribute: : 0
Attribute argument marshal:OutputNameAttribute: : "count"
Normalised field norm item from primesya/count: norm field count volf=false additional_volf=false length of ats=2 or 2
WF:normed_ast_item_lookup: Knot primesya/count tied
Installed normbase primesya/count with lr1=1  lr0=1 c=1
No eager dtable gen for primesya/count
WF:normed_ast_item_lookup: finished primesya/count
on_demand static_locate sheap_id=primesya/count : 1 suitable items found for on_demand static field definition.
WF:field_def: : on_demand static_locate sheap_id=primesya/count
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=primesya/count bytes=0 bytes at 30064.  ce=CE_x(num 30064)
ct2idl CTL_net(false, 32, Unsigned,[native]) ans= UINT
static_field_def: normed type is CTL_net(false, 32, Unsigned,[native]) for primesya/count%UINT%30064%None
Selected custom width bit range lables 31:0
I/O designation for primesya/count%UINT%30064%None is OUTPUT
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=primesya/count bytes=4 bytes at 30064.  ce=CE_x(num 30064)
ct2idl CTL_net(false, 32, Unsigned,[native]) ans= UINT
Record_memdesc_item: regf=false msg=uav-phy nemtok=primesya/count  vuid=PHYS {name = ["primesya/count"];
      dtidl = ["UINT"];
      baser = -1000L;
      length = null;}


Drop stsfld callstring=T403/.cctor/CZ:0:9 dt=CT_cr(primesya, <<NONE>>) idl=count1
WF:normed_ast_item_lookup: start primesya/count1 (toks=2)
WF:normed_ast_item_lookup: Knot entered for primesya/count1 (ready for norm000 call)
Norm class normed: no parents for primesya/count1
WF:norm000: norm item from primesya/count1
WF:norm000: norm item from primesya/count1: norm field count1
Normalised field norm item from primesya/count1: norm field count1 volf=false additional_volf=false length of ats=0 or 0
WF:normed_ast_item_lookup: Knot primesya/count1 tied
Installed normbase primesya/count1 with lr1=1  lr0=1 c=1
No eager dtable gen for primesya/count1
WF:normed_ast_item_lookup: finished primesya/count1
on_demand static_locate sheap_id=primesya/count1 : 1 suitable items found for on_demand static field definition.
WF:field_def: : on_demand static_locate sheap_id=primesya/count1
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=primesya/count1 bytes=0 bytes at 30072.  ce=CE_x(num 30072)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
static_field_def: normed type is CTL_net(false, 32, Signed,[native]) for primesya/count1%SINT%30072%None
I/O designation for primesya/count1%SINT%30072%None is LOCAL
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=primesya/count1 bytes=4 bytes at 30072.  ce=CE_x(num 30072)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
aid was not yet inserted in ataken base: aid=primesya/count1 0 heapspace=false
nonataken oracle: primesya/count1 d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-phy nemtok=primesya/count1  vuid=PHYS {name = ["primesya/count1"];
      dtidl = ["SINT"];
      baser = -1000L;
      length = null;}


Drop stsfld callstring=T403/.cctor/CZ:0:11 dt=CT_cr(primesya, <<NONE>>) idl=elimit
WF:normed_ast_item_lookup: start primesya/elimit (toks=2)
WF:normed_ast_item_lookup: Knot entered for primesya/elimit (ready for norm000 call)
Norm class normed: no parents for primesya/elimit
WF:norm000: norm item from primesya/elimit
WF:norm000: norm item from primesya/elimit: norm field elimit
Blob read byte L993 31
Blob read byte L993 0
Attribute argument marshal:OutputWordPortAttribute: : 31, Attribute argument marshal:OutputWordPortAttribute: : 0
Attribute argument marshal:OutputNameAttribute: : "elimit"
Normalised field norm item from primesya/elimit: norm field elimit volf=false additional_volf=false length of ats=2 or 2
WF:normed_ast_item_lookup: Knot primesya/elimit tied
Installed normbase primesya/elimit with lr1=1  lr0=1 c=1
No eager dtable gen for primesya/elimit
WF:normed_ast_item_lookup: finished primesya/elimit
on_demand static_locate sheap_id=primesya/elimit : 1 suitable items found for on_demand static field definition.
WF:field_def: : on_demand static_locate sheap_id=primesya/elimit
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=primesya/elimit bytes=0 bytes at 30080.  ce=CE_x(num 30080)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
static_field_def: normed type is CTL_net(false, 32, Signed,[native]) for primesya/elimit%SINT%30080%None
Selected custom width bit range lables 31:0
I/O designation for primesya/elimit%SINT%30080%None is OUTPUT
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=primesya/elimit bytes=4 bytes at 30080.  ce=CE_x(num 30080)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
Record_memdesc_item: regf=false msg=uav-phy nemtok=primesya/elimit  vuid=PHYS {name = ["primesya/elimit"];
      dtidl = ["SINT"];
      baser = -1000L;
      length = null;}


Drop stsfld callstring=T403/.cctor/CZ:0:13 dt=CT_cr(primesya, <<NONE>>) idl=evariant_output
WF:normed_ast_item_lookup: start primesya/evariant_output (toks=2)
WF:normed_ast_item_lookup: Knot entered for primesya/evariant_output (ready for norm000 call)
Norm class normed: no parents for primesya/evariant_output
WF:norm000: norm item from primesya/evariant_output
WF:norm000: norm item from primesya/evariant_output: norm field evariant_output
Blob read byte L993 31
Blob read byte L993 0
Attribute argument marshal:OutputWordPortAttribute: : 31, Attribute argument marshal:OutputWordPortAttribute: : 0
Attribute argument marshal:OutputNameAttribute: : "evariant"
Normalised field norm item from primesya/evariant_output: norm field evariant_output volf=false additional_volf=false length of ats=2 or 2
WF:normed_ast_item_lookup: Knot primesya/evariant_output tied
Installed normbase primesya/evariant_output with lr1=1  lr0=1 c=1
No eager dtable gen for primesya/evariant_output
WF:normed_ast_item_lookup: finished primesya/evariant_output
on_demand static_locate sheap_id=primesya/evariant_output : 1 suitable items found for on_demand static field definition.
WF:field_def: : on_demand static_locate sheap_id=primesya/evariant_output
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=primesya/evariant_output bytes=0 bytes at 30088.  ce=CE_x(num 30088)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
static_field_def: normed type is CTL_net(false, 32, Signed,[native]) for primesya/evariant_output%SINT%30088%None
Selected custom width bit range lables 31:0
I/O designation for primesya/evariant_output%SINT%30088%None is OUTPUT
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=primesya/evariant_output bytes=4 bytes at 30088.  ce=CE_x(num 30088)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
Record_memdesc_item: regf=false msg=uav-phy nemtok=primesya/evariant_output  vuid=PHYS {name = ["primesya/evariant_output"];
      dtidl = ["SINT"];
      baser = -1000L;
      length = null;}


Drop stsfld callstring=T403/.cctor/CZ:0:15 dt=CT_cr(primesya, <<NONE>>) idl=edesign
WF:normed_ast_item_lookup: start primesya/edesign (toks=2)
WF:normed_ast_item_lookup: Knot entered for primesya/edesign (ready for norm000 call)
Norm class normed: no parents for primesya/edesign
WF:norm000: norm item from primesya/edesign
WF:norm000: norm item from primesya/edesign: norm field edesign
Blob read byte L993 31
Blob read byte L993 0
Attribute argument marshal:OutputWordPortAttribute: : 31, Attribute argument marshal:OutputWordPortAttribute: : 0
Attribute argument marshal:OutputNameAttribute: : "edesign"
Normalised field norm item from primesya/edesign: norm field edesign volf=false additional_volf=false length of ats=2 or 2
WF:normed_ast_item_lookup: Knot primesya/edesign tied
Installed normbase primesya/edesign with lr1=1  lr0=1 c=1
No eager dtable gen for primesya/edesign
WF:normed_ast_item_lookup: finished primesya/edesign
on_demand static_locate sheap_id=primesya/edesign : 1 suitable items found for on_demand static field definition.
WF:field_def: : on_demand static_locate sheap_id=primesya/edesign
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=primesya/edesign bytes=0 bytes at 30096.  ce=CE_x(num 30096)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
static_field_def: normed type is CTL_net(false, 32, Signed,[native]) for primesya/edesign%SINT%30096%None
Selected custom width bit range lables 31:0
I/O designation for primesya/edesign%SINT%30096%None is OUTPUT
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=primesya/edesign bytes=4 bytes at 30096.  ce=CE_x(num 30096)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
Record_memdesc_item: regf=false msg=uav-phy nemtok=primesya/edesign  vuid=PHYS {name = ["primesya/edesign"];
      dtidl = ["SINT"];
      baser = -1000L;
      length = null;}


Drop stsfld callstring=T403/.cctor/CZ:0:17 dt=CT_cr(primesya, <<NONE>>) idl=finished
WF:normed_ast_item_lookup: start primesya/finished (toks=2)
WF:normed_ast_item_lookup: Knot entered for primesya/finished (ready for norm000 call)
Norm class normed: no parents for primesya/finished
WF:norm000: norm item from primesya/finished
WF:norm000: norm item from primesya/finished: norm field finished
Attribute argument marshal:OutputBitPortAttribute: : "finished"
Normalised field norm item from primesya/finished: norm field finished volf=false additional_volf=false length of ats=1 or 1
WF:normed_ast_item_lookup: Knot primesya/finished tied
Installed normbase primesya/finished with lr1=1  lr0=1 c=1
No eager dtable gen for primesya/finished
WF:normed_ast_item_lookup: finished primesya/finished
on_demand static_locate sheap_id=primesya/finished : 1 suitable items found for on_demand static field definition.
WF:field_def: : on_demand static_locate sheap_id=primesya/finished
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=primesya/finished bytes=0 bytes at 30104.  ce=CE_x(num 30104)
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
static_field_def: normed type is CTL_net(false, 1, Unsigned,[native]) for primesya/finished%BOOL%30104%None
I/O designation for primesya/finished%BOOL%30104%None is OUTPUT
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=primesya/finished bytes=1 bytes at 30104.  ce=CE_x(num 30104)
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
Record_memdesc_item: regf=false msg=uav-phy nemtok=primesya/finished  vuid=PHYS {name = ["primesya/finished"];
      dtidl = ["BOOL"];
      baser = -1000L;
      length = null;}


WF:First pass of T403/.cctor/T403/.cctor/cctor16: Firstpass and typecheck done.
 Concourse reachable is 0
 Exit states are 0
WF:First pass of T403/.cctor/T403/.cctor/cctor16: End of first pass
WF:rehydrate droppings for : start .cctor
Typenorm classref primesya requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
Typenorm classref primesya requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
Typenorm classref primesya requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
Typenorm classref primesya requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
Typenorm classref primesya requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
Typenorm classref primesya requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
Typenorm classref primesya requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
Typenorm classref primesya requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
WF:rehydrate droppings for : done .cctor
gtrace: Inserted 0 method arguments
WF:elab_block: T403/.cctor/T403/.cctor/cctor16--gtrace--------------------- pc=0
named reg existed sheap Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )
get hintname scan       stsfld (valuetype [System]Boolean)[0] primesya::PA

hintname succeeded for primesya/PA : Cez=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )
ct2idl &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)) ans= $star1$/@/BOOL
aid was not yet inserted in ataken base: aid=CS/0.4/refxxarray12 0 heapspace=false
nonataken oracle: CS/0.4/refxxarray12 d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-phy nemtok=CS/0.4/refxxarray12  vuid=PHYS {name = ["CS/0.4/refxxarray12"];
      dtidl = ["BOOL"; "@"; "$star1$"];
      baser = -1000L;
      length = null;}
named reg existed sheap Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )
named reg existed sheap Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})
named reg existed sheap Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )
named reg existed sheap Var(primesya/elimit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=elimit, io_output=true})
named reg existed sheap Var(primesya/evariant_output%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=evariant, io_output=true})
named reg existed sheap Var(primesya/edesign%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=edesign, io_output=true})
named reg existed sheap Var(primesya/finished%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=finished, io_output=true})
Return instruction: retlab=true tailhang=false
cctor16: rsteps at end 9981
ignored eq for store1 V0001: :  lhs=d2  rhs=d2
ignored eq for store1 V0002: :  lhs=d2  rhs=d2
Ataken scan complete. 9 items.
T403: Elab5 divide_into_basic_blocks: Exit block is 0-9-F
Thread .cctor uid=cctor16 has 10 CIL instructions in 1 basic blocks
Report on Transitions for T403
  0   0-9-F  --> <NONE>
End report on Transitions for T403 (1 items)

WF:dfa: T403: Live variable analysis of 10 points start.
WF:dfa: T403: Gen and Kill sets computed.
WF:dfa: T403: Live variable analysis of 10 points completed in 0 iterations.
WF:dfa: done
Start of aux report kiwife virtual to physical register colouring/mapping for thread T403
: Linear scan colouring done for 0 vregs using 0 pregs
End of aux report kiwife virtual to physical register colouring/mapping for thread T403
WF:kcode5_static_elaborate of tid=T403 no_basic_blocks=1: commence
kcode5_static_elaborate of tid=T403 no_basic_blocks=1: Start generate lasso stem static elaborate
WF:kcode5_static_elaborate of tid=T403 no_basic_blocks=1: Block start. PCT403:0 region=(100))
kcode5_static_elaborate of tid=T403 no_basic_blocks=1: Log visit to 0 at age=0
QX9: gt_step:KER_lasso_stem:csharp/primes_offchip.exe:>>0000:
>>0000:100::SrcStack=
 --- ThreadStart_cctor16
 kcode0000:   sassign primesya/limit := CE_x(num 1000)
K_as_sassign:  lhs=Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )
     sassign rhs=CE_x(num 1000)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/limit is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/limit[-2147483648..2147483647]:LOCAL::Signed{init=0}
evolve_scalar: nona: tag=KES:primesya/limit := CE_x(num 1000)
hpr emit at 1:primesya/limit := 1000;



QX9: gt_step:KER_lasso_stem:threadstart//T403/.cctor kcode0001:   sassign CS/0.4/refxxarray12 := CE_newarr[primesya/limit]
K_as_sassign:  lhs=Var(CS/0.4/refxxarray12%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )
     sassign rhs=CE_newarr(CTL_net(false, 1, Unsigned,[native]), Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), CS/0.4/aitem12,PA_)

    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
ct2idl CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000) ans= @/BOOL
obj_alloc_core for CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000): reallyf=true Heap pointer was CEE_heapspace(400040,^1=(400000,40,CT_arr(CTL_net(false, 32, Signed,[native]), 10)),inuse=400000, discreps=<NONE>)
 obj_alloc: storemode=STOREMODE_runtime_heap reallyf=true widl=@/BOOL bytes=1000 bytes at 400040.  ce=CE_x(num 400040)
Record_memdesc_item: regf=true msg=newarr nemtok=CS/0.4/aitem12  vuid=PHYS {name = ["@_BOOL"];
      dtidl = ["BOOL"; "@"];
      baser = 400040L;
      length = Some 1000L;}
Allocated array CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true}), 1000 bytes at 400040  aid=CS/0.4/aitem12
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
Netgen: Wt for Var(CS/0.4/refxxarray12%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=CS/0.4/refxxarray12 is_string=false
 NETGEN L2662 ARR/NET n=1 io=LOCAL
lnetgen: netgen dt=&(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), use_integer=false, dims=<NONE>
netgen ans=CS/0.4/refxxarray12:LOCAL::Unsigned{init=0}
evolve_scalar: nona: tag=KES:CS/0.4/refxxarray12 := CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
hpr emit at 2:CS/0.4/refxxarray12 := {SC:d2,S64'400040};



QX9: gt_step:KER_lasso_stem:threadstart//T403/.cctor kcode0002:   sassign primesya/PA := CS/0.4/refxxarray12
K_as_sassign:  lhs=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )
     sassign rhs=Var(CS/0.4/refxxarray12%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )

    nona   envlook uid=CS/0.4/refxxarray12%$star1$/@/BOOL%-1000%None
    nona   envlook tag=KES:CS/0.4/refxxarray12 env_value=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
Netgen: Wt for Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/PA is_string=false
 NETGEN L2662 ARR/NET n=1 io=LOCAL
lnetgen: netgen dt=&(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), use_integer=false, dims=<NONE>
netgen ans=primesya/PA:LOCAL::Unsigned{init=0}
evolve_scalar: nona: tag=KES:primesya/PA := CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
hpr emit at 3:primesya/PA := {SC:d2,S64'400040};



QX9: gt_step:KER_lasso_stem:threadstart//T403/.cctor kcode0003:   sassign primesya/count := CE_x(num 0)
K_as_sassign:  lhs=Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Unsigned,[native])
Netgen: Wt for Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>count<, >HwWidth<>32<
 NETGEN io=OUTPUT id=count is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=count[31:0]:OUTPUT::Unsigned{init=0, io_output=true, username=count, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/count := CE_x(bnumU U32'0)
hpr emit at 4:count := U32'0;



QX9: gt_step:KER_lasso_stem:threadstart//T403/.cctor kcode0004:   sassign primesya/count1 := CE_x(num 0)
K_as_sassign:  lhs=Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/count1 is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/count1[-2147483648..2147483647]:LOCAL::Signed{init=0}
evolve_scalar: nona: tag=KES:primesya/count1 := CE_x(num 0)
hpr emit at 5:primesya/count1 := 0;



QX9: gt_step:KER_lasso_stem:threadstart//T403/.cctor kcode0005:   sassign primesya/elimit := CE_x(num 0)
K_as_sassign:  lhs=Var(primesya/elimit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=elimit, io_output=true})
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/elimit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=elimit, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>elimit<, >HwWidth<>32<
 NETGEN io=OUTPUT id=elimit is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=false, dims=<NONE>
netgen ans=elimit[31:0]:OUTPUT::Signed{init=0, io_output=true, username=elimit, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/elimit := CE_x(num 0)
hpr emit at 6:elimit := 0;



QX9: gt_step:KER_lasso_stem:threadstart//T403/.cctor kcode0006:   sassign primesya/evariant_output := CE_x(num 0)
K_as_sassign:  lhs=Var(primesya/evariant_output%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=evariant, io_output=true})
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/evariant_output%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=evariant, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>evariant<, >HwWidth<>32<
 NETGEN io=OUTPUT id=evariant is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=false, dims=<NONE>
netgen ans=evariant[31:0]:OUTPUT::Signed{init=0, io_output=true, username=evariant, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/evariant_output := CE_x(num 0)
hpr emit at 7:evariant := 0;



QX9: gt_step:KER_lasso_stem:threadstart//T403/.cctor kcode0007:   sassign primesya/edesign := CE_x(num 4032)
K_as_sassign:  lhs=Var(primesya/edesign%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=edesign, io_output=true})
     sassign rhs=CE_x(num 4032)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/edesign%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=edesign, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>edesign<, >HwWidth<>32<
 NETGEN io=OUTPUT id=edesign is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=false, dims=<NONE>
netgen ans=edesign[31:0]:OUTPUT::Signed{init=0, io_output=true, username=edesign, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/edesign := CE_x(num 4032)
hpr emit at 8:edesign := 4032;



QX9: gt_step:KER_lasso_stem:threadstart//T403/.cctor kcode0008:   sassign primesya/finished := CE_x(num 0)
K_as_sassign:  lhs=Var(primesya/finished%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=finished, io_output=true})
     sassign rhs=CE_x(num 0)

Netgen: Wt for Var(primesya/finished%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=finished, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>finished<
 NETGEN io=OUTPUT id=finished is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 1, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=finished:OUTPUT::Unsigned{init=0, io_output=true, username=finished}
evolve_scalar: nona: tag=KES:primesya/finished := CE_x(bnumU U1'0)
hpr emit at 9:finished := U1'0;



QX9: gt_step:KER_lasso_stem:threadstart//T403/.cctor kcode0009: K_topret(NONE)
hpr emit at 10:Xreturn 0;


kcode5_static_elaborate of tid=T403 no_basic_blocks=1: New region encountered: age=0
kcode5_static_elaborate of tid=T403 no_basic_blocks=1: Finished generating static elaborate trajectory
kcode5_static_elaborate of tid=T403 no_basic_blocks=1: Most advanced basic block start was 0 (total no blocks=1)
emit remark: End of static elaboration for tid T403. After all generate loops are unwound we arrive here: 0
WF:KiwiC-stages: End of static elaboration for tid T403. After all generate loops are unwound we arrive here: 0
WF:constant_fold_meets tid=T403 entry_point=0: start
Reverse post-order ordering for constant fold is 0
WF:constant_fold_meets tid=T403 entry_point=0: constant_fold: start iterate over basic blocks
T403: Constant_fold meet iteration 0
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T403 entry_point=0:SrcStack=
 --- ThreadStart_cctor16
 kcode0000:   sassign primesya/limit := CE_x(num 1000)
K_as_sassign:  lhs=Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )
     sassign rhs=CE_x(num 1000)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/limit is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/limit[-2147483648..2147483647]:LOCAL::Signed{init=0}
evolve_scalar: nona: tag=KES:primesya/limit := CE_x(num 1000)
QX9: gt_step:KER_constant_meet:threadstart//T403/.cctor kcode0001:   sassign CS/0.4/refxxarray12 := CE_newarr[primesya/limit]
K_as_sassign:  lhs=Var(CS/0.4/refxxarray12%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )
     sassign rhs=CE_newarr(CTL_net(false, 1, Unsigned,[native]), Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), CS/0.4/aitem12,PA_)

    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
ct2idl CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000) ans= @/BOOL
obj_alloc_core for CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000): reallyf=true Heap pointer was CEE_heapspace(401040,^2=(400040,1000,CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000)), (400000,40,CT_arr(CTL_net(false, 32, Signed,[native]), 10)),inuse=400000, discreps=<NONE>)
 obj_alloc: storemode=STOREMODE_compiletime_heap reallyf=true widl=@/BOOL bytes=1000 bytes at 400040.  ce=CE_x(num 400040)
Record_memdesc_item: regf=true msg=newarr nemtok=CS/0.4/aitem12  vuid=PHYS {name = ["@_BOOL"];
      dtidl = ["BOOL"; "@"];
      baser = 400040L;
      length = Some 1000L;}
Allocated array CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true}), 1000 bytes at 400040  aid=CS/0.4/aitem12
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
Netgen: Wt for Var(CS/0.4/refxxarray12%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=CS/0.4/refxxarray12 is_string=false
 NETGEN L2662 ARR/NET n=1 io=LOCAL
lnetgen: netgen dt=&(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), use_integer=false, dims=<NONE>
netgen ans=CS/0.4/refxxarray12:LOCAL::Unsigned{init=0}
evolve_scalar: nona: tag=KES:CS/0.4/refxxarray12 := CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
QX9: gt_step:KER_constant_meet:threadstart//T403/.cctor kcode0002:   sassign primesya/PA := CS/0.4/refxxarray12
K_as_sassign:  lhs=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )
     sassign rhs=Var(CS/0.4/refxxarray12%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )

    nona   envlook uid=CS/0.4/refxxarray12%$star1$/@/BOOL%-1000%None
    nona   envlook tag=KES:CS/0.4/refxxarray12 env_value=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
Netgen: Wt for Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/PA is_string=false
 NETGEN L2662 ARR/NET n=1 io=LOCAL
lnetgen: netgen dt=&(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), use_integer=false, dims=<NONE>
netgen ans=primesya/PA:LOCAL::Unsigned{init=0}
evolve_scalar: nona: tag=KES:primesya/PA := CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
QX9: gt_step:KER_constant_meet:threadstart//T403/.cctor kcode0003:   sassign primesya/count := CE_x(num 0)
K_as_sassign:  lhs=Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Unsigned,[native])
Netgen: Wt for Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>count<, >HwWidth<>32<
 NETGEN io=OUTPUT id=count is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=count[31:0]:OUTPUT::Unsigned{init=0, io_output=true, username=count, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/count := CE_x(bnumU U32'0)
QX9: gt_step:KER_constant_meet:threadstart//T403/.cctor kcode0004:   sassign primesya/count1 := CE_x(num 0)
K_as_sassign:  lhs=Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/count1 is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/count1[-2147483648..2147483647]:LOCAL::Signed{init=0}
evolve_scalar: nona: tag=KES:primesya/count1 := CE_x(num 0)
QX9: gt_step:KER_constant_meet:threadstart//T403/.cctor kcode0005:   sassign primesya/elimit := CE_x(num 0)
K_as_sassign:  lhs=Var(primesya/elimit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=elimit, io_output=true})
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/elimit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=elimit, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>elimit<, >HwWidth<>32<
 NETGEN io=OUTPUT id=elimit is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=false, dims=<NONE>
netgen ans=elimit[31:0]:OUTPUT::Signed{init=0, io_output=true, username=elimit, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/elimit := CE_x(num 0)
QX9: gt_step:KER_constant_meet:threadstart//T403/.cctor kcode0006:   sassign primesya/evariant_output := CE_x(num 0)
K_as_sassign:  lhs=Var(primesya/evariant_output%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=evariant, io_output=true})
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/evariant_output%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=evariant, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>evariant<, >HwWidth<>32<
 NETGEN io=OUTPUT id=evariant is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=false, dims=<NONE>
netgen ans=evariant[31:0]:OUTPUT::Signed{init=0, io_output=true, username=evariant, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/evariant_output := CE_x(num 0)
QX9: gt_step:KER_constant_meet:threadstart//T403/.cctor kcode0007:   sassign primesya/edesign := CE_x(num 4032)
K_as_sassign:  lhs=Var(primesya/edesign%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=edesign, io_output=true})
     sassign rhs=CE_x(num 4032)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/edesign%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=edesign, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>edesign<, >HwWidth<>32<
 NETGEN io=OUTPUT id=edesign is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=false, dims=<NONE>
netgen ans=edesign[31:0]:OUTPUT::Signed{init=0, io_output=true, username=edesign, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/edesign := CE_x(num 4032)
QX9: gt_step:KER_constant_meet:threadstart//T403/.cctor kcode0008:   sassign primesya/finished := CE_x(num 0)
K_as_sassign:  lhs=Var(primesya/finished%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=finished, io_output=true})
     sassign rhs=CE_x(num 0)

Netgen: Wt for Var(primesya/finished%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=finished, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>finished<
 NETGEN io=OUTPUT id=finished is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 1, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=finished:OUTPUT::Unsigned{init=0, io_output=true, username=finished}
evolve_scalar: nona: tag=KES:primesya/finished := CE_x(bnumU U1'0)
QX9: gt_step:KER_constant_meet:threadstart//T403/.cctor kcode0009: K_topret(NONE)
marking a diff (degenerate case) on 0
Constant Meet: 0-9-F-nA=0:0: Change to constants out
T403: Constant_fold meet iteration 1
Constant Meet: 0-9-F-nA=0:0 No change to constants in
WF:constant_fold_meets tid=T403 entry_point=0: constant_fold: finished iterate over basic blocks
WF:KiwiC-stages: tid=T403: End of constant folding
ignored eq for store1 V0001: :  lhs=d2  rhs=d2
ignored eq for store1 V0002: :  lhs=d2  rhs=d2
Ataken scan complete. 9 items.
Rendering basic block 0/1   0-9-F
WF:elab5_render T403: commence
WF:elab5_render T403: elab5_render T403: Block start. PCT403:0
emit at 2: label T403_0
elab5_render T403Start generate traj 0 .. 9
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T403: Block start. PCT403:0:SrcStack=
 --- ThreadStart_cctor16
 kcode0000:   sassign primesya/limit := CE_x(num 1000)
K_as_sassign:  lhs=Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )
     sassign rhs=CE_x(num 1000)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/limit is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/limit[-2147483648..2147483647]:LOCAL::Signed{init=0}
evolve_scalar: nona: tag=KES:primesya/limit := CE_x(num 1000)
hpr emit at 4:primesya/limit := 1000;



QX9: gt_step:KER_code_generation:threadstart//T403/.cctor kcode0001:   sassign CS/0.4/refxxarray12 := CE_newarr[primesya/limit]
K_as_sassign:  lhs=Var(CS/0.4/refxxarray12%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )
     sassign rhs=CE_newarr(CTL_net(false, 1, Unsigned,[native]), Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), CS/0.4/aitem12,PA_)

    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
ct2idl CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000) ans= @/BOOL
obj_alloc_core for CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000): reallyf=true Heap pointer was CEE_heapspace(401040,^2=(400040,1000,CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000)), (400000,40,CT_arr(CTL_net(false, 32, Signed,[native]), 10)),inuse=400000, discreps=<NONE>)
 obj_alloc: storemode=STOREMODE_runtime_heap reallyf=true widl=@/BOOL bytes=1000 bytes at 400040.  ce=CE_x(num 400040)
Record_memdesc_item: regf=true msg=newarr nemtok=CS/0.4/aitem12  vuid=PHYS {name = ["@_BOOL"];
      dtidl = ["BOOL"; "@"];
      baser = 400040L;
      length = Some 1000L;}
Allocated array CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true}), 1000 bytes at 400040  aid=CS/0.4/aitem12
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
Netgen: Wt for Var(CS/0.4/refxxarray12%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=CS/0.4/refxxarray12 is_string=false
 NETGEN L2662 ARR/NET n=1 io=LOCAL
lnetgen: netgen dt=&(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), use_integer=false, dims=<NONE>
netgen ans=CS/0.4/refxxarray12:LOCAL::Unsigned{init=0}
evolve_scalar: nona: tag=KES:CS/0.4/refxxarray12 := CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
hpr emit at 5:CS/0.4/refxxarray12 := {SC:d2,S64'400040};



QX9: gt_step:KER_code_generation:threadstart//T403/.cctor kcode0002:   sassign primesya/PA := CS/0.4/refxxarray12
K_as_sassign:  lhs=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )
     sassign rhs=Var(CS/0.4/refxxarray12%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )

    nona   envlook uid=CS/0.4/refxxarray12%$star1$/@/BOOL%-1000%None
    nona   envlook tag=KES:CS/0.4/refxxarray12 env_value=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
Netgen: Wt for Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/PA is_string=false
 NETGEN L2662 ARR/NET n=1 io=LOCAL
lnetgen: netgen dt=&(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), use_integer=false, dims=<NONE>
netgen ans=primesya/PA:LOCAL::Unsigned{init=0}
evolve_scalar: nona: tag=KES:primesya/PA := CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
hpr emit at 6:primesya/PA := {SC:d2,S64'400040};



QX9: gt_step:KER_code_generation:threadstart//T403/.cctor kcode0003:   sassign primesya/count := CE_x(num 0)
K_as_sassign:  lhs=Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Unsigned,[native])
Netgen: Wt for Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>count<, >HwWidth<>32<
 NETGEN io=OUTPUT id=count is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=count[31:0]:OUTPUT::Unsigned{init=0, io_output=true, username=count, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/count := CE_x(bnumU U32'0)
hpr emit at 7:count := U32'0;



QX9: gt_step:KER_code_generation:threadstart//T403/.cctor kcode0004:   sassign primesya/count1 := CE_x(num 0)
K_as_sassign:  lhs=Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/count1 is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/count1[-2147483648..2147483647]:LOCAL::Signed{init=0}
evolve_scalar: nona: tag=KES:primesya/count1 := CE_x(num 0)
hpr emit at 8:primesya/count1 := 0;



QX9: gt_step:KER_code_generation:threadstart//T403/.cctor kcode0005:   sassign primesya/elimit := CE_x(num 0)
K_as_sassign:  lhs=Var(primesya/elimit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=elimit, io_output=true})
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/elimit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=elimit, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>elimit<, >HwWidth<>32<
 NETGEN io=OUTPUT id=elimit is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=false, dims=<NONE>
netgen ans=elimit[31:0]:OUTPUT::Signed{init=0, io_output=true, username=elimit, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/elimit := CE_x(num 0)
hpr emit at 9:elimit := 0;



QX9: gt_step:KER_code_generation:threadstart//T403/.cctor kcode0006:   sassign primesya/evariant_output := CE_x(num 0)
K_as_sassign:  lhs=Var(primesya/evariant_output%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=evariant, io_output=true})
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/evariant_output%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=evariant, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>evariant<, >HwWidth<>32<
 NETGEN io=OUTPUT id=evariant is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=false, dims=<NONE>
netgen ans=evariant[31:0]:OUTPUT::Signed{init=0, io_output=true, username=evariant, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/evariant_output := CE_x(num 0)
hpr emit at 10:evariant := 0;



QX9: gt_step:KER_code_generation:threadstart//T403/.cctor kcode0007:   sassign primesya/edesign := CE_x(num 4032)
K_as_sassign:  lhs=Var(primesya/edesign%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=edesign, io_output=true})
     sassign rhs=CE_x(num 4032)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/edesign%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=edesign, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>edesign<, >HwWidth<>32<
 NETGEN io=OUTPUT id=edesign is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=false, dims=<NONE>
netgen ans=edesign[31:0]:OUTPUT::Signed{init=0, io_output=true, username=edesign, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/edesign := CE_x(num 4032)
hpr emit at 11:edesign := 4032;



QX9: gt_step:KER_code_generation:threadstart//T403/.cctor kcode0008:   sassign primesya/finished := CE_x(num 0)
K_as_sassign:  lhs=Var(primesya/finished%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=finished, io_output=true})
     sassign rhs=CE_x(num 0)

Netgen: Wt for Var(primesya/finished%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=finished, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>finished<
 NETGEN io=OUTPUT id=finished is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 1, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=finished:OUTPUT::Unsigned{init=0, io_output=true, username=finished}
evolve_scalar: nona: tag=KES:primesya/finished := CE_x(bnumU U1'0)
hpr emit at 12:finished := U1'0;



QX9: gt_step:KER_code_generation:threadstart//T403/.cctor kcode0009: K_topret(NONE)
hpr emit at 13:Xreturn 0;


elab5_render T403ran off end
hpr top/tail emit: 14:Xreturn 1;


hpr emit at 14:Xreturn 1;


hpr top/tail emit: 15:// End of DIC comment 1



hpr emit at 15:// End of DIC comment 1



WF:Assemble VM: T403_.cctor: start
WF:reassemble_dic: start
WF:reassemble_dic: Reassembled 16 dic locations
redirect optimise 0/16
WF:Assemble VM: T403_.cctor: finished 16 instructions. gc=
WF:main pass of thread used for .cctor: ending
WF:optimise_dic .cctor uid=cctor16: starting anal
WF:optimise_dic .cctor uid=cctor16: done anal
WF:optimise_dic .cctor uid=cctor16: starting kill (commenting out) of spare lines
WF:optimise_dic .cctor uid=cctor16: done kill of spare lines
WF:TSTART tree_walk specificf: .cctor this=Var(ktop16%primesya%-1000%None, CT_cr(primesya, <<NONE>>), ..., {constant=true}): FINISHED COMPILE OF THREAD/EP
rip_exec_code : constructor block count=1, others=0
Jump to end at 13
Jump to end at 14
Root method elaborated: specificf=S_kickoff_collate leftover=1+3
WF:KiwiC: Created VM2 machine : cctor24end
WF:root_walk start thread at a static method (used as an entry point). Method name=.cctor uid=cctor16: root e/p end
WF:KiwiC: front end input processing of class or method called primesya: done






WF:Kiwic: processing root attribute-marked item: root refers to primesya: start
ct2idl CT_cr(primesya, <<NONE>>) ans= primesya
aid was not yet inserted in ataken base: aid=ktop18 0 heapspace=false
nonataken oracle: ktop18 d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-phy nemtok=ktop18  vuid=PHYS {name = ["ktop18"];
      dtidl = ["primesya"];
      baser = -1000L;
      length = null;}
compile9 root dt=CT_cr(primesya, <<NONE>>)
WF:KiwiC: front end input processing of class or method called primesya: start
WF:root_compiler: elaborating class 'primesya'


----------------------------------------------------
WF:root_classwalk MM_root start , Specificf=S_root_class target='primesya'' items=13: Start
<NONE>
Detected (rootmarked) method as an entrypoint for primesya Main []
Detected (rootmarked) method as an entrypoint for primesya .ctor is false
Detected (rootmarked) method as an entrypoint for primesya .cctor is false
Report on potential class static method compilation root entry points (Remotes will only be used if not called)
  "Root": primesya/Main args=<NONE>
End report on potential class static method compilation root entry points (Remotes will only be used if not called) (1 items)

WF:root_classwalk MM_root start , Specificf=S_root_class target='primesya'' items=13: root_classwalk MM_root start , Specificf=S_root_class target='primesya'' items=13 start pass: style=MM_root phase=P_fields
WF:Incorporating static field: primesya/limit
WF:field_def: : Incorporating static
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=primesya/limit bytes=0 bytes at 30112.  ce=CE_x(num 30112)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
static_field_def: normed type is CTL_net(false, 32, Signed,[native]) for primesya/limit%SINT%30112%None
I/O designation for primesya/limit%SINT%30112%None is LOCAL
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=primesya/limit bytes=4 bytes at 30112.  ce=CE_x(num 30112)
named reg existed sheap Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )


WF:Incorporating static field: primesya/PA
WF:field_def: : Incorporating static
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=primesya/PA bytes=0 bytes at 30120.  ce=CE_x(num 30120)
ct2idl &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)) ans= $star1$/@/BOOL
static_field_def: normed type is &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)) for primesya/PA%$star1$/@/BOOL%30120%None
I/O designation for primesya/PA%$star1$/@/BOOL%30120%None is LOCAL
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=primesya/PA bytes=4 bytes at 30120.  ce=CE_x(num 30120)
named reg existed sheap Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )


WF:Incorporating static field: primesya/vol
WF:field_def: : Incorporating static
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=primesya/vol bytes=0 bytes at 30128.  ce=CE_x(num 30128)
ct2idl CTL_net(false, 32, Unsigned,[native]) ans= UINT
static_field_def: normed type is CTL_net(false, 32, Unsigned,[native]) for primesya/vol%UINT%30128%None
Selected custom width bit range lables 31:0
I/O designation for primesya/vol%UINT%30128%None is INPUT
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=primesya/vol bytes=4 bytes at 30128.  ce=CE_x(num 30128)
ct2idl CTL_net(false, 32, Unsigned,[native]) ans= UINT
Record_memdesc_item: regf=false msg=uav-phy nemtok=primesya/vol  vuid=PHYS {name = ["primesya/vol"];
      dtidl = ["UINT"];
      baser = -1000L;
      length = null;}


WF:Incorporating static field: primesya/count
WF:field_def: : Incorporating static
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=primesya/count bytes=0 bytes at 30136.  ce=CE_x(num 30136)
ct2idl CTL_net(false, 32, Unsigned,[native]) ans= UINT
static_field_def: normed type is CTL_net(false, 32, Unsigned,[native]) for primesya/count%UINT%30136%None
Selected custom width bit range lables 31:0
I/O designation for primesya/count%UINT%30136%None is OUTPUT
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=primesya/count bytes=4 bytes at 30136.  ce=CE_x(num 30136)
named reg existed sheap Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})


WF:Incorporating static field: primesya/count1
WF:field_def: : Incorporating static
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=primesya/count1 bytes=0 bytes at 30144.  ce=CE_x(num 30144)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
static_field_def: normed type is CTL_net(false, 32, Signed,[native]) for primesya/count1%SINT%30144%None
I/O designation for primesya/count1%SINT%30144%None is LOCAL
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=primesya/count1 bytes=4 bytes at 30144.  ce=CE_x(num 30144)
named reg existed sheap Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )


WF:Incorporating static field: primesya/elimit
WF:field_def: : Incorporating static
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=primesya/elimit bytes=0 bytes at 30152.  ce=CE_x(num 30152)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
static_field_def: normed type is CTL_net(false, 32, Signed,[native]) for primesya/elimit%SINT%30152%None
Selected custom width bit range lables 31:0
I/O designation for primesya/elimit%SINT%30152%None is OUTPUT
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=primesya/elimit bytes=4 bytes at 30152.  ce=CE_x(num 30152)
named reg existed sheap Var(primesya/elimit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=elimit, io_output=true})


WF:Incorporating static field: primesya/evariant_master
WF:field_def: : Incorporating static
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=primesya/evariant_master bytes=0 bytes at 30160.  ce=CE_x(num 30160)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
static_field_def: normed type is CTL_net(false, 32, Signed,[native]) for primesya/evariant_master%SINT%30160%None
I/O designation for primesya/evariant_master%SINT%30160%None is LOCAL
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=primesya/evariant_master bytes=4 bytes at 30160.  ce=CE_x(num 30160)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
aid was not yet inserted in ataken base: aid=primesya/evariant_master 0 heapspace=false
nonataken oracle: primesya/evariant_master d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-phy nemtok=primesya/evariant_master  vuid=PHYS {name = ["primesya/evariant_master"];
      dtidl = ["SINT"];
      baser = -1000L;
      length = null;}


WF:Incorporating static field: primesya/evariant_output
WF:field_def: : Incorporating static
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=primesya/evariant_output bytes=0 bytes at 30168.  ce=CE_x(num 30168)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
static_field_def: normed type is CTL_net(false, 32, Signed,[native]) for primesya/evariant_output%SINT%30168%None
Selected custom width bit range lables 31:0
I/O designation for primesya/evariant_output%SINT%30168%None is OUTPUT
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=primesya/evariant_output bytes=4 bytes at 30168.  ce=CE_x(num 30168)
named reg existed sheap Var(primesya/evariant_output%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=evariant, io_output=true})


WF:Incorporating static field: primesya/edesign
WF:field_def: : Incorporating static
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=primesya/edesign bytes=0 bytes at 30176.  ce=CE_x(num 30176)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
static_field_def: normed type is CTL_net(false, 32, Signed,[native]) for primesya/edesign%SINT%30176%None
Selected custom width bit range lables 31:0
I/O designation for primesya/edesign%SINT%30176%None is OUTPUT
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=primesya/edesign bytes=4 bytes at 30176.  ce=CE_x(num 30176)
named reg existed sheap Var(primesya/edesign%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=edesign, io_output=true})


WF:Incorporating static field: primesya/finished
WF:field_def: : Incorporating static
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=primesya/finished bytes=0 bytes at 30184.  ce=CE_x(num 30184)
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
static_field_def: normed type is CTL_net(false, 1, Unsigned,[native]) for primesya/finished%BOOL%30184%None
I/O designation for primesya/finished%BOOL%30184%None is OUTPUT
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=primesya/finished bytes=1 bytes at 30184.  ce=CE_x(num 30184)
named reg existed sheap Var(primesya/finished%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=finished, io_output=true})


consider primesya/Main main pass: called already=false ,  e/p args=<NONE>
consider primesya/Main main pass: called already=false major_hls_mode=MM_classical_hls
compiling static method as entry point: style=Root idl=primesya/Main
WF:root_classwalk MM_root start , Specificf=S_root_class target='primesya'' items=13: root_classwalk MM_root start , Specificf=S_root_class target='primesya'' items=13 start pass: style=MM_classical_hls phase=P_final
Performing root elaboration of method Main
phase=P_final : Keep for root primesya (ctor_flag=false) (gids=Main) keep=true 
WF:TSTART classwalk method user root:primesya this=Var(ktop18%primesya%-1000%None, CT_cr(primesya, <<NONE>>), ..., {constant=true}): START COMPILE OF THREAD/EP. tailhang=true specificf=S_root_method
WF:KiwiC start_thread (or entry point) id=Main10: Commence
Env at start of thread T404  KES:CS/0.4/refxxarray12 --> =CEE_scalar(CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})) 
Env at start of thread T404  KES:CS/0.6/refxxarray10 --> =CEE_scalar(CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})) 
Env at start of thread T404  KES:KSubs2_Director/design_serial_number --> =CEE_scalar(CE_x(bnumS S32'2232578)) 
Env at start of thread T404  KES:KSubs2_Director/pio_rdata --> =CEE_scalar(CE_x(num 0)) 
Env at start of thread T404  KES:KSubs2_Director/pio_space --> =CEE_scalar(CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})) 
Env at start of thread T404  KES:KiwiSystem/Kiwi/old_pausemode_value --> =CEE_scalar(CE_x(bnumU U32'2)) 
Env at start of thread T404  KES:KiwiSystem/Kiwi/tnow --> =CEE_scalar(CE_x(bnumU U64'0)) 
Env at start of thread T404  KES:System/BitConverter/IsLittleEndian --> =CEE_scalar(CE_x(bnumU U1'1)) 
Env at start of thread T404  KES:$memmap/heapbrk --> =CEE live CEE_heapspace(401040,^2=(400040,1000,CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000)), (400000,40,CT_arr(CTL_net(false, 32, Signed,[native]), 10)),inuse=400000, 400040, discreps=<NONE>) 
Env at start of thread T404  KES:primesya/PA --> =CEE_scalar(CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})) 
Env at start of thread T404  KES:primesya/count --> =CEE_scalar(CE_x(bnumU U32'0)) 
Env at start of thread T404  KES:primesya/count1 --> =CEE_scalar(CE_x(num 0)) 
Env at start of thread T404  KES:primesya/edesign --> =CEE_scalar(CE_x(num 4032)) 
Env at start of thread T404  KES:primesya/elimit --> =CEE_scalar(CE_x(num 0)) 
Env at start of thread T404  KES:primesya/evariant_output --> =CEE_scalar(CE_x(num 0)) 
Env at start of thread T404  KES:primesya/finished --> =CEE_scalar(CE_x(bnumU U1'0)) 
Env at start of thread T404  KES:primesya/limit --> =CEE_scalar(CE_x(num 1000)) 
Env at start of thread T404  KES:$memmap/staticbrk --> =CEE live CEE_int(30192) 
etarget =etarget18 retlab=T404tzailhang_
Generating tail hang code for T404tzailhang_
WF:main KiwiC pass of Main uid=Main10: Commence
WF:generate_kcoder: start iteration 0
typecheck: Inserted 0 method arguments
WF:First pass of primesya/T404/Main/T404/Main/Main10: Commence
code_setup: keep_return=true, tailhangf=true

code_setup: sequence of 388 instructions

Report on Dest labs used
  LL322
  LL352
  LL385
  LL174
  LL214
  LL263
  LL289
  LL209
  LL278
  LL96
  LL141
End report on Dest labs used (11 items)

Redirecting returns to cbgtailhang10
WF:First pass of primesya/T404/Main/T404/Main/Main10: Firstpass spills done. Typecheck start.
First pass structure made for primesya/T404/Main/T404/Main/Main10 of length 18 with 145 CIL instructions
pc=0: Making 0 spills
Made spills
pc=2: Making 0 spills
Made spills
pc=3: Making 0 spills
Made spills
pc=10: Making 0 spills
Made spills
pc=11: Making 0 spills
Made spills
pc=15: Making 0 spills
Made spills
pc=16: Making 0 spills
Made spills
pc=17: Making 0 spills
Made spills
pc=12: Making 0 spills
Made spills
pc=13: Making 0 spills
Made spills
pc=14: Making 0 spills
Made spills
pc=4: Making 0 spills
Made spills
pc=5: Making 0 spills
Made spills
pc=6: Making 0 spills
Made spills
pc=8: Making 0 spills
Made spills
pc=9: Making 0 spills
Made spills
pc=7: Making 0 spills
Made spills
pc=1: Making 0 spills
Made spills
reachable basic block pcvalues 17, 16, 13, 14, 12, 15, 11, 5, 9, 7, 8, 6, 4, 10, 3, 1, 2, 0
WF:elab_block: primesya/T404/Main/T404/Main/Main10--typecheck--------------------- pc=0
CIL_custom encountered .ctor
Custom method att encountered: KiwiSystem/Kiwi/HardwareEntryPoint
<NONE>
Report on Custom Attribute Marshalled Args: none exist.
WF:elabf: CIL_locals clause: 5 locals to define
WF:elabf: CIL_locals clause: Defining local 0 V_0 fullname=primesya/T404/Main/T404/Main/V_0 callstring=primesya/T404/Main/LV:0:0 ctype=(valuetype [System]Boolean)
WF:elabf: CIL_locals clause: Defining local 1 V_1 fullname=primesya/T404/Main/T404/Main/V_1 callstring=primesya/T404/Main/LV:0:1 ctype=(valuetype [System]Int32)
WF:elabf: CIL_locals clause: Defining local 2 V_2 fullname=primesya/T404/Main/T404/Main/V_2 callstring=primesya/T404/Main/LV:0:2 ctype=(valuetype [System]Int32)
WF:elabf: CIL_locals clause: Defining local 3 V_3 fullname=primesya/T404/Main/T404/Main/V_3 callstring=primesya/T404/Main/LV:0:3 ctype=(valuetype [System]Int32)
WF:elabf: CIL_locals clause: Defining local 4 V_4 fullname=primesya/T404/Main/T404/Main/V_4 callstring=primesya/T404/Main/LV:0:4 ctype=(valuetype [System]Int32)
Drop ldsfld callstring=primesya/T404/Main/CZ:0:4 dt=CTL_net(false, 32, Signed,[native]) idl=limit
Drop stsfld callstring=primesya/T404/Main/CZ:0:5 dt=CT_cr(primesya, <<NONE>>) idl=elimit
WF:typecheck: Cili_call KiwiSystem/Kiwi/KppMark ncp=primesya/T404/Main/CZ:0:8/of/ZZKppMark10
set waypoint: oldwp=csharp/primes_offchip.exe:<no codepoint>callstring__=First pass of primesya/T404/Main/T404/Main/Main10:SrcStack= newwp=START
Drop ldsfld callstring=primesya/T404/Main/CZ:0:10 dt=CTL_net(false, 32, Signed,[native]) idl=limit
WF:typecheck: Cili_call System/String/Concat ncp=primesya/T404/Main/CZ:0:12/of/ZZConcat20
WF:typecheck: Cili_call System/Console/WriteLine ncp=primesya/T404/Main/CZ:0:13/of/ZZWriteLine16
WF:typecheck: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:0:14/of/ZZPause24
Drop ldsfld callstring=primesya/T404/Main/CZ:0:15 dt=&(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)) idl=PA
Drop ldsfld callstring=primesya/T404/Main/CZ:0:17 dt=CTL_net(false, 32, Unsigned,[native]) idl=vol
WF:typecheck: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:0:21/of/ZZPause26
Drop stsfld callstring=primesya/T404/Main/CZ:0:23 dt=CT_cr(primesya, <<NONE>>) idl=count1
Drop stsfld callstring=primesya/T404/Main/CZ:0:25 dt=CT_cr(primesya, <<NONE>>) idl=count
WF:elab_block: primesya/T404/Main/T404/Main/Main10--typecheck--------------------- pc=2
Drop ldsfld callstring=primesya/T404/Main/CZ:2:2 dt=CTL_net(false, 32, Signed,[native]) idl=limit
WF:elab_block: primesya/T404/Main/T404/Main/Main10--typecheck--------------------- pc=1
WF:typecheck: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:1:1/of/ZZPause28
Drop ldsfld callstring=primesya/T404/Main/CZ:1:2 dt=&(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)) idl=PA
Drop ldsfld callstring=primesya/T404/Main/CZ:1:9 dt=&(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)) idl=PA
WF:typecheck: Cili_call System/Console/WriteLine ncp=primesya/T404/Main/CZ:1:13/of/ZZWriteLine18
WF:elab_block: primesya/T404/Main/T404/Main/Main10--typecheck--------------------- pc=3
WF:typecheck: Cili_call KiwiSystem/Kiwi/KppMark ncp=primesya/T404/Main/CZ:3:2/of/ZZKppMark12
set waypoint: oldwp=csharp/primes_offchip.exe:<no codepoint>START:callstring__=First pass of primesya/T404/Main/T404/Main/Main10:SrcStack= newwp=wp2
WF:elab_block: primesya/T404/Main/T404/Main/Main10--typecheck--------------------- pc=10
Drop ldsfld callstring=primesya/T404/Main/CZ:10:2 dt=CTL_net(false, 32, Signed,[native]) idl=limit
WF:elab_block: primesya/T404/Main/T404/Main/Main10--typecheck--------------------- pc=4
WF:typecheck: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:4:1/of/ZZPause30
Drop ldsfld callstring=primesya/T404/Main/CZ:4:7 dt=CTL_net(false, 32, Signed,[native]) idl=limit
WF:elab_block: primesya/T404/Main/T404/Main/Main10--typecheck--------------------- pc=6
WF:elab_block: primesya/T404/Main/T404/Main/Main10--typecheck--------------------- pc=8
Drop ldsfld callstring=primesya/T404/Main/CZ:8:2 dt=CTL_net(false, 32, Signed,[native]) idl=limit
WF:elab_block: primesya/T404/Main/T404/Main/Main10--typecheck--------------------- pc=7
Drop ldsfld callstring=primesya/T404/Main/CZ:7:6 dt=CTL_net(false, 32, Signed,[native]) idl=count1
WF:typecheck: Cili_call System/Console/WriteLine ncp=primesya/T404/Main/CZ:7:8/of/ZZWriteLine22
WF:typecheck: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:7:9/of/ZZPause32
Drop ldsfld callstring=primesya/T404/Main/CZ:7:10 dt=&(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)) idl=PA
WF:elab_block: primesya/T404/Main/T404/Main/Main10--typecheck--------------------- pc=9
WF:elab_block: primesya/T404/Main/T404/Main/Main10--typecheck--------------------- pc=5
WF:typecheck: Cili_call System/Console/WriteLine ncp=primesya/T404/Main/CZ:5:1/of/ZZWriteLine20
WF:elab_block: primesya/T404/Main/T404/Main/Main10--typecheck--------------------- pc=11
WF:typecheck: Cili_call KiwiSystem/Kiwi/KppMark ncp=primesya/T404/Main/CZ:11:3/of/ZZKppMark14
set waypoint: oldwp=csharp/primes_offchip.exe:<no codepoint>wp2:callstring__=First pass of primesya/T404/Main/T404/Main/Main10:SrcStack= newwp=wp3
WF:typecheck: Cili_call System/Console/WriteLine ncp=primesya/T404/Main/CZ:11:5/of/ZZWriteLine24
WF:elab_block: primesya/T404/Main/T404/Main/Main10--typecheck--------------------- pc=15
Drop ldsfld callstring=primesya/T404/Main/CZ:15:2 dt=CTL_net(false, 32, Signed,[native]) idl=limit
WF:elab_block: primesya/T404/Main/T404/Main/Main10--typecheck--------------------- pc=12
WF:typecheck: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:12:1/of/ZZPause34
Drop ldsfld callstring=primesya/T404/Main/CZ:12:2 dt=&(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)) idl=PA
WF:elab_block: primesya/T404/Main/T404/Main/Main10--typecheck--------------------- pc=14
Drop ldsfld callstring=primesya/T404/Main/CZ:14:4 dt=CTL_net(false, 32, Unsigned,[native]) idl=count
WF:typecheck: Cili_call System/Console/WriteLine ncp=primesya/T404/Main/CZ:14:6/of/ZZWriteLine26
WF:elab_block: primesya/T404/Main/T404/Main/Main10--typecheck--------------------- pc=13
Drop ldsfld callstring=primesya/T404/Main/CZ:13:0 dt=CTL_net(false, 32, Unsigned,[native]) idl=count
Drop stsfld callstring=primesya/T404/Main/CZ:13:3 dt=CT_cr(primesya, <<NONE>>) idl=count
WF:elab_block: primesya/T404/Main/T404/Main/Main10--typecheck--------------------- pc=16
Drop ldsfld callstring=primesya/T404/Main/CZ:16:1 dt=CTL_net(false, 32, Unsigned,[native]) idl=count
Drop ldsfld callstring=primesya/T404/Main/CZ:16:3 dt=CTL_net(false, 32, Signed,[native]) idl=limit
WF:typecheck: Cili_call System/Console/WriteLine ncp=primesya/T404/Main/CZ:16:5/of/ZZWriteLine28
Drop ldsfld callstring=primesya/T404/Main/CZ:16:7 dt=CTL_net(false, 32, Signed,[native]) idl=count1
WF:typecheck: Cili_call System/Console/WriteLine ncp=primesya/T404/Main/CZ:16:11/of/ZZWriteLine30
WF:typecheck: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:16:12/of/ZZPause36
WF:typecheck: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:16:13/of/ZZPause38
WF:typecheck: Cili_call KiwiSystem/Kiwi/KppMark ncp=primesya/T404/Main/CZ:16:15/of/ZZKppMark16
set waypoint: oldwp=csharp/primes_offchip.exe:<no codepoint>wp3:callstring__=First pass of primesya/T404/Main/T404/Main/Main10:SrcStack= newwp=FINISH
WF:typecheck: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:16:16/of/ZZPause40
Drop stsfld callstring=primesya/T404/Main/CZ:16:18 dt=CT_cr(primesya, <<NONE>>) idl=finished
WF:typecheck: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:16:19/of/ZZPause42
WF:elab_block: primesya/T404/Main/T404/Main/Main10--typecheck--------------------- pc=17
WF:typecheck: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:17:1/of/ZZtailhang10
WF:First pass of primesya/T404/Main/T404/Main/Main10: Firstpass and typecheck done.
 Concourse reachable is 0, 2, 3, 10, 11, 15, 16, 17, 12, 13, 14, 4, 5, 6, 8, 9, 7, 1
 Exit states are <NONE>
WF:First pass of primesya/T404/Main/T404/Main/Main10: End of first pass
WF:rehydrate droppings for : start Main
Typenorm classref primesya requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
Typenorm classref primesya requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
Typenorm classref primesya requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
Typenorm classref primesya requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
Typenorm classref primesya requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["primesya"]
WF:rehydrate droppings for : done Main
gtrace: Inserted 0 method arguments
WF:elab_block: primesya/T404/Main/T404/Main/Main10--gtrace--------------------- pc=0
CIL_custom encountered .ctor
Custom method att encountered: KiwiSystem/Kiwi/HardwareEntryPoint
<NONE>
Report on Custom Attribute Marshalled Args: none exist.
WF:elabf: CIL_locals clause: 5 locals to define
WF:elabf: CIL_locals clause: Defining local 0 V_0 fullname=primesya/T404/Main/T404/Main/V_0 callstring=primesya/T404/Main/LV:0:0 ctype=(valuetype [System]Boolean)
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
aid was not yet inserted in ataken base: aid=primesya/T404/Main/T404/Main/V_0 0 heapspace=false
nonataken oracle: primesya/T404/Main/T404/Main/V_0 d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-vrn nemtok=primesya/T404/Main/T404/Main/V_0  vuid=VIRT 5002
local_var_def: Defining local 0 V_0 fullname=primesya/T404/Main/T404/Main/V_0 callstring=primesya/T404/Main/LV:0:0 ctype=(valuetype [System]Boolean) : vrn=VR5002 size=1 bytes ce=V5002 idl=primesya/T404/Main/T404/Main/V_0 type=CTL_net(false, 1, Unsigned,[native]) storemode=STOREMODE_scalar_static
WF:elabf: CIL_locals clause: Defining local 1 V_1 fullname=primesya/T404/Main/T404/Main/V_1 callstring=primesya/T404/Main/LV:0:1 ctype=(valuetype [System]Int32)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
aid was not yet inserted in ataken base: aid=primesya/T404/Main/T404/Main/V_1 0 heapspace=false
nonataken oracle: primesya/T404/Main/T404/Main/V_1 d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-vrn nemtok=primesya/T404/Main/T404/Main/V_1  vuid=VIRT 5003
local_var_def: Defining local 1 V_1 fullname=primesya/T404/Main/T404/Main/V_1 callstring=primesya/T404/Main/LV:0:1 ctype=(valuetype [System]Int32) : vrn=VR5003 size=4 bytes ce=V5003 idl=primesya/T404/Main/T404/Main/V_1 type=CTL_net(false, 32, Signed,[native]) storemode=STOREMODE_scalar_static
WF:elabf: CIL_locals clause: Defining local 2 V_2 fullname=primesya/T404/Main/T404/Main/V_2 callstring=primesya/T404/Main/LV:0:2 ctype=(valuetype [System]Int32)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
aid was not yet inserted in ataken base: aid=primesya/T404/Main/T404/Main/V_2 0 heapspace=false
nonataken oracle: primesya/T404/Main/T404/Main/V_2 d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-vrn nemtok=primesya/T404/Main/T404/Main/V_2  vuid=VIRT 5004
local_var_def: Defining local 2 V_2 fullname=primesya/T404/Main/T404/Main/V_2 callstring=primesya/T404/Main/LV:0:2 ctype=(valuetype [System]Int32) : vrn=VR5004 size=4 bytes ce=V5004 idl=primesya/T404/Main/T404/Main/V_2 type=CTL_net(false, 32, Signed,[native]) storemode=STOREMODE_scalar_static
WF:elabf: CIL_locals clause: Defining local 3 V_3 fullname=primesya/T404/Main/T404/Main/V_3 callstring=primesya/T404/Main/LV:0:3 ctype=(valuetype [System]Int32)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
aid was not yet inserted in ataken base: aid=primesya/T404/Main/T404/Main/V_3 0 heapspace=false
nonataken oracle: primesya/T404/Main/T404/Main/V_3 d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-vrn nemtok=primesya/T404/Main/T404/Main/V_3  vuid=VIRT 5005
local_var_def: Defining local 3 V_3 fullname=primesya/T404/Main/T404/Main/V_3 callstring=primesya/T404/Main/LV:0:3 ctype=(valuetype [System]Int32) : vrn=VR5005 size=4 bytes ce=V5005 idl=primesya/T404/Main/T404/Main/V_3 type=CTL_net(false, 32, Signed,[native]) storemode=STOREMODE_scalar_static
WF:elabf: CIL_locals clause: Defining local 4 V_4 fullname=primesya/T404/Main/T404/Main/V_4 callstring=primesya/T404/Main/LV:0:4 ctype=(valuetype [System]Int32)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
aid was not yet inserted in ataken base: aid=primesya/T404/Main/T404/Main/V_4 0 heapspace=false
nonataken oracle: primesya/T404/Main/T404/Main/V_4 d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-vrn nemtok=primesya/T404/Main/T404/Main/V_4  vuid=VIRT 5006
local_var_def: Defining local 4 V_4 fullname=primesya/T404/Main/T404/Main/V_4 callstring=primesya/T404/Main/LV:0:4 ctype=(valuetype [System]Int32) : vrn=VR5006 size=4 bytes ce=V5006 idl=primesya/T404/Main/T404/Main/V_4 type=CTL_net(false, 32, Signed,[native]) storemode=STOREMODE_scalar_static
named reg existed sheap Var(primesya/elimit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=elimit, io_output=true})
WF:gtrace: Cili_call KiwiSystem/Kiwi/KppMark ncp=primesya/T404/Main/CZ:0:8/of/ZZKppMark10
set waypoint: oldwp=csharp/primes_offchip.exe:<no codepoint>callstring__=gtrace pass of method Main10:SrcStack=
 --- EntryPoint_T404
 newwp=START
WF:gtrace: Cili_call System/String/Concat ncp=primesya/T404/Main/CZ:0:12/of/ZZConcat20
WF:gtrace: Cili_call System/Console/WriteLine ncp=primesya/T404/Main/CZ:0:13/of/ZZWriteLine16
WF:gtrace: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:0:14/of/ZZPause24
WF:gtrace: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:0:21/of/ZZPause26
named reg existed sheap Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )
named reg existed sheap Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})
WF:elab_block: primesya/T404/Main/T404/Main/Main10--gtrace--------------------- pc=1
WF:gtrace: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:1:1/of/ZZPause28
WF:gtrace: Cili_call System/Console/WriteLine ncp=primesya/T404/Main/CZ:1:13/of/ZZWriteLine18
WF:elab_block: primesya/T404/Main/T404/Main/Main10--gtrace--------------------- pc=2
WF:elab_block: primesya/T404/Main/T404/Main/Main10--gtrace--------------------- pc=3
WF:gtrace: Cili_call KiwiSystem/Kiwi/KppMark ncp=primesya/T404/Main/CZ:3:2/of/ZZKppMark12
set waypoint: oldwp=csharp/primes_offchip.exe:<no codepoint>START:callstring__=gtrace pass of method Main10:SrcStack=
 --- EntryPoint_T404
 newwp=wp2
WF:elab_block: primesya/T404/Main/T404/Main/Main10--gtrace--------------------- pc=4
WF:gtrace: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:4:1/of/ZZPause30
WF:elab_block: primesya/T404/Main/T404/Main/Main10--gtrace--------------------- pc=5
WF:gtrace: Cili_call System/Console/WriteLine ncp=primesya/T404/Main/CZ:5:1/of/ZZWriteLine20
WF:elab_block: primesya/T404/Main/T404/Main/Main10--gtrace--------------------- pc=6
WF:elab_block: primesya/T404/Main/T404/Main/Main10--gtrace--------------------- pc=7
WF:gtrace: Cili_call System/Console/WriteLine ncp=primesya/T404/Main/CZ:7:8/of/ZZWriteLine22
WF:gtrace: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:7:9/of/ZZPause32
WF:elab_block: primesya/T404/Main/T404/Main/Main10--gtrace--------------------- pc=8
WF:elab_block: primesya/T404/Main/T404/Main/Main10--gtrace--------------------- pc=9
WF:elab_block: primesya/T404/Main/T404/Main/Main10--gtrace--------------------- pc=10
WF:elab_block: primesya/T404/Main/T404/Main/Main10--gtrace--------------------- pc=11
WF:gtrace: Cili_call KiwiSystem/Kiwi/KppMark ncp=primesya/T404/Main/CZ:11:3/of/ZZKppMark14
set waypoint: oldwp=csharp/primes_offchip.exe:<no codepoint>wp2:callstring__=gtrace pass of method Main10:SrcStack=
 --- EntryPoint_T404
 newwp=wp3
WF:gtrace: Cili_call System/Console/WriteLine ncp=primesya/T404/Main/CZ:11:5/of/ZZWriteLine24
WF:elab_block: primesya/T404/Main/T404/Main/Main10--gtrace--------------------- pc=12
WF:gtrace: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:12:1/of/ZZPause34
WF:elab_block: primesya/T404/Main/T404/Main/Main10--gtrace--------------------- pc=13
named reg existed sheap Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})
WF:elab_block: primesya/T404/Main/T404/Main/Main10--gtrace--------------------- pc=14
WF:gtrace: Cili_call System/Console/WriteLine ncp=primesya/T404/Main/CZ:14:6/of/ZZWriteLine26
WF:elab_block: primesya/T404/Main/T404/Main/Main10--gtrace--------------------- pc=15
WF:elab_block: primesya/T404/Main/T404/Main/Main10--gtrace--------------------- pc=16
WF:gtrace: Cili_call System/Console/WriteLine ncp=primesya/T404/Main/CZ:16:5/of/ZZWriteLine28
WF:gtrace: Cili_call System/Console/WriteLine ncp=primesya/T404/Main/CZ:16:11/of/ZZWriteLine30
WF:gtrace: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:16:12/of/ZZPause36
WF:gtrace: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:16:13/of/ZZPause38
WF:gtrace: Cili_call KiwiSystem/Kiwi/KppMark ncp=primesya/T404/Main/CZ:16:15/of/ZZKppMark16
set waypoint: oldwp=csharp/primes_offchip.exe:<no codepoint>wp3:callstring__=gtrace pass of method Main10:SrcStack=
 --- EntryPoint_T404
 newwp=FINISH
WF:gtrace: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:16:16/of/ZZPause40
named reg existed sheap Var(primesya/finished%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=finished, io_output=true})
WF:gtrace: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:16:19/of/ZZPause42
WF:elab_block: primesya/T404/Main/T404/Main/Main10--gtrace--------------------- pc=17
WF:gtrace: Cili_call KiwiSystem/Kiwi/Pause ncp=primesya/T404/Main/CZ:17:1/of/ZZtailhang10
Main10: rsteps at end 9971
ignored eq for store1 V0001: :  lhs=d3  rhs=d3
Ataken scan complete. 10 items.
Thread Main uid=Main10 has 65 CIL instructions in 18 basic blocks
Report on Transitions for T404
  62   63-64-F  --> 63
  53   53-61-F  --> 63
  47   47-47-T  --> 49
  48   49-50-T  --> 52
  44   45-46-F  --> 49, 47
  51   52-52-F  --> 45, 53
  39   40-43-F  --> 52
  25   25-26-F  --> 40
  36   36-36-T  --> 38
  29   30-33-T  --> 35
  34   35-35-F  --> 30, 36
  27   28-28-F  --> 35
  21   22-24-F  --> 28, 25
  37   38-38-F  --> 22, 40
  18   18-20-F  --> 38
  11   12-15-T  --> 17
  16   17-17-F  --> 12, 18
  0   0-10-F  --> 17
End report on Transitions for T404 (18 items)

WF:dfa: T404: Live variable analysis of 53 points start.
WF:dfa: T404: Gen and Kill sets computed.
WF:dfa: T404: Live variable analysis of 53 points completed in 4 iterations.
Allocate phy reg purpose=localvar msg=allocation for thread T404 for V5003 dt=SINT usecount=1
Allocate phy reg purpose=localvar msg=allocation for thread T404 for V5004 dt=SINT usecount=2
Allocate phy reg purpose=localvar msg=allocation for thread T404 for V5005 dt=SINT usecount=1
Allocate phy reg purpose=localvar msg=allocation for thread T404 for V5006 dt=SINT usecount=2
complete uav rez for SINT  2 items
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
WF:dfa: done
Start of aux report kiwife virtual to physical register colouring/mapping for thread T404
Allocate phy reg purpose=localvar msg=allocation for thread T404 for V5003 dt=SINT usecount=1
Allocate phy reg purpose=localvar msg=allocation for thread T404 for V5004 dt=SINT usecount=2
Allocate phy reg purpose=localvar msg=allocation for thread T404 for V5005 dt=SINT usecount=1
Allocate phy reg purpose=localvar msg=allocation for thread T404 for V5006 dt=SINT usecount=2
: Linear scan colouring done for 4 vregs using 2 pregs
End of aux report kiwife virtual to physical register colouring/mapping for thread T404
WF:kcode5_static_elaborate of tid=T404 no_basic_blocks=18: commence
kcode5_static_elaborate of tid=T404 no_basic_blocks=18: Start generate lasso stem static elaborate
WF:kcode5_static_elaborate of tid=T404 no_basic_blocks=18: Block start. PCT404:0 region=(100))
kcode5_static_elaborate of tid=T404 no_basic_blocks=18: Log visit to 0 at age=0
QX9: gt_step:KER_lasso_stem:csharp/primes_offchip.exe:>>0000:
>>0000:100::SrcStack=
 --- ThreadStart_Main10
 kcode0000:   sassign V5002 := CE_x(num 1)
K_as_sassign:  lhs=V5002
     sassign rhs=CE_x(num 1)

Allocate phy reg purpose=localvar msg=lower_lmode for V5002 dt=BOOL usecount=1
complete uav rez for BOOL  1 items
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
Record_memdesc_item: regf=false msg=uav_pizzle_kernel nemtok=primesya/T404/Main/T404/Main/V_0  vuid=PHYS {name = ["primesya/T404/Main/T404/Main/V_0"];
      dtidl = ["BOOL"];
      baser = -1000L;
      length = null;}
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_0%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_0 is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 1, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_0:LOCAL::Unsigned{init=0}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_0 := CE_x(bnumU U1'1)
hpr emit at 1:primesya/T404/Main/T404/Main/V_0 := U1'1;



QX9: gt_step:KER_lasso_stem:threadstart//T404/Main kcode0001:   sassign primesya/elimit := primesya/limit
K_as_sassign:  lhs=Var(primesya/elimit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=elimit, io_output=true})
     sassign rhs=Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )

    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/elimit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=elimit, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>elimit<, >HwWidth<>32<
 NETGEN io=OUTPUT id=elimit is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=false, dims=<NONE>
netgen ans=elimit[31:0]:OUTPUT::Signed{init=0, io_output=true, username=elimit, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/elimit := CE_x(num 1000)
hpr emit at 2:elimit := 1000;



QX9: gt_step:KER_lasso_stem:threadstart//T404/Main kcode0002: K_easc(CE_apply(KiwiSystem/Kiwi/KppMark=hpr_KppMark, 
       Arg1 = CE_x(XS_fill "START")
       Arg2 = CE_x(XS_fill "INITIALISE")) EMIT)
hpr emit at 3:Xeasc *APPLY:hpr_KppMark("START", "INITIALISE");


QX9: gt_step:KER_lasso_stem:threadstart//T404/Main kcode0003: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_apply(System/String/Concat=hpr_concat, 
         Arg1 = CE_x(XS_fill "Primes Up To ")
         Arg2 = Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ))) EMIT)
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
hpr emit at 4:Xeasc *APPLY:hpr_writeln($$AUTOFORMAT: This will be automatically replaced with a printf formatted string., *APPLY:hpr_concat("Primes Up To ", 1000));


QX9: gt_step:KER_lasso_stem:threadstart//T404/Main kcode0004: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
hpr emit at 5:Xeasc *APPLY:hpr_pause(8);


QX9: gt_step:KER_lasso_stem:threadstart//T404/Main kcode0005:   vsassign primesya/PA[CE_x(num 0)] := CE_scond(CE_x(num 0)<Var(primesya/vol%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=volume, io_output=true, io_input=true}))
K_as_vassign: lhs=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )
    vassign subs=CE_x(num 0)
    vassign rhs=CE_scond(CE_x(num 0)<Var(primesya/vol%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=volume, io_output=true, io_input=true}))
    vassign aid_b=[primesya/PA]
    vassign aid_o=<NONE>
    nona   envlook uid=primesya/PA%$star1$/@/BOOL%-1000%None
    nona   envlook tag=KES:primesya/PA env_value=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
 NETGEN att=true>io_input<>true<, >io_output<>true<, >username<>volume<, >HwWidth<>32<
 NETGEN io=INPUT id=volume is_string=false
 NETGEN NET io=INPUT constantp=false
lower1 uav: netgen dt=CTL_net(false, 32, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=volume[31:0]:INPUT::Unsigned{init=0, io_input=true, io_output=true, username=volume, HwWidth=32}
+++ should skip conv to self ? maybe not. For CTL_net(false, 1, Unsigned,[native])
ct2idl CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>) ans= @/BOOL
lower_lmode subsc wa: Made wondarray w=1 CE_region(@_BOOL%@/BOOL%0%None, CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), )
new l1=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
evolve: vidx: idx was=O_subsc(400040; 0; 400040) vari=false
evolve: vidx: killed from env KES:BOOL[O_subsc(400040; 0; 400040)] := CE_x(blift.bdiop.V_dltd 0<volume)
O_subsc: get_e_cls: site=O_subsc sclass retrieve from A_leaf annotation regionf=false idl=primesya/PA found d2
hpr emit at 6:@_BOOL[{SC:d2,S64'400040}+{$offset,0}] := 0<volume;



QX9: gt_step:KER_lasso_stem:threadstart//T404/Main kcode0006: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
hpr emit at 7:Xeasc *APPLY:hpr_pause(8);


QX9: gt_step:KER_lasso_stem:threadstart//T404/Main kcode0007:   sassign primesya/count1 := CE_x(num 2)
K_as_sassign:  lhs=Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )
     sassign rhs=CE_x(num 2)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/count1 is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/count1[-2147483648..2147483647]:LOCAL::Signed{init=0}
evolve_scalar: nona: tag=KES:primesya/count1 := CE_x(num 2)
hpr emit at 8:primesya/count1 := 2;



QX9: gt_step:KER_lasso_stem:threadstart//T404/Main kcode0008:   sassign primesya/count := CE_x(num 0)
K_as_sassign:  lhs=Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Unsigned,[native])
Netgen: Wt for Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>count<, >HwWidth<>32<
 NETGEN io=OUTPUT id=count is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=count[31:0]:OUTPUT::Unsigned{init=0, io_output=true, username=count, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/count := CE_x(bnumU U32'0)
hpr emit at 9:count := U32'0;



QX9: gt_step:KER_lasso_stem:threadstart//T404/Main kcode0009:   sassign V5003 := CE_x(num 0)
K_as_sassign:  lhs=V5003
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_2_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_2_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_2/GP := CE_x(num 0)
hpr emit at 10:primesya/T404/Main/T404/Main/V_2_GP := 0;



QX9: gt_step:KER_lasso_stem:threadstart//T404/Main kcode00010: K_goto(UNCOND, primesya/T404/Main/LL141)
(102): interpreter: jump to primesya/T404/Main/LL141
kcode5_static_elaborate of tid=T404 no_basic_blocks=18: New region encountered: age=0
kcode5_static_elaborate of tid=T404 no_basic_blocks=18: Finished generating static elaborate trajectory
kcode5_static_elaborate of tid=T404 no_basic_blocks=18: Most advanced basic block start was 0 (total no blocks=18)
emit remark: End of static elaboration for tid T404. After all generate loops are unwound we arrive here: 0
WF:KiwiC-stages: End of static elaboration for tid T404. After all generate loops are unwound we arrive here: 0
WF:constant_fold_meets tid=T404 entry_point=0: start
Reverse post-order ordering for constant fold is 0, 17, 18, 38, 22, 25, 40, 52, 53, 63, 45, 47, 49, 28, 35, 36, 30, 12
WF:constant_fold_meets tid=T404 entry_point=0: constant_fold: start iterate over basic blocks
T404: Constant_fold meet iteration 0
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode0000:   sassign V5002 := CE_x(num 1)
K_as_sassign:  lhs=V5002
     sassign rhs=CE_x(num 1)

Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_0%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_0 is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 1, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_0:LOCAL::Unsigned{init=0}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_0 := CE_x(bnumU U1'1)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode0001:   sassign primesya/elimit := primesya/limit
K_as_sassign:  lhs=Var(primesya/elimit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=elimit, io_output=true})
     sassign rhs=Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )

    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/elimit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=elimit, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>elimit<, >HwWidth<>32<
 NETGEN io=OUTPUT id=elimit is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=false, dims=<NONE>
netgen ans=elimit[31:0]:OUTPUT::Signed{init=0, io_output=true, username=elimit, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/elimit := CE_x(num 1000)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode0002: K_easc(CE_apply(KiwiSystem/Kiwi/KppMark=hpr_KppMark, 
       Arg1 = CE_x(XS_fill "START")
       Arg2 = CE_x(XS_fill "INITIALISE")) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode0003: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_apply(System/String/Concat=hpr_concat, 
         Arg1 = CE_x(XS_fill "Primes Up To ")
         Arg2 = Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ))) EMIT)
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode0004: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode0005:   vsassign primesya/PA[CE_x(num 0)] := CE_scond(CE_x(num 0)<Var(primesya/vol%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=volume, io_output=true, io_input=true}))
K_as_vassign: lhs=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )
    vassign subs=CE_x(num 0)
    vassign rhs=CE_scond(CE_x(num 0)<Var(primesya/vol%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=volume, io_output=true, io_input=true}))
    vassign aid_b=[primesya/PA]
    vassign aid_o=<NONE>
    nona   envlook uid=primesya/PA%$star1$/@/BOOL%-1000%None
    nona   envlook tag=KES:primesya/PA env_value=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
+++ should skip conv to self ? maybe not. For CTL_net(false, 1, Unsigned,[native])
ct2idl CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>) ans= @/BOOL
lower_lmode subsc wa: Made wondarray w=1 CE_region(@_BOOL%@/BOOL%0%None, CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), )
new l1=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
evolve: vidx: idx was=O_subsc(400040; 0; 400040) vari=false
evolve: vidx: killed from env KES:BOOL[O_subsc(400040; 0; 400040)] := CE_x(blift.bdiop.V_dltd 0<volume)
O_subsc: get_e_cls: site=O_subsc sclass retrieve from A_leaf annotation regionf=false idl=primesya/PA found d2
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode0006: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode0007:   sassign primesya/count1 := CE_x(num 2)
K_as_sassign:  lhs=Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )
     sassign rhs=CE_x(num 2)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/count1 is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/count1[-2147483648..2147483647]:LOCAL::Signed{init=0}
evolve_scalar: nona: tag=KES:primesya/count1 := CE_x(num 2)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode0008:   sassign primesya/count := CE_x(num 0)
K_as_sassign:  lhs=Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Unsigned,[native])
Netgen: Wt for Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>count<, >HwWidth<>32<
 NETGEN io=OUTPUT id=count is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=count[31:0]:OUTPUT::Unsigned{init=0, io_output=true, username=count, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/count := CE_x(bnumU U32'0)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode0009:   sassign V5003 := CE_x(num 0)
K_as_sassign:  lhs=V5003
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_2_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_2_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_2/GP := CE_x(num 0)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00010: K_goto(UNCOND, primesya/T404/Main/LL141)
(2): interpreter: jump to primesya/T404/Main/LL141
marking a diff (degenerate case) on 0
Constant Meet: 0-10-F-nA=0:0: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00017: K_goto(V5003 < Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), primesya/T404/Main/LL96)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=CE_x(num 0)
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
(0): interpreter: kcode branch condition: unconditionally following conditional branch to primesya/T404/Main/LL96
marking a diff (degenerate case) on 17
Constant Meet: 17-17-F-nA=2:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00018: K_easc(CE_apply(KiwiSystem/Kiwi/KppMark=hpr_KppMark, 
       Arg1 = CE_x(XS_fill "wp2")
       Arg2 = CE_x(XS_fill "CROSSOFF")) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00019:   sassign V5004 := CE_x(num 2)
K_as_sassign:  lhs=V5004
     sassign rhs=CE_x(num 2)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_2_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_2_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_2/GP := CE_x(num 2)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00020: K_goto(UNCOND, primesya/T404/Main/LL278)
(0): interpreter: jump to primesya/T404/Main/LL278
marking a diff (degenerate case) on 18
Constant Meet: 18-20-F-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00038: K_goto(V5004 < Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), primesya/T404/Main/LL174)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=CE_x(num 2)
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
(0): interpreter: kcode branch condition: unconditionally following conditional branch to primesya/T404/Main/LL174
marking a diff (degenerate case) on 38
Constant Meet: 38-38-F-nA=2:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00022: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00023:   sassign V5005 := CE_alu(V5004, +, V5004)
K_as_sassign:  lhs=V5005
     sassign rhs=CE_alu(CTL_net(false, 32, Signed,[native]), V5004, +, V5004)

    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=CE_x(num 2)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=CE_x(num 2)
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_4_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_4_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_4/GP := CE_x(num 4)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00024: K_goto(V5005 < Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), primesya/T404/Main/LL209)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=CE_x(num 4)
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
(1): interpreter: kcode branch condition: unconditionally following conditional branch to primesya/T404/Main/LL209
marking a diff (degenerate case) on 22
Constant Meet: 22-24-F-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00025: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "Skip out on square")) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00026: K_goto(UNCOND, primesya/T404/Main/LL289)
(0): interpreter: jump to primesya/T404/Main/LL289
marking a diff (degenerate case) on 25
Constant Meet: 25-26-F-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00040: K_easc(CE_apply(KiwiSystem/Kiwi/KppMark=hpr_KppMark, 
       Arg1 = CE_x(XS_fill "wp3")
       Arg2 = CE_x(XS_fill "COUNTING")) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00041: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "Now counting")) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00042:   sassign V5006 := CE_x(num 0)
K_as_sassign:  lhs=V5006
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_4_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_4_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_4/GP := CE_x(num 0)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00043: K_goto(UNCOND, primesya/T404/Main/LL385)
(0): interpreter: jump to primesya/T404/Main/LL385
marking a diff (degenerate case) on 40
Constant Meet: 40-43-F-nA=2:2: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00052: K_goto(V5006 < Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), primesya/T404/Main/LL322)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=CE_x(num 0)
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
(0): interpreter: kcode branch condition: unconditionally following conditional branch to primesya/T404/Main/LL322
marking a diff (degenerate case) on 52
Constant Meet: 52-52-F-nA=2:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00053: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "There are {0} primes below the natural number {1}.")
       Arg2 = Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})
       Arg3 = Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )) EMIT)
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
    nona   envlook uid=primesya/count%UINT%-1000%None
    nona   envlook tag=KES:primesya/count env_value=CE_x(bnumU U32'0)
ansi_form arg string is There are %d primes below the natural number %u.
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00054: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "Optimisation variant={1} (count1 is {0}).")
       Arg2 = Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )
       Arg3 = CE_x(num 0)) EMIT)
    nona   envlook uid=primesya/count1%SINT%-1000%None
    nona   envlook tag=KES:primesya/count1 env_value=CE_x(num 2)
ansi_form arg string is Optimisation variant=%u (count1 is %u).
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00055: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00056: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00057: K_easc(CE_apply(KiwiSystem/Kiwi/KppMark=hpr_KppMark, 
       Arg1 = CE_x(XS_fill "FINISH")) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00058: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00059:   sassign primesya/finished := CE_x(num 1)
K_as_sassign:  lhs=Var(primesya/finished%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=finished, io_output=true})
     sassign rhs=CE_x(num 1)

Netgen: Wt for Var(primesya/finished%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=finished, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>finished<
 NETGEN io=OUTPUT id=finished is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 1, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=finished:OUTPUT::Unsigned{init=0, io_output=true, username=finished}
evolve_scalar: nona: tag=KES:primesya/finished := CE_x(bnumU U1'1)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00060: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00061: K_goto(UNCOND, primesya/T404/Main/cbgtailhang10)
(4): interpreter: jump to primesya/T404/Main/cbgtailhang10
marking a diff (degenerate case) on 53
Constant Meet: 53-61-F-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00063: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00064: K_goto(UNCOND, primesya/T404/Main/cbgtailhang10)
(1): interpreter: jump to primesya/T404/Main/cbgtailhang10
marking a diff (degenerate case) on 63
Constant Meet: 63-64-F-nA=2:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00045: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00046: K_goto(ISZERO CE_subsc(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ), V5006<<[primesya/PA]||[primesya/T404/Main/T404/Main/V_4]>>), primesya/T404/Main/LL352)
    nona   envlook uid=primesya/PA%$star1$/@/BOOL%-1000%None
    nona   envlook tag=KES:primesya/PA env_value=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=CE_x(num 0)
origq2: l1b pre eval=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ) 
post eval reapplied=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
aid was not yet inserted in ataken base: aid=@_BOOL 400040 heapspace=true
nonataken oracle: @_BOOL d0  nonataken=false
   ataken   envlook hidx=400040
WF:lower_indexed: CE_subsc 3: general array: uses general_subscription_lowerer for real work
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
ct2idl CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>) ans= @/BOOL
lower_indexed subsc: Made wondarray w=1 CE_region(@_BOOL%@/BOOL%0%None, CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), )
lowed_indexed CE_subsc 3: scaler=1 for an array containing  valuetypes CTL_net(false, 1, Unsigned,[native])
O_subsc: get_e_cls: site=O_subsc sclass retrieve from A_leaf annotation regionf=false idl=primesya/PA found d2
(1): interpreter: save thunk: bne taken=!(@_BOOL[{SC:d2,S64'400040}+{$offset,0}])
marking a diff (degenerate case) on 45
Constant Meet: 45-46-F-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00047:   sassign primesya/count := CE_alu(primesya/count, +, CE_x(num 1))
K_as_sassign:  lhs=Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})
     sassign rhs=CE_alu(CTL_net(false, 64, Unsigned,[native]), Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true}), +, CE_x(num 1))

    nona   envlook uid=primesya/count%UINT%-1000%None
    nona   envlook tag=KES:primesya/count env_value=CE_x(bnumU U32'0)
Netgen: Wt for Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>count<, >HwWidth<>32<
 NETGEN io=OUTPUT id=count is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=count[31:0]:OUTPUT::Unsigned{init=0, io_output=true, username=count, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/count := CE_x(bnumU U32'1)
marking a diff (degenerate case) on 47
Constant Meet: 47-47-T-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00049: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "Tally counting {0} {1}")
       Arg2 = V5006
       Arg3 = Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})) EMIT)
    nona   envlook uid=primesya/count%UINT%-1000%None
    nona   envlook tag=KES:primesya/count env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==CEE_scalar(CE_x(bnumU U32'1))
KES:primesya/count was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==CEE_scalar(CE_x(bnumU U32'1))
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=CE_x(num 0)
 NETGEN att=true>io_output<>true<, >username<>count<, >HwWidth<>32<
 NETGEN io=OUTPUT id=count is_string=false
 NETGEN NET io=OUTPUT constantp=false
lower1 uav: netgen dt=CTL_net(false, 32, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=count[31:0]:OUTPUT::Unsigned{init=0, io_output=true, username=count, HwWidth=32}
ansi_form arg string is Tally counting %u %d
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00050:   sassign V5006 := CE_alu(V5006, +, CE_x(num 1))
K_as_sassign:  lhs=V5006
     sassign rhs=CE_alu(CTL_net(false, 32, Signed,[native]), V5006, +, CE_x(num 1))

    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=CE_x(num 0)
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_4_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_4_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_4/GP := CE_x(num 1)
marking a diff (degenerate case) on 49
Constant Meet: 49-50-T-nA=2:2: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00028: K_goto(UNCOND, primesya/T404/Main/LL263)
(0): interpreter: jump to primesya/T404/Main/LL263
marking a diff (degenerate case) on 28
Constant Meet: 28-28-F-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00035: K_goto(V5005 < Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), primesya/T404/Main/LL214)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=CE_x(num 4)
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
(0): interpreter: kcode branch condition: unconditionally following conditional branch to primesya/T404/Main/LL214
marking a diff (degenerate case) on 35
Constant Meet: 35-35-F-nA=2:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00036:   sassign V5004 := CE_alu(V5004, +, CE_x(num 1))
K_as_sassign:  lhs=V5004
     sassign rhs=CE_alu(CTL_net(false, 32, Signed,[native]), V5004, +, CE_x(num 1))

    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=CE_x(num 2)
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_2_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_2_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_2/GP := CE_x(num 3)
marking a diff (degenerate case) on 36
Constant Meet: 36-36-T-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00030: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "Cross off {0} {1}   (count1={2})")
       Arg2 = V5004
       Arg3 = V5005
       Arg4 = Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )) EMIT)
    nona   envlook uid=primesya/count1%SINT%-1000%None
    nona   envlook tag=KES:primesya/count1 env_value=CE_x(num 2)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=CE_x(num 4)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=CE_x(num 2)
ansi_form arg string is Cross off %u %u   (count1=%u)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00031: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00032:   vsassign primesya/PA[V5005] := CE_x(num 0)
K_as_vassign: lhs=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )
    vassign subs=V5005
    vassign rhs=CE_x(num 0)
    vassign aid_b=[primesya/PA]
    vassign aid_o=[primesya/T404/Main/T404/Main/V_3]
    nona   envlook uid=primesya/PA%$star1$/@/BOOL%-1000%None
    nona   envlook tag=KES:primesya/PA env_value=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=CE_x(num 4)
ct2idl CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>) ans= @/BOOL
lower_lmode subsc wa: Made wondarray w=1 CE_region(@_BOOL%@/BOOL%0%None, CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), )
new l1=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
evolve_idxd:  KES:BOOL[400044] := CE_x(bnumU U1'0)
ov=Some(...)
O_subsc: get_e_cls: site=O_subsc sclass retrieve from A_leaf annotation regionf=false idl=primesya/PA found d2
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00033:   sassign V5005 := CE_alu(V5005, +, V5004)
K_as_sassign:  lhs=V5005
     sassign rhs=CE_alu(CTL_net(false, 32, Signed,[native]), V5005, +, V5004)

    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=CE_x(num 4)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=CE_x(num 2)
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_4_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_4_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_4/GP := CE_x(num 6)
marking a diff (degenerate case) on 30
Constant Meet: 30-33-T-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00012: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00013:   vsassign primesya/PA[V5003] := CE_x(num 1)
K_as_vassign: lhs=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )
    vassign subs=V5003
    vassign rhs=CE_x(num 1)
    vassign aid_b=[primesya/PA]
    vassign aid_o=[primesya/T404/Main/T404/Main/V_1]
    nona   envlook uid=primesya/PA%$star1$/@/BOOL%-1000%None
    nona   envlook tag=KES:primesya/PA env_value=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=CE_x(num 0)
ct2idl CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>) ans= @/BOOL
lower_lmode subsc wa: Made wondarray w=1 CE_region(@_BOOL%@/BOOL%0%None, CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), )
new l1=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
evolve_idxd:  KES:BOOL[400040] := CE_x(bnumU U1'1)
ov=Some(...)
O_subsc: get_e_cls: site=O_subsc sclass retrieve from A_leaf annotation regionf=false idl=primesya/PA found d2
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00014: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "Setting initial array flag to hold : addr={0} readback={1}")
       Arg2 = V5003
       Arg3 = CE_subsc(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ), V5003<<[primesya/PA]||[primesya/T404/Main/T404/Main/V_1]>>)) EMIT)
    nona   envlook uid=primesya/PA%$star1$/@/BOOL%-1000%None
    nona   envlook tag=KES:primesya/PA env_value=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=CE_x(num 0)
origq2: l1b pre eval=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ) 
post eval reapplied=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
   ataken   envlook hidx=400040
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=CE_x(num 0)
WF:lower_indexed: CE_subsc 3: general array: uses general_subscription_lowerer for real work
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
ct2idl CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>) ans= @/BOOL
lower_indexed subsc: Made wondarray w=1 CE_region(@_BOOL%@/BOOL%0%None, CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), )
lowed_indexed CE_subsc 3: scaler=1 for an array containing  valuetypes CTL_net(false, 1, Unsigned,[native])
O_subsc: get_e_cls: site=O_subsc sclass retrieve from A_leaf annotation regionf=false idl=primesya/PA found d2
ansi_form arg string is Setting initial array flag to hold : addr=%u readback=%d
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00015:   sassign V5003 := CE_alu(V5003, +, CE_x(num 1))
K_as_sassign:  lhs=V5003
     sassign rhs=CE_alu(CTL_net(false, 32, Signed,[native]), V5003, +, CE_x(num 1))

    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=CE_x(num 0)
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_2_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_2_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_2/GP := CE_x(num 1)
marking a diff (degenerate case) on 12
Constant Meet: 12-15-T-nA=1:1: Change to constants out
T404: Constant_fold meet iteration 1
Constant Meet: 0-10-F-nA=0:0 No change to constants in
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00017: K_goto(V5003 < Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), primesya/T404/Main/LL96)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_2_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lower1 uav: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_2_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
(0): interpreter: save thunk: bne taken=primesya/T404/Main/T404/Main/V_2_GP<1000
Constant Meet: 17-17-F-nA=2:2: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00018: K_easc(CE_apply(KiwiSystem/Kiwi/KppMark=hpr_KppMark, 
       Arg1 = CE_x(XS_fill "wp2")
       Arg2 = CE_x(XS_fill "CROSSOFF")) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00019:   sassign V5004 := CE_x(num 2)
K_as_sassign:  lhs=V5004
     sassign rhs=CE_x(num 2)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_2_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_2_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_2/GP := CE_x(num 2)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00020: K_goto(UNCOND, primesya/T404/Main/LL278)
(0): interpreter: jump to primesya/T404/Main/LL278
Constant Meet: 18-20-F-nA=1:1: No change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00038: K_goto(V5004 < Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), primesya/T404/Main/LL174)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 3))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 3))
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
(0): interpreter: save thunk: bne taken=primesya/T404/Main/T404/Main/V_2_GP<1000
Constant Meet: 38-38-F-nA=2:2: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00022: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00023:   sassign V5005 := CE_alu(V5004, +, V5004)
K_as_sassign:  lhs=V5005
     sassign rhs=CE_alu(CTL_net(false, 32, Signed,[native]), V5004, +, V5004)

    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 3))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 3))
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 3))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 3))
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_4_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_4_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_4/GP := CE_x(W_node.+ primesya/T404/Main/T404/Main/V_2_GP+primesya/T404/Main/T404/Main/V_2_GP)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00024: K_goto(V5005 < Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), primesya/T404/Main/LL209)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nonataken-nonconst
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nonataken-nonconst
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_4_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lower1 uav: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_4_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
(1): interpreter: save thunk: bne taken=primesya/T404/Main/T404/Main/V_4_GP<1000
Constant Meet: 22-24-F-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00025: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "Skip out on square")) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00026: K_goto(UNCOND, primesya/T404/Main/LL289)
(0): interpreter: jump to primesya/T404/Main/LL289
Constant Meet: 25-26-F-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00040: K_easc(CE_apply(KiwiSystem/Kiwi/KppMark=hpr_KppMark, 
       Arg1 = CE_x(XS_fill "wp3")
       Arg2 = CE_x(XS_fill "COUNTING")) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00041: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "Now counting")) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00042:   sassign V5006 := CE_x(num 0)
K_as_sassign:  lhs=V5006
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_4_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_4_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_4/GP := CE_x(num 0)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00043: K_goto(UNCOND, primesya/T404/Main/LL385)
(0): interpreter: jump to primesya/T404/Main/LL385
Constant Meet: 40-43-F-nA=2:2: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00052: K_goto(V5006 < Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), primesya/T404/Main/LL322)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 1))
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 1))
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
(0): interpreter: save thunk: bne taken=primesya/T404/Main/T404/Main/V_4_GP<1000
Constant Meet: 52-52-F-nA=2:2: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00053: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "There are {0} primes below the natural number {1}.")
       Arg2 = Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})
       Arg3 = Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )) EMIT)
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
    nona   envlook uid=primesya/count%UINT%-1000%None
    nona   envlook tag=KES:primesya/count env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==CEE_scalar(CE_x(bnumU U32'1)))
KES:primesya/count was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==CEE_scalar(CE_x(bnumU U32'1)))
ansi_form arg string is There are %d primes below the natural number %u.
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00054: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "Optimisation variant={1} (count1 is {0}).")
       Arg2 = Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )
       Arg3 = CE_x(num 0)) EMIT)
    nona   envlook uid=primesya/count1%SINT%-1000%None
    nona   envlook tag=KES:primesya/count1 env_value=CE_x(num 2)
ansi_form arg string is Optimisation variant=%u (count1 is %u).
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00055: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00056: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00057: K_easc(CE_apply(KiwiSystem/Kiwi/KppMark=hpr_KppMark, 
       Arg1 = CE_x(XS_fill "FINISH")) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00058: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00059:   sassign primesya/finished := CE_x(num 1)
K_as_sassign:  lhs=Var(primesya/finished%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=finished, io_output=true})
     sassign rhs=CE_x(num 1)

Netgen: Wt for Var(primesya/finished%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=finished, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>finished<
 NETGEN io=OUTPUT id=finished is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 1, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=finished:OUTPUT::Unsigned{init=0, io_output=true, username=finished}
evolve_scalar: nona: tag=KES:primesya/finished := CE_x(bnumU U1'1)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00060: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00061: K_goto(UNCOND, primesya/T404/Main/cbgtailhang10)
(4): interpreter: jump to primesya/T404/Main/cbgtailhang10
Constant Meet: 53-61-F-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00063: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00064: K_goto(UNCOND, primesya/T404/Main/cbgtailhang10)
(1): interpreter: jump to primesya/T404/Main/cbgtailhang10
Constant Meet: 63-64-F-nA=2:2: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00045: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00046: K_goto(ISZERO CE_subsc(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ), V5006<<[primesya/PA]||[primesya/T404/Main/T404/Main/V_4]>>), primesya/T404/Main/LL352)
    nona   envlook uid=primesya/PA%$star1$/@/BOOL%-1000%None
    nona   envlook tag=KES:primesya/PA env_value=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 1))
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 1))
origq2: l1b pre eval=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ) 
post eval reapplied=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
WF:lower_indexed: CE_subsc 3: general array: uses general_subscription_lowerer for real work
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
ct2idl CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>) ans= @/BOOL
lower_indexed subsc: Made wondarray w=1 CE_region(@_BOOL%@/BOOL%0%None, CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), )
lowed_indexed CE_subsc 3: scaler=1 for an array containing  valuetypes CTL_net(false, 1, Unsigned,[native])
O_subsv: get_e_cls: site=O_subsv sclass retrieve from A_leaf annotation regionf=false idl=primesya/PA found d2
(1): interpreter: save thunk: bne taken=!(@_BOOL[{SC:d2,S64'400040}+{$offset,primesya/T404/Main/T404/Main/V_4_GP}])
Constant Meet: 45-46-F-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00047:   sassign primesya/count := CE_alu(primesya/count, +, CE_x(num 1))
K_as_sassign:  lhs=Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})
     sassign rhs=CE_alu(CTL_net(false, 64, Unsigned,[native]), Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true}), +, CE_x(num 1))

    nona   envlook uid=primesya/count%UINT%-1000%None
    nona   envlook tag=KES:primesya/count env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==CEE_scalar(CE_x(bnumU U32'1)))
KES:primesya/count was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==CEE_scalar(CE_x(bnumU U32'1)))
Netgen: Wt for Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>count<, >HwWidth<>32<
 NETGEN io=OUTPUT id=count is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=count[31:0]:OUTPUT::Unsigned{init=0, io_output=true, username=count, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/count := CE_x(W_node.:<-cast- Cu(1+count))
Constant Meet: 47-47-T-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00049: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "Tally counting {0} {1}")
       Arg2 = V5006
       Arg3 = Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})) EMIT)
    nona   envlook uid=primesya/count%UINT%-1000%None
    nona   envlook tag=KES:primesya/count env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==CEE_scalar(CE_x(bnumU U32'1)))
KES:primesya/count was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==CEE_scalar(CE_x(bnumU U32'1)))
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 1))
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 1))
ansi_form arg string is Tally counting %u %d
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00050:   sassign V5006 := CE_alu(V5006, +, CE_x(num 1))
K_as_sassign:  lhs=V5006
     sassign rhs=CE_alu(CTL_net(false, 32, Signed,[native]), V5006, +, CE_x(num 1))

    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 1))
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 1))
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_4_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_4_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_4/GP := CE_x(W_node.+ 1+primesya/T404/Main/T404/Main/V_4_GP)
Constant Meet: 49-50-T-nA=2:2: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00028: K_goto(UNCOND, primesya/T404/Main/LL263)
(0): interpreter: jump to primesya/T404/Main/LL263
Constant Meet: 28-28-F-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00035: K_goto(V5005 < Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), primesya/T404/Main/LL214)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==Env_leaf(CEE_tendnonataken-nonconst) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 6))
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==Env_leaf(CEE_tendnonataken-nonconst) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 6))
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
(0): interpreter: save thunk: bne taken=primesya/T404/Main/T404/Main/V_4_GP<1000
Constant Meet: 35-35-F-nA=2:2: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00036:   sassign V5004 := CE_alu(V5004, +, CE_x(num 1))
K_as_sassign:  lhs=V5004
     sassign rhs=CE_alu(CTL_net(false, 32, Signed,[native]), V5004, +, CE_x(num 1))

    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 3))) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 2))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 3))) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 2))
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_2_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_2_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_2/GP := CE_x(W_node.+ 1+primesya/T404/Main/T404/Main/V_2_GP)
Constant Meet: 36-36-T-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00030: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "Cross off {0} {1}   (count1={2})")
       Arg2 = V5004
       Arg3 = V5005
       Arg4 = Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )) EMIT)
    nona   envlook uid=primesya/count1%SINT%-1000%None
    nona   envlook tag=KES:primesya/count1 env_value=CE_x(num 2)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==Env_leaf(CEE_tendnonataken-nonconst) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 6))
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==Env_leaf(CEE_tendnonataken-nonconst) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 6))
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 3))) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 2))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 3))) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 2))
ansi_form arg string is Cross off %u %u   (count1=%u)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00031: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00032:   vsassign primesya/PA[V5005] := CE_x(num 0)
K_as_vassign: lhs=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )
    vassign subs=V5005
    vassign rhs=CE_x(num 0)
    vassign aid_b=[primesya/PA]
    vassign aid_o=[primesya/T404/Main/T404/Main/V_3]
    nona   envlook uid=primesya/PA%$star1$/@/BOOL%-1000%None
    nona   envlook tag=KES:primesya/PA env_value=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==Env_leaf(CEE_tendnonataken-nonconst) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 6))
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==Env_leaf(CEE_tendnonataken-nonconst) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 6))
ct2idl CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>) ans= @/BOOL
lower_lmode subsc wa: Made wondarray w=1 CE_region(@_BOOL%@/BOOL%0%None, CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), )
new l1=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
evolve: vidx: idx was=O_subsv(primesya/PA;primesya/T404/Main/T404/Main/V_3;S64'400040;primesya/T404/Main/T404/Main/V_4_GP) vari=true
evolve: vidx: killed from env KES:BOOL[O_subsv(primesya/PA;primesya/T404/Main/T404/Main/V_3;S64'400040;primesya/T404/Main/T404/Main/V_4_GP)] := CE_x(bnumU U1'0)
O_subsv: get_e_cls: site=O_subsv sclass retrieve from A_leaf annotation regionf=false idl=primesya/PA found d2
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00033:   sassign V5005 := CE_alu(V5005, +, V5004)
K_as_sassign:  lhs=V5005
     sassign rhs=CE_alu(CTL_net(false, 32, Signed,[native]), V5005, +, V5004)

    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==Env_leaf(CEE_tendnonataken-nonconst) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 6))
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==Env_leaf(CEE_tendnonataken-nonconst) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 6))
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 3))) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 2))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 3))) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 2))
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_4_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_4_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_4/GP := CE_x(W_node.+ primesya/T404/Main/T404/Main/V_2_GP+primesya/T404/Main/T404/Main/V_4_GP)
Constant Meet: 30-33-T-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00012: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00013:   vsassign primesya/PA[V5003] := CE_x(num 1)
K_as_vassign: lhs=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )
    vassign subs=V5003
    vassign rhs=CE_x(num 1)
    vassign aid_b=[primesya/PA]
    vassign aid_o=[primesya/T404/Main/T404/Main/V_1]
    nona   envlook uid=primesya/PA%$star1$/@/BOOL%-1000%None
    nona   envlook tag=KES:primesya/PA env_value=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
ct2idl CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>) ans= @/BOOL
lower_lmode subsc wa: Made wondarray w=1 CE_region(@_BOOL%@/BOOL%0%None, CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), )
new l1=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
evolve: vidx: idx was=O_subsv(primesya/PA;primesya/T404/Main/T404/Main/V_1;S64'400040;primesya/T404/Main/T404/Main/V_2_GP) vari=true
evolve: vidx: killed from env KES:BOOL[O_subsv(primesya/PA;primesya/T404/Main/T404/Main/V_1;S64'400040;primesya/T404/Main/T404/Main/V_2_GP)] := CE_x(bnumU U1'1)
O_subsv: get_e_cls: site=O_subsv sclass retrieve from A_leaf annotation regionf=false idl=primesya/PA found d2
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00014: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "Setting initial array flag to hold : addr={0} readback={1}")
       Arg2 = V5003
       Arg3 = CE_subsc(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ), V5003<<[primesya/PA]||[primesya/T404/Main/T404/Main/V_1]>>)) EMIT)
    nona   envlook uid=primesya/PA%$star1$/@/BOOL%-1000%None
    nona   envlook tag=KES:primesya/PA env_value=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
origq2: l1b pre eval=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ) 
post eval reapplied=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
WF:lower_indexed: CE_subsc 3: general array: uses general_subscription_lowerer for real work
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
ct2idl CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>) ans= @/BOOL
lower_indexed subsc: Made wondarray w=1 CE_region(@_BOOL%@/BOOL%0%None, CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), )
lowed_indexed CE_subsc 3: scaler=1 for an array containing  valuetypes CTL_net(false, 1, Unsigned,[native])
O_subsv: get_e_cls: site=O_subsv sclass retrieve from A_leaf annotation regionf=false idl=primesya/PA found d2
ansi_form arg string is Setting initial array flag to hold : addr=%u readback=%d
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00015:   sassign V5003 := CE_alu(V5003, +, CE_x(num 1))
K_as_sassign:  lhs=V5003
     sassign rhs=CE_alu(CTL_net(false, 32, Signed,[native]), V5003, +, CE_x(num 1))

    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_2_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_2_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_2/GP := CE_x(W_node.+ 1+primesya/T404/Main/T404/Main/V_2_GP)
Constant Meet: 12-15-T-nA=1:1: Change to constants out
T404: Constant_fold meet iteration 2
Constant Meet: 0-10-F-nA=0:0 No change to constants in
Constant Meet: 17-17-F-nA=2:2 No change to constants in
Constant Meet: 18-20-F-nA=1:1 No change to constants in
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00038: K_goto(V5004 < Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), primesya/T404/Main/LL174)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==Env_leaf(CEE_tendnonataken-nonconst)
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==Env_leaf(CEE_tendnonataken-nonconst)
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
(0): interpreter: save thunk: bne taken=primesya/T404/Main/T404/Main/V_2_GP<1000
Constant Meet: 38-38-F-nA=2:2: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/primes_offchip.exe:<no codepoint>callstring__=constant_fold_meets tid=T404 entry_point=0:SrcStack=
 --- ThreadStart_Main10
 kcode00022: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00023:   sassign V5005 := CE_alu(V5004, +, V5004)
K_as_sassign:  lhs=V5005
     sassign rhs=CE_alu(CTL_net(false, 32, Signed,[native]), V5004, +, V5004)

    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==Env_leaf(CEE_tendnonataken-nonconst)
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==Env_leaf(CEE_tendnonataken-nonconst)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==Env_leaf(CEE_tendnonataken-nonconst)
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==Env_leaf(CEE_tendnonataken-nonconst)
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_4_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_4_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_4/GP := CE_x(W_node.+ primesya/T404/Main/T404/Main/V_2_GP+primesya/T404/Main/T404/Main/V_2_GP)
QX9: gt_step:KER_constant_meet:threadstart//T404/Main kcode00024: K_goto(V5005 < Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), primesya/T404/Main/LL209)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nonataken-nonconst
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nonataken-nonconst
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
(1): interpreter: save thunk: bne taken=primesya/T404/Main/T404/Main/V_4_GP<1000
Constant Meet: 22-24-F-nA=1:1: No change to constants out
Constant Meet: 25-26-F-nA=1:1 No change to constants in
Constant Meet: 40-43-F-nA=2:2 No change to constants in
Constant Meet: 52-52-F-nA=2:2 No change to constants in
Constant Meet: 53-61-F-nA=1:1 No change to constants in
Constant Meet: 63-64-F-nA=2:2 No change to constants in
Constant Meet: 45-46-F-nA=1:1 No change to constants in
Constant Meet: 47-47-T-nA=1:1 No change to constants in
Constant Meet: 49-50-T-nA=2:2 No change to constants in
Constant Meet: 28-28-F-nA=1:1 No change to constants in
Constant Meet: 35-35-F-nA=2:2 No change to constants in
Constant Meet: 36-36-T-nA=1:1 No change to constants in
Constant Meet: 30-33-T-nA=1:1 No change to constants in
Constant Meet: 12-15-T-nA=1:1 No change to constants in
T404: Constant_fold meet iteration 3
Constant Meet: 0-10-F-nA=0:0 No change to constants in
Constant Meet: 17-17-F-nA=2:2 No change to constants in
Constant Meet: 18-20-F-nA=1:1 No change to constants in
Constant Meet: 38-38-F-nA=2:2 No change to constants in
Constant Meet: 22-24-F-nA=1:1 No change to constants in
Constant Meet: 25-26-F-nA=1:1 No change to constants in
Constant Meet: 40-43-F-nA=2:2 No change to constants in
Constant Meet: 52-52-F-nA=2:2 No change to constants in
Constant Meet: 53-61-F-nA=1:1 No change to constants in
Constant Meet: 63-64-F-nA=2:2 No change to constants in
Constant Meet: 45-46-F-nA=1:1 No change to constants in
Constant Meet: 47-47-T-nA=1:1 No change to constants in
Constant Meet: 49-50-T-nA=2:2 No change to constants in
Constant Meet: 28-28-F-nA=1:1 No change to constants in
Constant Meet: 35-35-F-nA=2:2 No change to constants in
Constant Meet: 36-36-T-nA=1:1 No change to constants in
Constant Meet: 30-33-T-nA=1:1 No change to constants in
Constant Meet: 12-15-T-nA=1:1 No change to constants in
WF:constant_fold_meets tid=T404 entry_point=0: constant_fold: finished iterate over basic blocks
WF:KiwiC-stages: tid=T404: End of constant folding
ignored eq for store1 V0001: :  lhs=d3  rhs=d3
Ataken scan complete. 10 items.
Rendering basic block 0/18   0-10-F
WF:elab5_render T404: commence
WF:elab5_render T404: elab5_render T404: Block start. PCT404:0
emit at 2: label T404_0
elab5_render T404Start generate traj 0 .. 10
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T404: Block start. PCT404:0:SrcStack=
 --- ThreadStart_Main10
 kcode0000:   sassign V5002 := CE_x(num 1)
K_as_sassign:  lhs=V5002
     sassign rhs=CE_x(num 1)

Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_0%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_0 is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 1, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_0:LOCAL::Unsigned{init=0}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_0 := CE_x(bnumU U1'1)
hpr emit at 4:primesya/T404/Main/T404/Main/V_0 := U1'1;



QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode0001:   sassign primesya/elimit := primesya/limit
K_as_sassign:  lhs=Var(primesya/elimit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=elimit, io_output=true})
     sassign rhs=Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )

    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/elimit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=elimit, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>elimit<, >HwWidth<>32<
 NETGEN io=OUTPUT id=elimit is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=false, dims=<NONE>
netgen ans=elimit[31:0]:OUTPUT::Signed{init=0, io_output=true, username=elimit, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/elimit := CE_x(num 1000)
hpr emit at 5:elimit := 1000;



QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode0002: K_easc(CE_apply(KiwiSystem/Kiwi/KppMark=hpr_KppMark, 
       Arg1 = CE_x(XS_fill "START")
       Arg2 = CE_x(XS_fill "INITIALISE")) EMIT)
hpr emit at 6:Xeasc *APPLY:hpr_KppMark("START", "INITIALISE");


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode0003: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_apply(System/String/Concat=hpr_concat, 
         Arg1 = CE_x(XS_fill "Primes Up To ")
         Arg2 = Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ))) EMIT)
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
hpr emit at 7:Xeasc *APPLY:hpr_writeln($$AUTOFORMAT: This will be automatically replaced with a printf formatted string., *APPLY:hpr_concat("Primes Up To ", 1000));


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode0004: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
hpr emit at 8:Xeasc *APPLY:hpr_pause(8);


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode0005:   vsassign primesya/PA[CE_x(num 0)] := CE_scond(CE_x(num 0)<Var(primesya/vol%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=volume, io_output=true, io_input=true}))
K_as_vassign: lhs=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )
    vassign subs=CE_x(num 0)
    vassign rhs=CE_scond(CE_x(num 0)<Var(primesya/vol%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=volume, io_output=true, io_input=true}))
    vassign aid_b=[primesya/PA]
    vassign aid_o=<NONE>
    nona   envlook uid=primesya/PA%$star1$/@/BOOL%-1000%None
    nona   envlook tag=KES:primesya/PA env_value=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
+++ should skip conv to self ? maybe not. For CTL_net(false, 1, Unsigned,[native])
ct2idl CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>) ans= @/BOOL
lower_lmode subsc wa: Made wondarray w=1 CE_region(@_BOOL%@/BOOL%0%None, CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), )
new l1=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
evolve: vidx: idx was=O_subsc(400040; 0; 400040) vari=false
evolve: vidx: killed from env KES:BOOL[O_subsc(400040; 0; 400040)] := CE_x(blift.bdiop.V_dltd 0<volume)
O_subsc: get_e_cls: site=O_subsc sclass retrieve from A_leaf annotation regionf=false idl=primesya/PA found d2
hpr emit at 9:@_BOOL[{SC:d2,S64'400040}+{$offset,0}] := 0<volume;



QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode0006: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
hpr emit at 10:Xeasc *APPLY:hpr_pause(8);


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode0007:   sassign primesya/count1 := CE_x(num 2)
K_as_sassign:  lhs=Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )
     sassign rhs=CE_x(num 2)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/count1 is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/count1[-2147483648..2147483647]:LOCAL::Signed{init=0}
evolve_scalar: nona: tag=KES:primesya/count1 := CE_x(num 2)
hpr emit at 11:primesya/count1 := 2;



QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode0008:   sassign primesya/count := CE_x(num 0)
K_as_sassign:  lhs=Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Unsigned,[native])
Netgen: Wt for Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>count<, >HwWidth<>32<
 NETGEN io=OUTPUT id=count is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=count[31:0]:OUTPUT::Unsigned{init=0, io_output=true, username=count, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/count := CE_x(bnumU U32'0)
hpr emit at 12:count := U32'0;



QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode0009:   sassign V5003 := CE_x(num 0)
K_as_sassign:  lhs=V5003
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_2_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_2_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_2/GP := CE_x(num 0)
hpr emit at 13:primesya/T404/Main/T404/Main/V_2_GP := 0;



QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00010: K_goto(UNCOND, primesya/T404/Main/LL141)
(2): interpreter: jump to primesya/T404/Main/LL141
elab5_render T404jump from 0 to 16
emit at 14: goto T404_17
Rendering basic block 1/18   17-17-F
WF:elab5_render T404: commence
WF:elab5_render T404: elab5_render T404: Block start. PCT404:17
emit at 15: label T404_17
elab5_render T404Start generate traj 17 .. 17
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T404: Block start. PCT404:17:SrcStack=
 --- ThreadStart_Main10
 kcode00017: K_goto(V5003 < Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), primesya/T404/Main/LL96)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
(0): interpreter: save thunk: bne taken=primesya/T404/Main/T404/Main/V_2_GP<1000
elab5_render T404conditional branch from 17 to 11
emit at 17: bne primesya/T404/Main/T404/Main/V_2_GP<1000 T404_12
emit at 18: goto T404_18
Rendering basic block 2/18   18-20-F
WF:elab5_render T404: commence
WF:elab5_render T404: elab5_render T404: Block start. PCT404:18
emit at 19: label T404_18
elab5_render T404Start generate traj 18 .. 20
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T404: Block start. PCT404:18:SrcStack=
 --- ThreadStart_Main10
 kcode00018: K_easc(CE_apply(KiwiSystem/Kiwi/KppMark=hpr_KppMark, 
       Arg1 = CE_x(XS_fill "wp2")
       Arg2 = CE_x(XS_fill "CROSSOFF")) EMIT)
hpr emit at 21:Xeasc *APPLY:hpr_KppMark("wp2", "CROSSOFF");


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00019:   sassign V5004 := CE_x(num 2)
K_as_sassign:  lhs=V5004
     sassign rhs=CE_x(num 2)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_2_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_2_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_2/GP := CE_x(num 2)
hpr emit at 22:primesya/T404/Main/T404/Main/V_2_GP := 2;



QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00020: K_goto(UNCOND, primesya/T404/Main/LL278)
(0): interpreter: jump to primesya/T404/Main/LL278
elab5_render T404jump from 18 to 37
emit at 23: goto T404_38
Rendering basic block 3/18   38-38-F
WF:elab5_render T404: commence
WF:elab5_render T404: elab5_render T404: Block start. PCT404:38
emit at 24: label T404_38
elab5_render T404Start generate traj 38 .. 38
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T404: Block start. PCT404:38:SrcStack=
 --- ThreadStart_Main10
 kcode00038: K_goto(V5004 < Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), primesya/T404/Main/LL174)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==Env_leaf(CEE_tendnonataken-nonconst)
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==Env_leaf(CEE_tendnonataken-nonconst)
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
(0): interpreter: save thunk: bne taken=primesya/T404/Main/T404/Main/V_2_GP<1000
elab5_render T404conditional branch from 38 to 21
emit at 26: bne primesya/T404/Main/T404/Main/V_2_GP<1000 T404_22
emit at 27: goto T404_40
Rendering basic block 4/18   22-24-F
WF:elab5_render T404: commence
WF:elab5_render T404: elab5_render T404: Block start. PCT404:22
emit at 28: label T404_22
elab5_render T404Start generate traj 22 .. 24
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T404: Block start. PCT404:22:SrcStack=
 --- ThreadStart_Main10
 kcode00022: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
hpr emit at 30:Xeasc *APPLY:hpr_pause(8);


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00023:   sassign V5005 := CE_alu(V5004, +, V5004)
K_as_sassign:  lhs=V5005
     sassign rhs=CE_alu(CTL_net(false, 32, Signed,[native]), V5004, +, V5004)

    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==Env_leaf(CEE_tendnonataken-nonconst)
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==Env_leaf(CEE_tendnonataken-nonconst)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==Env_leaf(CEE_tendnonataken-nonconst)
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==Env_leaf(CEE_tendnonataken-nonconst)
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_4_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_4_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_4/GP := CE_x(W_node.+ primesya/T404/Main/T404/Main/V_2_GP+primesya/T404/Main/T404/Main/V_2_GP)
hpr emit at 31:primesya/T404/Main/T404/Main/V_4_GP := primesya/T404/Main/T404/Main/V_2_GP+primesya/T404/Main/T404/Main/V_2_GP;



QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00024: K_goto(V5005 < Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), primesya/T404/Main/LL209)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nonataken-nonconst
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nonataken-nonconst
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
(1): interpreter: save thunk: bne taken=primesya/T404/Main/T404/Main/V_4_GP<1000
elab5_render T404conditional branch from 22 to 27
emit at 32: bne primesya/T404/Main/T404/Main/V_4_GP<1000 T404_28
emit at 33: goto T404_25
Rendering basic block 5/18   25-26-F
WF:elab5_render T404: commence
WF:elab5_render T404: elab5_render T404: Block start. PCT404:25
emit at 34: label T404_25
elab5_render T404Start generate traj 25 .. 26
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T404: Block start. PCT404:25:SrcStack=
 --- ThreadStart_Main10
 kcode00025: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "Skip out on square")) EMIT)
hpr emit at 36:Xeasc *APPLY:hpr_writeln($$AUTOFORMAT: This will be automatically replaced with a printf formatted string., "Skip out on square");


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00026: K_goto(UNCOND, primesya/T404/Main/LL289)
(0): interpreter: jump to primesya/T404/Main/LL289
elab5_render T404jump from 25 to 39
emit at 37: goto T404_40
Rendering basic block 6/18   40-43-F
WF:elab5_render T404: commence
WF:elab5_render T404: elab5_render T404: Block start. PCT404:40
emit at 38: label T404_40
elab5_render T404Start generate traj 40 .. 43
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T404: Block start. PCT404:40:SrcStack=
 --- ThreadStart_Main10
 kcode00040: K_easc(CE_apply(KiwiSystem/Kiwi/KppMark=hpr_KppMark, 
       Arg1 = CE_x(XS_fill "wp3")
       Arg2 = CE_x(XS_fill "COUNTING")) EMIT)
hpr emit at 40:Xeasc *APPLY:hpr_KppMark("wp3", "COUNTING");


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00041: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "Now counting")) EMIT)
hpr emit at 41:Xeasc *APPLY:hpr_writeln($$AUTOFORMAT: This will be automatically replaced with a printf formatted string., "Now counting");


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00042:   sassign V5006 := CE_x(num 0)
K_as_sassign:  lhs=V5006
     sassign rhs=CE_x(num 0)

+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_4_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_4_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_4/GP := CE_x(num 0)
hpr emit at 42:primesya/T404/Main/T404/Main/V_4_GP := 0;



QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00043: K_goto(UNCOND, primesya/T404/Main/LL385)
(0): interpreter: jump to primesya/T404/Main/LL385
elab5_render T404jump from 40 to 51
emit at 43: goto T404_52
Rendering basic block 7/18   52-52-F
WF:elab5_render T404: commence
WF:elab5_render T404: elab5_render T404: Block start. PCT404:52
emit at 44: label T404_52
elab5_render T404Start generate traj 52 .. 52
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T404: Block start. PCT404:52:SrcStack=
 --- ThreadStart_Main10
 kcode00052: K_goto(V5006 < Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), primesya/T404/Main/LL322)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 1))
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 1))
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
(0): interpreter: save thunk: bne taken=primesya/T404/Main/T404/Main/V_4_GP<1000
elab5_render T404conditional branch from 52 to 44
emit at 46: bne primesya/T404/Main/T404/Main/V_4_GP<1000 T404_45
emit at 47: goto T404_53
Rendering basic block 8/18   53-61-F
WF:elab5_render T404: commence
WF:elab5_render T404: elab5_render T404: Block start. PCT404:53
emit at 48: label T404_53
elab5_render T404Start generate traj 53 .. 61
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T404: Block start. PCT404:53:SrcStack=
 --- ThreadStart_Main10
 kcode00053: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "There are {0} primes below the natural number {1}.")
       Arg2 = Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})
       Arg3 = Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )) EMIT)
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
    nona   envlook uid=primesya/count%UINT%-1000%None
    nona   envlook tag=KES:primesya/count env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==CEE_scalar(CE_x(bnumU U32'1)))
KES:primesya/count was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==CEE_scalar(CE_x(bnumU U32'1)))
ansi_form arg string is There are %d primes below the natural number %u.
hpr emit at 50:Xeasc *APPLY:hpr_writeln("There are %d primes below the natural number %u.", count, 1000);


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00054: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "Optimisation variant={1} (count1 is {0}).")
       Arg2 = Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )
       Arg3 = CE_x(num 0)) EMIT)
    nona   envlook uid=primesya/count1%SINT%-1000%None
    nona   envlook tag=KES:primesya/count1 env_value=CE_x(num 2)
ansi_form arg string is Optimisation variant=%u (count1 is %u).
hpr emit at 51:Xeasc *APPLY:hpr_writeln("Optimisation variant=%u (count1 is %u).", 0, 2);


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00055: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
hpr emit at 52:Xeasc *APPLY:hpr_pause(8);


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00056: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
hpr emit at 53:Xeasc *APPLY:hpr_pause(8);


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00057: K_easc(CE_apply(KiwiSystem/Kiwi/KppMark=hpr_KppMark, 
       Arg1 = CE_x(XS_fill "FINISH")) EMIT)
hpr emit at 54:Xeasc *APPLY:hpr_KppMark("FINISH");


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00058: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
hpr emit at 55:Xeasc *APPLY:hpr_pause(8);


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00059:   sassign primesya/finished := CE_x(num 1)
K_as_sassign:  lhs=Var(primesya/finished%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=finished, io_output=true})
     sassign rhs=CE_x(num 1)

Netgen: Wt for Var(primesya/finished%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=finished, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>finished<
 NETGEN io=OUTPUT id=finished is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 1, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=finished:OUTPUT::Unsigned{init=0, io_output=true, username=finished}
evolve_scalar: nona: tag=KES:primesya/finished := CE_x(bnumU U1'1)
hpr emit at 56:finished := U1'1;



QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00060: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
hpr emit at 57:Xeasc *APPLY:hpr_pause(8);


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00061: K_goto(UNCOND, primesya/T404/Main/cbgtailhang10)
(4): interpreter: jump to primesya/T404/Main/cbgtailhang10
elab5_render T404jump from 53 to 62
emit at 58: goto T404_63
Rendering basic block 9/18   63-64-F
WF:elab5_render T404: commence
WF:elab5_render T404: elab5_render T404: Block start. PCT404:63
emit at 59: label T404_63
elab5_render T404Start generate traj 63 .. 64
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T404: Block start. PCT404:63:SrcStack=
 --- ThreadStart_Main10
 kcode00063: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
hpr emit at 61:Xeasc *APPLY:hpr_pause(8);


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00064: K_goto(UNCOND, primesya/T404/Main/cbgtailhang10)
(1): interpreter: jump to primesya/T404/Main/cbgtailhang10
elab5_render T404jump from 63 to 62
emit at 62: goto T404_63
Rendering basic block 10/18   45-46-F
WF:elab5_render T404: commence
WF:elab5_render T404: elab5_render T404: Block start. PCT404:45
emit at 63: label T404_45
elab5_render T404Start generate traj 45 .. 46
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T404: Block start. PCT404:45:SrcStack=
 --- ThreadStart_Main10
 kcode00045: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
hpr emit at 65:Xeasc *APPLY:hpr_pause(8);


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00046: K_goto(ISZERO CE_subsc(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ), V5006<<[primesya/PA]||[primesya/T404/Main/T404/Main/V_4]>>), primesya/T404/Main/LL352)
    nona   envlook uid=primesya/PA%$star1$/@/BOOL%-1000%None
    nona   envlook tag=KES:primesya/PA env_value=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 1))
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 1))
origq2: l1b pre eval=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ) 
post eval reapplied=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
WF:lower_indexed: CE_subsc 3: general array: uses general_subscription_lowerer for real work
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
ct2idl CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>) ans= @/BOOL
lower_indexed subsc: Made wondarray w=1 CE_region(@_BOOL%@/BOOL%0%None, CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), )
lowed_indexed CE_subsc 3: scaler=1 for an array containing  valuetypes CTL_net(false, 1, Unsigned,[native])
O_subsv: get_e_cls: site=O_subsv sclass retrieve from A_leaf annotation regionf=false idl=primesya/PA found d2
(1): interpreter: save thunk: bne taken=!(@_BOOL[{SC:d2,S64'400040}+{$offset,primesya/T404/Main/T404/Main/V_4_GP}])
elab5_render T404conditional branch from 45 to 48
emit at 66: bne !(@_BOOL[{SC:d2,S64'400040}+{$offset,primesya/T404/Main/T404/Main/V_4_GP}]) T404_49
emit at 67: goto T404_47
Rendering basic block 11/18   47-47-T
WF:elab5_render T404: commence
WF:elab5_render T404: elab5_render T404: Block start. PCT404:47
emit at 68: label T404_47
elab5_render T404Start generate traj 47 .. 47
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T404: Block start. PCT404:47:SrcStack=
 --- ThreadStart_Main10
 kcode00047:   sassign primesya/count := CE_alu(primesya/count, +, CE_x(num 1))
K_as_sassign:  lhs=Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})
     sassign rhs=CE_alu(CTL_net(false, 64, Unsigned,[native]), Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true}), +, CE_x(num 1))

    nona   envlook uid=primesya/count%UINT%-1000%None
    nona   envlook tag=KES:primesya/count env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==CEE_scalar(CE_x(bnumU U32'1)))
KES:primesya/count was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==CEE_scalar(CE_x(bnumU U32'1)))
Netgen: Wt for Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>count<, >HwWidth<>32<
 NETGEN io=OUTPUT id=count is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=count[31:0]:OUTPUT::Unsigned{init=0, io_output=true, username=count, HwWidth=32}
evolve_scalar: nona: tag=KES:primesya/count := CE_x(W_node.:<-cast- Cu(1+count))
hpr emit at 70:count := Cu(1+count);



emit at 71: goto T404_49
Rendering basic block 12/18   49-50-T
WF:elab5_render T404: commence
WF:elab5_render T404: elab5_render T404: Block start. PCT404:49
emit at 72: label T404_49
elab5_render T404Start generate traj 49 .. 50
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T404: Block start. PCT404:49:SrcStack=
 --- ThreadStart_Main10
 kcode00049: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "Tally counting {0} {1}")
       Arg2 = V5006
       Arg3 = Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true})) EMIT)
    nona   envlook uid=primesya/count%UINT%-1000%None
    nona   envlook tag=KES:primesya/count env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==CEE_scalar(CE_x(bnumU U32'1)))
KES:primesya/count was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/count
   lv==CEE_scalar(CE_x(bnumU U32'0)) and
   rk=KES:primesya/count
   rv==CEE_scalar(CE_x(bnumU U32'1)))
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 1))
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 1))
ansi_form arg string is Tally counting %u %d
hpr emit at 74:Xeasc *APPLY:hpr_writeln("Tally counting %u %d", primesya/T404/Main/T404/Main/V_4_GP, count);


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00050:   sassign V5006 := CE_alu(V5006, +, CE_x(num 1))
K_as_sassign:  lhs=V5006
     sassign rhs=CE_alu(CTL_net(false, 32, Signed,[native]), V5006, +, CE_x(num 1))

    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 1))
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 1))
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_4_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_4_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_4/GP := CE_x(W_node.+ 1+primesya/T404/Main/T404/Main/V_4_GP)
hpr emit at 75:primesya/T404/Main/T404/Main/V_4_GP := 1+primesya/T404/Main/T404/Main/V_4_GP;



emit at 76: goto T404_52
Rendering basic block 13/18   28-28-F
WF:elab5_render T404: commence
WF:elab5_render T404: elab5_render T404: Block start. PCT404:28
emit at 77: label T404_28
elab5_render T404Start generate traj 28 .. 28
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T404: Block start. PCT404:28:SrcStack=
 --- ThreadStart_Main10
 kcode00028: K_goto(UNCOND, primesya/T404/Main/LL263)
(0): interpreter: jump to primesya/T404/Main/LL263
elab5_render T404jump from 28 to 34
emit at 79: goto T404_35
Rendering basic block 14/18   35-35-F
WF:elab5_render T404: commence
WF:elab5_render T404: elab5_render T404: Block start. PCT404:35
emit at 80: label T404_35
elab5_render T404Start generate traj 35 .. 35
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T404: Block start. PCT404:35:SrcStack=
 --- ThreadStart_Main10
 kcode00035: K_goto(V5005 < Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ), primesya/T404/Main/LL214)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==Env_leaf(CEE_tendnonataken-nonconst) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 6))
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==Env_leaf(CEE_tendnonataken-nonconst) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 6))
    nona   envlook uid=primesya/limit%SINT%-1000%None
    nona   envlook tag=KES:primesya/limit env_value=CE_x(num 1000)
(0): interpreter: save thunk: bne taken=primesya/T404/Main/T404/Main/V_4_GP<1000
elab5_render T404conditional branch from 35 to 29
emit at 82: bne primesya/T404/Main/T404/Main/V_4_GP<1000 T404_30
emit at 83: goto T404_36
Rendering basic block 15/18   36-36-T
WF:elab5_render T404: commence
WF:elab5_render T404: elab5_render T404: Block start. PCT404:36
emit at 84: label T404_36
elab5_render T404Start generate traj 36 .. 36
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T404: Block start. PCT404:36:SrcStack=
 --- ThreadStart_Main10
 kcode00036:   sassign V5004 := CE_alu(V5004, +, CE_x(num 1))
K_as_sassign:  lhs=V5004
     sassign rhs=CE_alu(CTL_net(false, 32, Signed,[native]), V5004, +, CE_x(num 1))

    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 3))) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 2))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 3))) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 2))
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_2_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_2_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_2/GP := CE_x(W_node.+ 1+primesya/T404/Main/T404/Main/V_2_GP)
hpr emit at 86:primesya/T404/Main/T404/Main/V_2_GP := 1+primesya/T404/Main/T404/Main/V_2_GP;



emit at 87: goto T404_38
Rendering basic block 16/18   30-33-T
WF:elab5_render T404: commence
WF:elab5_render T404: elab5_render T404: Block start. PCT404:30
emit at 88: label T404_30
elab5_render T404Start generate traj 30 .. 33
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T404: Block start. PCT404:30:SrcStack=
 --- ThreadStart_Main10
 kcode00030: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "Cross off {0} {1}   (count1={2})")
       Arg2 = V5004
       Arg3 = V5005
       Arg4 = Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., )) EMIT)
    nona   envlook uid=primesya/count1%SINT%-1000%None
    nona   envlook tag=KES:primesya/count1 env_value=CE_x(num 2)
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==Env_leaf(CEE_tendnonataken-nonconst) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 6))
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==Env_leaf(CEE_tendnonataken-nonconst) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 6))
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 3))) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 2))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 3))) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 2))
ansi_form arg string is Cross off %u %u   (count1=%u)
hpr emit at 90:Xeasc *APPLY:hpr_writeln("Cross off %u %u   (count1=%u)", primesya/T404/Main/T404/Main/V_2_GP, primesya/T404/Main/T404/Main/V_4_GP, 2);


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00031: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
hpr emit at 91:Xeasc *APPLY:hpr_pause(8);


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00032:   vsassign primesya/PA[V5005] := CE_x(num 0)
K_as_vassign: lhs=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )
    vassign subs=V5005
    vassign rhs=CE_x(num 0)
    vassign aid_b=[primesya/PA]
    vassign aid_o=[primesya/T404/Main/T404/Main/V_3]
    nona   envlook uid=primesya/PA%$star1$/@/BOOL%-1000%None
    nona   envlook tag=KES:primesya/PA env_value=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==Env_leaf(CEE_tendnonataken-nonconst) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 6))
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==Env_leaf(CEE_tendnonataken-nonconst) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 6))
ct2idl CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>) ans= @/BOOL
lower_lmode subsc wa: Made wondarray w=1 CE_region(@_BOOL%@/BOOL%0%None, CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), )
new l1=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
evolve: vidx: idx was=O_subsv(primesya/PA;primesya/T404/Main/T404/Main/V_3;S64'400040;primesya/T404/Main/T404/Main/V_4_GP) vari=true
evolve: vidx: killed from env KES:BOOL[O_subsv(primesya/PA;primesya/T404/Main/T404/Main/V_3;S64'400040;primesya/T404/Main/T404/Main/V_4_GP)] := CE_x(bnumU U1'0)
O_subsv: get_e_cls: site=O_subsv sclass retrieve from A_leaf annotation regionf=false idl=primesya/PA found d2
hpr emit at 92:@_BOOL[{SC:d2,S64'400040}+{$offset,primesya/T404/Main/T404/Main/V_4_GP}] := U1'0;



QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00033:   sassign V5005 := CE_alu(V5005, +, V5004)
K_as_sassign:  lhs=V5005
     sassign rhs=CE_alu(CTL_net(false, 32, Signed,[native]), V5005, +, V5004)

    nona   envlook uid=primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_4/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==Env_leaf(CEE_tendnonataken-nonconst) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 6))
KES:primesya/T404/Main/T404/Main/V_4/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_4/GP
   lv==Env_leaf(CEE_tendnonataken-nonconst) and
   rk=KES:primesya/T404/Main/T404/Main/V_4/GP
   rv==CEE_scalar(CE_x(num 6))
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 3))) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 2))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==Env_leaf(CEE_tendnota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 2)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 3))) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 2))
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_4/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_4_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_4_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_4/GP := CE_x(W_node.+ primesya/T404/Main/T404/Main/V_2_GP+primesya/T404/Main/T404/Main/V_4_GP)
hpr emit at 93:primesya/T404/Main/T404/Main/V_4_GP := primesya/T404/Main/T404/Main/V_2_GP+primesya/T404/Main/T404/Main/V_4_GP;



emit at 94: goto T404_35
Rendering basic block 17/18   12-15-T
WF:elab5_render T404: commence
WF:elab5_render T404: elab5_render T404: Block start. PCT404:12
emit at 95: label T404_12
elab5_render T404Start generate traj 12 .. 15
QX9: gt_step:KER_code_generation:csharp/primes_offchip.exe:<no codepoint>callstring__=elab5_render T404: Block start. PCT404:12:SrcStack=
 --- ThreadStart_Main10
 kcode00012: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
hpr emit at 97:Xeasc *APPLY:hpr_pause(8);


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00013:   vsassign primesya/PA[V5003] := CE_x(num 1)
K_as_vassign: lhs=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., )
    vassign subs=V5003
    vassign rhs=CE_x(num 1)
    vassign aid_b=[primesya/PA]
    vassign aid_o=[primesya/T404/Main/T404/Main/V_1]
    nona   envlook uid=primesya/PA%$star1$/@/BOOL%-1000%None
    nona   envlook tag=KES:primesya/PA env_value=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
ct2idl CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>) ans= @/BOOL
lower_lmode subsc wa: Made wondarray w=1 CE_region(@_BOOL%@/BOOL%0%None, CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), )
new l1=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
evolve: vidx: idx was=O_subsv(primesya/PA;primesya/T404/Main/T404/Main/V_1;S64'400040;primesya/T404/Main/T404/Main/V_2_GP) vari=true
evolve: vidx: killed from env KES:BOOL[O_subsv(primesya/PA;primesya/T404/Main/T404/Main/V_1;S64'400040;primesya/T404/Main/T404/Main/V_2_GP)] := CE_x(bnumU U1'1)
O_subsv: get_e_cls: site=O_subsv sclass retrieve from A_leaf annotation regionf=false idl=primesya/PA found d2
hpr emit at 98:@_BOOL[{SC:d2,S64'400040}+{$offset,primesya/T404/Main/T404/Main/V_2_GP}] := U1'1;



QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00014: K_easc(CE_apply(System/Console/WriteLine=hpr_writeln, 
       Arg1 = CE_x(XS_fill "Setting initial array flag to hold : addr={0} readback={1}")
       Arg2 = V5003
       Arg3 = CE_subsc(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ), V5003<<[primesya/PA]||[primesya/T404/Main/T404/Main/V_1]>>)) EMIT)
    nona   envlook uid=primesya/PA%$star1$/@/BOOL%-1000%None
    nona   envlook tag=KES:primesya/PA env_value=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
origq2: l1b pre eval=Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ) 
post eval reapplied=CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})
    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
WF:lower_indexed: CE_subsc 3: general array: uses general_subscription_lowerer for real work
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.4/aitem12 found d2
ct2idl CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>) ans= @/BOOL
lower_indexed subsc: Made wondarray w=1 CE_region(@_BOOL%@/BOOL%0%None, CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>), )
lowed_indexed CE_subsc 3: scaler=1 for an array containing  valuetypes CTL_net(false, 1, Unsigned,[native])
O_subsv: get_e_cls: site=O_subsv sclass retrieve from A_leaf annotation regionf=false idl=primesya/PA found d2
ansi_form arg string is Setting initial array flag to hold : addr=%u readback=%d
hpr emit at 99:Xeasc *APPLY:hpr_writeln("Setting initial array flag to hold : addr=%u readback=%d", primesya/T404/Main/T404/Main/V_2_GP, @_BOOL[{SC:d2,S64'400040}+{$offset,primesya/T404/Main/T404/Main/V_2_GP}]);


QX9: gt_step:KER_code_generation:threadstart//T404/Main kcode00015:   sassign V5003 := CE_alu(V5003, +, CE_x(num 1))
K_as_sassign:  lhs=V5003
     sassign rhs=CE_alu(CTL_net(false, 32, Signed,[native]), V5003, +, CE_x(num 1))

    nona   envlook uid=primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None
    nona   envlook tag=KES:primesya/T404/Main/T404/Main/V_2/GP env_value=/tend:nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
KES:primesya/T404/Main/T404/Main/V_2/GP was in env as dead value. Using origx: tend=nota_const constant_fold_meets tid=T404 entry_point=0: const meet of
   lk=KES:primesya/T404/Main/T404/Main/V_2/GP
   lv==CEE_scalar(CE_x(num 0)) and
   rk=KES:primesya/T404/Main/T404/Main/V_2/GP
   rv==CEE_scalar(CE_x(num 1))
+++ should skip conv to self ? maybe not. For CTL_net(false, 32, Signed,[native])
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_2/GP%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {shared_gp=true}) is false
 NETGEN att=false>shared_gp<>true<
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_2_GP is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_2_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
evolve_scalar: nona: tag=KES:primesya/T404/Main/T404/Main/V_2/GP := CE_x(W_node.+ 1+primesya/T404/Main/T404/Main/V_2_GP)
hpr emit at 100:primesya/T404/Main/T404/Main/V_2_GP := 1+primesya/T404/Main/T404/Main/V_2_GP;



emit at 101: goto T404_17
hpr top/tail emit: 102:// End of DIC comment 1



hpr emit at 102:// End of DIC comment 1



WF:Assemble VM: primesya_T404_Main: start
WF:reassemble_dic: start
WF:reassemble_dic: Reassembled 103 dic locations
redirect optimise 0/103
WF:Assemble VM: primesya_T404_Main: finished 103 instructions. gc=
WF:main pass of thread used for Main: ending
WF:optimise_dic Main uid=Main10: starting anal
WF:optimise_dic Main uid=Main10: done anal
WF:optimise_dic Main uid=Main10: starting kill (commenting out) of spare lines
WF:optimise_dic Main uid=Main10: done kill of spare lines
WF:TSTART classwalk method user root:primesya this=Var(ktop18%primesya%-1000%None, CT_cr(primesya, <<NONE>>), ..., {constant=true}): FINISHED COMPILE OF THREAD/EP
phase=P_final : Keep for root primesya  Main was true
Netgen: Wt for Var(primesya/finished%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=finished, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>finished<
 NETGEN io=OUTPUT id=finished is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 1, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=finished:OUTPUT::Unsigned{init=0, io_output=true, username=finished}
Netgen: Wt for Var(primesya/edesign%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=edesign, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>edesign<, >HwWidth<>32<
 NETGEN io=OUTPUT id=edesign is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=false, dims=<NONE>
netgen ans=edesign[31:0]:OUTPUT::Signed{init=0, io_output=true, username=edesign, HwWidth=32}
Netgen: Wt for Var(primesya/evariant_output%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=evariant, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>evariant<, >HwWidth<>32<
 NETGEN io=OUTPUT id=evariant is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=false, dims=<NONE>
netgen ans=evariant[31:0]:OUTPUT::Signed{init=0, io_output=true, username=evariant, HwWidth=32}
Netgen: Wt for Var(primesya/evariant_master%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/evariant_master is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/evariant_master[-2147483648..2147483647]:LOCAL::Signed{init=0}
Netgen: Wt for Var(primesya/elimit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=elimit, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>elimit<, >HwWidth<>32<
 NETGEN io=OUTPUT id=elimit is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=false, dims=<NONE>
netgen ans=elimit[31:0]:OUTPUT::Signed{init=0, io_output=true, username=elimit, HwWidth=32}
Netgen: Wt for Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/count1 is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/count1[-2147483648..2147483647]:LOCAL::Signed{init=0}
Netgen: Wt for Var(primesya/count%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=count, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>count<, >HwWidth<>32<
 NETGEN io=OUTPUT id=count is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=count[31:0]:OUTPUT::Unsigned{init=0, io_output=true, username=count, HwWidth=32}
Netgen: Wt for Var(primesya/vol%UINT%-1000%None, CTL_net(false, 32, Unsigned,[native]), ..., {HwWidth=32, username=volume, io_output=true, io_input=true}) is false
 NETGEN att=true>io_input<>true<, >io_output<>true<, >username<>volume<, >HwWidth<>32<
 NETGEN io=INPUT id=volume is_string=false
 NETGEN NET io=INPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=volume[31:0]:INPUT::Unsigned{init=0, io_input=true, io_output=true, username=volume, HwWidth=32}
Netgen: Wt for Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/PA is_string=false
 NETGEN L2662 ARR/NET n=1 io=LOCAL
lnetgen: netgen dt=&(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), use_integer=false, dims=<NONE>
netgen ans=primesya/PA:LOCAL::Unsigned{init=0}
Netgen: Wt for Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/limit is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/limit[-2147483648..2147483647]:LOCAL::Signed{init=0}
WF:KiwiC: Created VM2 machine : primesya10end
WF:root_classwalk MM_root start , Specificf=S_root_class target='primesya'' items=13: End
root_compiler class done: primesya
Root class elaborated: specificf=S_root_class leftover=0
WF:KiwiC: front end input processing of class or method called primesya: done






WF:Kiwic: processing root attribute-marked item: root refers to KSubs2_Director: start
ct2idl CT_cr(KSubs2_Director, <<NONE>>) ans= KSubs2_Director
aid was not yet inserted in ataken base: aid=ktop20 0 heapspace=false
nonataken oracle: ktop20 d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-phy nemtok=ktop20  vuid=PHYS {name = ["ktop20"];
      dtidl = ["KSubs2_Director"];
      baser = -1000L;
      length = null;}
compile9 root dt=CT_cr(KSubs2_Director, <<NONE>>)
WF:KiwiC: front end input processing of class or method called KSubs2_Director: start
WF:root_compiler: elaborating class 'KSubs2_Director'


----------------------------------------------------
WF:root_classwalk MM_root start , Specificf=S_root_class target='KSubs2_Director'' items=10: Start
<NONE>
Detected (rootmarked) method as an entrypoint for KSubs2_Director host_pio_process []
Detected (rootmarked) method as an entrypoint for KSubs2_Director .ctor is false
Detected (rootmarked) method as an entrypoint for KSubs2_Director .cctor is false
Report on potential class static method compilation root entry points (Remotes will only be used if not called)
  "Root": KSubs2_Director/host_pio_process args=<NONE>
End report on potential class static method compilation root entry points (Remotes will only be used if not called) (1 items)

WF:root_classwalk MM_root start , Specificf=S_root_class target='KSubs2_Director'' items=10: root_classwalk MM_root start , Specificf=S_root_class target='KSubs2_Director'' items=10 start pass: style=MM_root phase=P_fields
WF:Incorporating static field: KSubs2_Director/design_serial_number
WF:field_def: : Incorporating static
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=KSubs2_Director/design_serial_number bytes=0 bytes at 30192.  ce=CE_x(num 30192)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
static_field_def: normed type is CTL_net(false, 32, Signed,[native]) for KSubs2_Director/design_serial_number%SINT%30192%None
I/O designation for KSubs2_Director/design_serial_number%SINT%30192%None is OUTPUT
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=KSubs2_Director/design_serial_number bytes=4 bytes at 30192.  ce=CE_x(num 30192)
named reg existed sheap Var(KSubs2_Director/design_serial_number%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=design_serial_number, io_output=true})


WF:Incorporating static field: KSubs2_Director/pio_addr
WF:field_def: : Incorporating static
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=KSubs2_Director/pio_addr bytes=0 bytes at 30200.  ce=CE_x(num 30200)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
static_field_def: normed type is CTL_net(false, 32, Signed,[native]) for KSubs2_Director/pio_addr%SINT%30200%None
I/O designation for KSubs2_Director/pio_addr%SINT%30200%None is INPUT
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=KSubs2_Director/pio_addr bytes=4 bytes at 30200.  ce=CE_x(num 30200)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
Record_memdesc_item: regf=false msg=uav-phy nemtok=KSubs2_Director/pio_addr  vuid=PHYS {name = ["KSubs2_Director/pio_addr"];
      dtidl = ["SINT"];
      baser = -1000L;
      length = null;}


WF:Incorporating static field: KSubs2_Director/pio_wdata
WF:field_def: : Incorporating static
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=KSubs2_Director/pio_wdata bytes=0 bytes at 30208.  ce=CE_x(num 30208)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
static_field_def: normed type is CTL_net(false, 32, Signed,[native]) for KSubs2_Director/pio_wdata%SINT%30208%None
I/O designation for KSubs2_Director/pio_wdata%SINT%30208%None is INPUT
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=KSubs2_Director/pio_wdata bytes=4 bytes at 30208.  ce=CE_x(num 30208)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
Record_memdesc_item: regf=false msg=uav-phy nemtok=KSubs2_Director/pio_wdata  vuid=PHYS {name = ["KSubs2_Director/pio_wdata"];
      dtidl = ["SINT"];
      baser = -1000L;
      length = null;}


WF:Incorporating static field: KSubs2_Director/pio_rdata
WF:field_def: : Incorporating static
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=KSubs2_Director/pio_rdata bytes=0 bytes at 30216.  ce=CE_x(num 30216)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
static_field_def: normed type is CTL_net(false, 32, Signed,[native]) for KSubs2_Director/pio_rdata%SINT%30216%None
I/O designation for KSubs2_Director/pio_rdata%SINT%30216%None is OUTPUT
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=KSubs2_Director/pio_rdata bytes=4 bytes at 30216.  ce=CE_x(num 30216)
named reg existed sheap Var(KSubs2_Director/pio_rdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_rdata, io_output=true})


WF:Incorporating static field: KSubs2_Director/pio_hwen
WF:field_def: : Incorporating static
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=KSubs2_Director/pio_hwen bytes=0 bytes at 30224.  ce=CE_x(num 30224)
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
static_field_def: normed type is CTL_net(false, 1, Unsigned,[native]) for KSubs2_Director/pio_hwen%BOOL%30224%None
I/O designation for KSubs2_Director/pio_hwen%BOOL%30224%None is INPUT
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=KSubs2_Director/pio_hwen bytes=1 bytes at 30224.  ce=CE_x(num 30224)
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
Record_memdesc_item: regf=false msg=uav-phy nemtok=KSubs2_Director/pio_hwen  vuid=PHYS {name = ["KSubs2_Director/pio_hwen"];
      dtidl = ["BOOL"];
      baser = -1000L;
      length = null;}


WF:Incorporating static field: KSubs2_Director/pio_size
WF:field_def: : Incorporating static
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=KSubs2_Director/pio_size bytes=0 bytes at 30232.  ce=CE_x(num 30232)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
static_field_def: normed type is CTL_net(false, 32, Signed,[native]) for KSubs2_Director/pio_size%SINT%30232%None
I/O designation for KSubs2_Director/pio_size%SINT%30232%None is LOCAL
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=KSubs2_Director/pio_size bytes=4 bytes at 30232.  ce=CE_x(num 30232)
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
aid was not yet inserted in ataken base: aid=KSubs2_Director/pio_size 0 heapspace=false
nonataken oracle: KSubs2_Director/pio_size d0  nonataken=true
Record_memdesc_item: regf=false msg=uav-phy nemtok=KSubs2_Director/pio_size  vuid=PHYS {name = ["KSubs2_Director/pio_size"];
      dtidl = ["SINT"];
      baser = -1000L;
      length = null;}


WF:Incorporating static field: KSubs2_Director/pio_space
WF:field_def: : Incorporating static
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=false widl=KSubs2_Director/pio_space bytes=0 bytes at 30240.  ce=CE_x(num 30240)
ct2idl &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)) ans= $star1$/@/SINT
static_field_def: normed type is &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)) for KSubs2_Director/pio_space%$star1$/@/SINT%30240%None
I/O designation for KSubs2_Director/pio_space%$star1$/@/SINT%30240%None is LOCAL
 obj_alloc: storemode=STOREMODE_scalar_static reallyf=true widl=KSubs2_Director/pio_space bytes=4 bytes at 30240.  ce=CE_x(num 30240)
named reg existed sheap Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., )


consider KSubs2_Director/host_pio_process main pass: called already=false ,  e/p args=<NONE>
consider KSubs2_Director/host_pio_process main pass: called already=false major_hls_mode=MM_classical_hls
compiling static method as entry point: style=Root idl=KSubs2_Director/host_pio_process
WF:root_classwalk MM_root start , Specificf=S_root_class target='KSubs2_Director'' items=10: root_classwalk MM_root start , Specificf=S_root_class target='KSubs2_Director'' items=10 start pass: style=MM_classical_hls phase=P_final
Performing root elaboration of method host_pio_process
phase=P_final : Keep for root KSubs2_Director (ctor_flag=false) (gids=host_pio_process) keep=true 
WF:TSTART classwalk method user root:KSubs2_Director this=Var(ktop20%KSubs2_Director%-1000%None, CT_cr(KSubs2_Director, <<NONE>>), ..., {constant=true}): START COMPILE OF THREAD/EP. tailhang=true specificf=S_root_method
WF:KiwiC start_thread (or entry point) id=hostpioprocess10: Commence
Env at start of thread T405  KES:CS/0.4/refxxarray12 --> =CEE_scalar(CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})) 
Env at start of thread T405  KES:CS/0.6/refxxarray10 --> =CEE_scalar(CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})) 
Env at start of thread T405  KES:KSubs2_Director/design_serial_number --> =CEE_scalar(CE_x(bnumS S32'2232578)) 
Env at start of thread T405  KES:KSubs2_Director/pio_rdata --> =CEE_scalar(CE_x(num 0)) 
Env at start of thread T405  KES:KSubs2_Director/pio_space --> =CEE_scalar(CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})) 
Env at start of thread T405  KES:KiwiSystem/Kiwi/old_pausemode_value --> =CEE_scalar(CE_x(bnumU U32'2)) 
Env at start of thread T405  KES:KiwiSystem/Kiwi/tnow --> =CEE_scalar(CE_x(bnumU U64'0)) 
Env at start of thread T405  KES:System/BitConverter/IsLittleEndian --> =CEE_scalar(CE_x(bnumU U1'1)) 
Env at start of thread T405  KES:$memmap/heapbrk --> =CEE live CEE_heapspace(401040,^2=(400040,1000,CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000)), (400000,40,CT_arr(CTL_net(false, 32, Signed,[native]), 10)),inuse=400000, 400040, discreps=<NONE>) 
Env at start of thread T405  KES:primesya/PA --> =CEE_scalar(CE_region(@_BOOL%@/BOOL%400040%1000, CT_arr(CTL_net(false, 1, Unsigned,[native]), 1000), {bytes=1000, length=1000, cid=BOOL.@, marker=wondtoken, constant=true})) 
Env at start of thread T405  KES:primesya/count --> =CEE_scalar(CE_x(bnumU U32'0)) 
Env at start of thread T405  KES:primesya/count1 --> =CEE_scalar(CE_x(num 0)) 
Env at start of thread T405  KES:primesya/edesign --> =CEE_scalar(CE_x(num 4032)) 
Env at start of thread T405  KES:primesya/elimit --> =CEE_scalar(CE_x(num 0)) 
Env at start of thread T405  KES:primesya/evariant_output --> =CEE_scalar(CE_x(num 0)) 
Env at start of thread T405  KES:primesya/finished --> =CEE_scalar(CE_x(bnumU U1'0)) 
Env at start of thread T405  KES:primesya/limit --> =CEE_scalar(CE_x(num 1000)) 
Env at start of thread T405  KES:$memmap/staticbrk --> =CEE live CEE_int(30248) 
etarget =etarget20 retlab=T405tzailhang_
Generating tail hang code for T405tzailhang_
WF:main KiwiC pass of host_pio_process uid=hostpioprocess10: Commence
WF:generate_kcoder: start iteration 0
typecheck: Inserted 0 method arguments
WF:First pass of KSubs2_Director/T405/host_pio_process/T405/host_pio_process/hostpioprocess10: Commence
code_setup: keep_return=true, tailhangf=true

code_setup: sequence of 128 instructions

Report on Dest labs used
  LL0
  LL47
  LL31
End report on Dest labs used (3 items)

Redirecting returns to cbgtailhang12
WF:First pass of KSubs2_Director/T405/host_pio_process/T405/host_pio_process/hostpioprocess10: Firstpass spills done. Typecheck start.
First pass structure made for KSubs2_Director/T405/host_pio_process/T405/host_pio_process/hostpioprocess10 of length 6 with 15 CIL instructions
pc=0: Making 0 spills
Made spills
pc=1: Making 0 spills
Made spills
pc=2: Making 0 spills
Made spills
pc=4: Making 0 spills
Made spills
pc=3: Making 0 spills
Made spills
reachable basic block pcvalues 2, 4, 3, 1, 0
WF:elab_block: KSubs2_Director/T405/host_pio_process/T405/host_pio_process/hostpioprocess10--typecheck--------------------- pc=0
CIL_custom encountered .ctor
Custom method att encountered: KiwiSystem/Kiwi/HardwareEntryPoint
<NONE>
Report on Custom Attribute Marshalled Args: none exist.
WF:elab_block: KSubs2_Director/T405/host_pio_process/T405/host_pio_process/hostpioprocess10--typecheck--------------------- pc=1
Drop ldsfld callstring=KSubs2_Director/T405/host_pio_process/CZ:1:1 dt=CTL_net(false, 1, Unsigned,[native]) idl=pio_hwen
WF:elab_block: KSubs2_Director/T405/host_pio_process/T405/host_pio_process/hostpioprocess10--typecheck--------------------- pc=3
Drop ldsfld callstring=KSubs2_Director/T405/host_pio_process/CZ:3:1 dt=&(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)) idl=pio_space
Drop ldsfld callstring=KSubs2_Director/T405/host_pio_process/CZ:3:2 dt=CTL_net(false, 32, Signed,[native]) idl=pio_addr
Drop stsfld callstring=KSubs2_Director/T405/host_pio_process/CZ:3:4 dt=CT_cr(KSubs2_Director, <<NONE>>) idl=pio_rdata
WF:elab_block: KSubs2_Director/T405/host_pio_process/T405/host_pio_process/hostpioprocess10--typecheck--------------------- pc=4
WF:typecheck: Cili_call KiwiSystem/Kiwi/Pause ncp=KSubs2_Director/T405/host_pio_process/CZ:4:1/of/ZZPause22
WF:elab_block: KSubs2_Director/T405/host_pio_process/T405/host_pio_process/hostpioprocess10--typecheck--------------------- pc=2
Drop ldsfld callstring=KSubs2_Director/T405/host_pio_process/CZ:2:0 dt=&(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)) idl=pio_space
Drop ldsfld callstring=KSubs2_Director/T405/host_pio_process/CZ:2:1 dt=CTL_net(false, 32, Signed,[native]) idl=pio_addr
Drop ldsfld callstring=KSubs2_Director/T405/host_pio_process/CZ:2:2 dt=CTL_net(false, 32, Signed,[native]) idl=pio_wdata
WF:First pass of KSubs2_Director/T405/host_pio_process/T405/host_pio_process/hostpioprocess10: Firstpass and typecheck done.
 Concourse reachable is 0, 1, 2, 4, 3
 Exit states are <NONE>
WF:First pass of KSubs2_Director/T405/host_pio_process/T405/host_pio_process/hostpioprocess10: End of first pass
WF:rehydrate droppings for : start host_pio_process
Typenorm classref KSubs2_Director requesting grounded
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["KSubs2_Director"]
WF:cil_gen_dtable: start table pairs=0 for real_rn=RN_idl ["KSubs2_Director"]
WF:rehydrate droppings for : done host_pio_process
gtrace: Inserted 0 method arguments
WF:elab_block: KSubs2_Director/T405/host_pio_process/T405/host_pio_process/hostpioprocess10--gtrace--------------------- pc=0
CIL_custom encountered .ctor
Custom method att encountered: KiwiSystem/Kiwi/HardwareEntryPoint
<NONE>
Report on Custom Attribute Marshalled Args: none exist.
WF:elab_block: KSubs2_Director/T405/host_pio_process/T405/host_pio_process/hostpioprocess10--gtrace--------------------- pc=1
WF:elab_block: KSubs2_Director/T405/host_pio_process/T405/host_pio_process/hostpioprocess10--gtrace--------------------- pc=2
WF:elab_block: KSubs2_Director/T405/host_pio_process/T405/host_pio_process/hostpioprocess10--gtrace--------------------- pc=3
named reg existed sheap Var(KSubs2_Director/pio_rdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_rdata, io_output=true})
WF:elab_block: KSubs2_Director/T405/host_pio_process/T405/host_pio_process/hostpioprocess10--gtrace--------------------- pc=4
WF:gtrace: Cili_call KiwiSystem/Kiwi/Pause ncp=KSubs2_Director/T405/host_pio_process/CZ:4:1/of/ZZPause22
hostpioprocess10: rsteps at end 9995
Ataken scan complete. 3 items.
Thread host_pio_process uid=hostpioprocess10 has 9 CIL instructions in 4 basic blocks
Report on Transitions for T405
  2   2-3-F  --> 7
  6   7-8-F  --> 1
  4   5-5-T  --> 7
  0   1-1-F  --> 5, 2
End report on Transitions for T405 (4 items)

WF:dfa: T405: Live variable analysis of 6 points start.
WF:dfa: T405: Gen and Kill sets computed.
WF:dfa: T405: Live variable analysis of 6 points completed in 0 iterations.
WF:dfa: done
Start of aux report kiwife virtual to physical register colouring/mapping for thread T405
: Linear scan colouring done for 0 vregs using 0 pregs
End of aux report kiwife virtual to physical register colouring/mapping for thread T405
WF:kcode5_static_elaborate of tid=T405 no_basic_blocks=4: commence
kcode5_static_elaborate of tid=T405 no_basic_blocks=4: Start generate lasso stem static elaborate
WF:kcode5_static_elaborate of tid=T405 no_basic_blocks=4: Block start. PCT405:0 region=(100))
kcode5_static_elaborate of tid=T405 no_basic_blocks=4: Log visit to 1 at age=0
QX9: gt_step:KER_lasso_stem:csharp/KSubs2_Director.dll:>>0000:
>>0000:100::SrcStack=
 --- ThreadStart_hostpioprocess10
 kcode0000: KSubs2_Director/T405/host_pio_process/LL0:
set lp to "threadstart//T405/host_pio_process"
QX9: gt_step:KER_lasso_stem:threadstart//T405/host_pio_process kcode0001: K_goto(ISZERO Var(KSubs2_Director/pio_hwen%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=pio_hwen, io_input=true}), KSubs2_Director/T405/host_pio_process/LL31)
 NETGEN att=false>io_input<>true<, >username<>pio_hwen<
 NETGEN io=INPUT id=pio_hwen is_string=false
 NETGEN NET io=INPUT constantp=false
lower1 uav: netgen dt=CTL_net(false, 1, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=pio_hwen:INPUT::Unsigned{init=0, io_input=true, username=pio_hwen}
(100): interpreter: save thunk: bne taken=!(pio_hwen)
kcode5_static_elaborate of tid=T405 no_basic_blocks=4: conditional branch from 0 to 4 at age 0
kcode5_static_elaborate of tid=T405 no_basic_blocks=4: Finished generating static elaborate trajectory
kcode5_static_elaborate of tid=T405 no_basic_blocks=4: Most advanced basic block start was 1 (total no blocks=4)
emit remark: End of static elaboration for tid T405. After all generate loops are unwound we arrive here: 1
WF:KiwiC-stages: End of static elaboration for tid T405. After all generate loops are unwound we arrive here: 1
WF:constant_fold_meets tid=T405 entry_point=1: start
Reverse post-order ordering for constant fold is 1, 2, 5, 7
WF:constant_fold_meets tid=T405 entry_point=1: constant_fold: start iterate over basic blocks
T405: Constant_fold meet iteration 0
QX9: gt_step:KER_constant_meet:csharp/KSubs2_Director.dll:<no codepoint>callstring__=constant_fold_meets tid=T405 entry_point=1:SrcStack=
 --- ThreadStart_hostpioprocess10
 kcode0001: K_goto(ISZERO Var(KSubs2_Director/pio_hwen%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=pio_hwen, io_input=true}), KSubs2_Director/T405/host_pio_process/LL31)
(0): interpreter: save thunk: bne taken=!(pio_hwen)
marking a diff (degenerate case) on 1
Constant Meet: 1-1-F-nA=1:0: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/KSubs2_Director.dll:<no codepoint>callstring__=constant_fold_meets tid=T405 entry_point=1:SrcStack=
 --- ThreadStart_hostpioprocess10
 kcode0002:   vsassign KSubs2_Director/pio_space[KSubs2_Director/pio_addr] := KSubs2_Director/pio_wdata
K_as_vassign: lhs=Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., )
    vassign subs=Var(KSubs2_Director/pio_addr%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_addr, io_input=true})
    vassign rhs=Var(KSubs2_Director/pio_wdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_wdata, io_input=true})
    vassign aid_b=[KSubs2_Director/pio_space]
    vassign aid_o=[KSubs2_Director/pio_addr]
    nona   envlook uid=KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None
    nona   envlook tag=KES:KSubs2_Director/pio_space env_value=CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
 NETGEN att=false>io_input<>true<, >username<>pio_addr<
 NETGEN io=INPUT id=pio_addr is_string=false
 NETGEN NET io=INPUT constantp=false
lower1 uav: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=pio_addr[-2147483648..2147483647]:INPUT::Signed{init=0, io_input=true, username=pio_addr}
 NETGEN att=false>io_input<>true<, >username<>pio_wdata<
 NETGEN io=INPUT id=pio_wdata is_string=false
 NETGEN NET io=INPUT constantp=false
lower1 uav: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=pio_wdata[-2147483648..2147483647]:INPUT::Signed{init=0, io_input=true, username=pio_wdata}
ct2idl CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>) ans= @/SINT
lower_lmode subsc wa: Made wondarray w=32 CE_region(@_SINT%@/SINT%0%None, CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>), )
new l1=CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.6/aitem10 found d1
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
evolve: vidx: idx was=O_subsv(KSubs2_Director/pio_space;KSubs2_Director/pio_addr;S64'400000;S64'4*pio_addr) vari=true
evolve: vidx: killed from env KES:SINT[O_subsv(KSubs2_Director/pio_space;KSubs2_Director/pio_addr;S64'400000;S64'4*pio_addr)] := CE_conv(CTL_net(false, 32, Signed,[native]), Var(KSubs2_Director/pio_wdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_wdata, io_input=true}))
O_subsv: get_e_cls: site=O_subsv sclass retrieve from A_leaf annotation regionf=false idl=KSubs2_Director/pio_space found d1
QX9: gt_step:KER_constant_meet:threadstart//T405/host_pio_process kcode0003: K_goto(UNCOND, KSubs2_Director/T405/host_pio_process/LL47)
(0): interpreter: jump to KSubs2_Director/T405/host_pio_process/LL47
marking a diff (degenerate case) on 2
Constant Meet: 2-3-F-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/KSubs2_Director.dll:<no codepoint>callstring__=constant_fold_meets tid=T405 entry_point=1:SrcStack=
 --- ThreadStart_hostpioprocess10
 kcode0005:   sassign KSubs2_Director/pio_rdata := CE_subsc(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>), Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., ), Var(KSubs2_Director/pio_addr%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_addr, io_input=true})<<[KSubs2_Director/pio_space]||[KSubs2_Director/pio_addr]>>)
K_as_sassign:  lhs=Var(KSubs2_Director/pio_rdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_rdata, io_output=true})
     sassign rhs=CE_subsc(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>), Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., ), Var(KSubs2_Director/pio_addr%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_addr, io_input=true})<<[KSubs2_Director/pio_space]||[KSubs2_Director/pio_addr]>>)

    nona   envlook uid=KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None
    nona   envlook tag=KES:KSubs2_Director/pio_space env_value=CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
origq2: l1b pre eval=Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., ) 
post eval reapplied=CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
WF:lower_indexed: CE_subsc 3: general array: uses general_subscription_lowerer for real work
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.6/aitem10 found d1
ct2idl CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>) ans= @/SINT
lower_indexed subsc: Made wondarray w=32 CE_region(@_SINT%@/SINT%0%None, CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>), )
lowed_indexed CE_subsc 3: scaler=4 for an array containing  valuetypes CTL_net(false, 32, Signed,[native])
O_subsv: get_e_cls: site=O_subsv sclass retrieve from A_leaf annotation regionf=false idl=KSubs2_Director/pio_space found d1
Netgen: Wt for Var(KSubs2_Director/pio_rdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_rdata, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>pio_rdata<
 NETGEN io=OUTPUT id=pio_rdata is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=pio_rdata[-2147483648..2147483647]:OUTPUT::Signed{init=0, io_output=true, username=pio_rdata}
evolve_scalar: nona: tag=KES:KSubs2_Director/pio_rdata := CE_conv(CTL_net(false, 32, Signed,[native]), CE_subsc(CT_arr(CTL_net(false, 32, Signed,[native]), 10), CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true}), Var(KSubs2_Director/pio_addr%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_addr, io_input=true})<<[KSubs2_Director/pio_space]||[KSubs2_Director/pio_addr]>>))
marking a diff (degenerate case) on 5
Constant Meet: 5-5-T-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/KSubs2_Director.dll:<no codepoint>callstring__=constant_fold_meets tid=T405 entry_point=1:SrcStack=
 --- ThreadStart_hostpioprocess10
 kcode0007: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
QX9: gt_step:KER_constant_meet:threadstart//T405/host_pio_process kcode0008: K_goto(UNCOND, KSubs2_Director/T405/host_pio_process/LL0)
(1): interpreter: jump to KSubs2_Director/T405/host_pio_process/LL0
marking a diff (degenerate case) on 7
Constant Meet: 7-8-F-nA=2:2: Change to constants out
T405: Constant_fold meet iteration 1
QX9: gt_step:KER_constant_meet:csharp/KSubs2_Director.dll:<no codepoint>callstring__=constant_fold_meets tid=T405 entry_point=1:SrcStack=
 --- ThreadStart_hostpioprocess10
 kcode0001: K_goto(ISZERO Var(KSubs2_Director/pio_hwen%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=pio_hwen, io_input=true}), KSubs2_Director/T405/host_pio_process/LL31)
(0): interpreter: save thunk: bne taken=!(pio_hwen)
Constant Meet: 1-1-F-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/KSubs2_Director.dll:<no codepoint>callstring__=constant_fold_meets tid=T405 entry_point=1:SrcStack=
 --- ThreadStart_hostpioprocess10
 kcode0002:   vsassign KSubs2_Director/pio_space[KSubs2_Director/pio_addr] := KSubs2_Director/pio_wdata
K_as_vassign: lhs=Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., )
    vassign subs=Var(KSubs2_Director/pio_addr%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_addr, io_input=true})
    vassign rhs=Var(KSubs2_Director/pio_wdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_wdata, io_input=true})
    vassign aid_b=[KSubs2_Director/pio_space]
    vassign aid_o=[KSubs2_Director/pio_addr]
    nona   envlook uid=KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None
    nona   envlook tag=KES:KSubs2_Director/pio_space env_value=CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
ct2idl CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>) ans= @/SINT
lower_lmode subsc wa: Made wondarray w=32 CE_region(@_SINT%@/SINT%0%None, CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>), )
new l1=CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.6/aitem10 found d1
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
evolve: vidx: idx was=O_subsv(KSubs2_Director/pio_space;KSubs2_Director/pio_addr;S64'400000;S64'4*pio_addr) vari=true
evolve: vidx: killed from env KES:SINT[O_subsv(KSubs2_Director/pio_space;KSubs2_Director/pio_addr;S64'400000;S64'4*pio_addr)] := CE_conv(CTL_net(false, 32, Signed,[native]), Var(KSubs2_Director/pio_wdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_wdata, io_input=true}))
O_subsv: get_e_cls: site=O_subsv sclass retrieve from A_leaf annotation regionf=false idl=KSubs2_Director/pio_space found d1
QX9: gt_step:KER_constant_meet:threadstart//T405/host_pio_process kcode0003: K_goto(UNCOND, KSubs2_Director/T405/host_pio_process/LL47)
(0): interpreter: jump to KSubs2_Director/T405/host_pio_process/LL47
Constant Meet: 2-3-F-nA=1:1: Change to constants out
QX9: gt_step:KER_constant_meet:csharp/KSubs2_Director.dll:<no codepoint>callstring__=constant_fold_meets tid=T405 entry_point=1:SrcStack=
 --- ThreadStart_hostpioprocess10
 kcode0005:   sassign KSubs2_Director/pio_rdata := CE_subsc(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>), Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., ), Var(KSubs2_Director/pio_addr%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_addr, io_input=true})<<[KSubs2_Director/pio_space]||[KSubs2_Director/pio_addr]>>)
K_as_sassign:  lhs=Var(KSubs2_Director/pio_rdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_rdata, io_output=true})
     sassign rhs=CE_subsc(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>), Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., ), Var(KSubs2_Director/pio_addr%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_addr, io_input=true})<<[KSubs2_Director/pio_space]||[KSubs2_Director/pio_addr]>>)

    nona   envlook uid=KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None
    nona   envlook tag=KES:KSubs2_Director/pio_space env_value=CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
origq2: l1b pre eval=Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., ) 
post eval reapplied=CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
WF:lower_indexed: CE_subsc 3: general array: uses general_subscription_lowerer for real work
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.6/aitem10 found d1
ct2idl CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>) ans= @/SINT
lower_indexed subsc: Made wondarray w=32 CE_region(@_SINT%@/SINT%0%None, CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>), )
lowed_indexed CE_subsc 3: scaler=4 for an array containing  valuetypes CTL_net(false, 32, Signed,[native])
O_subsv: get_e_cls: site=O_subsv sclass retrieve from A_leaf annotation regionf=false idl=KSubs2_Director/pio_space found d1
Netgen: Wt for Var(KSubs2_Director/pio_rdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_rdata, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>pio_rdata<
 NETGEN io=OUTPUT id=pio_rdata is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=pio_rdata[-2147483648..2147483647]:OUTPUT::Signed{init=0, io_output=true, username=pio_rdata}
evolve_scalar: nona: tag=KES:KSubs2_Director/pio_rdata := CE_conv(CTL_net(false, 32, Signed,[native]), CE_subsc(CT_arr(CTL_net(false, 32, Signed,[native]), 10), CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true}), Var(KSubs2_Director/pio_addr%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_addr, io_input=true})<<[KSubs2_Director/pio_space]||[KSubs2_Director/pio_addr]>>))
Constant Meet: 5-5-T-nA=1:1: Change to constants out
Constant Meet: 7-8-F-nA=2:2 No change to constants in
T405: Constant_fold meet iteration 2
Constant Meet: 1-1-F-nA=1:1 No change to constants in
Constant Meet: 2-3-F-nA=1:1 No change to constants in
Constant Meet: 5-5-T-nA=1:1 No change to constants in
Constant Meet: 7-8-F-nA=2:2 No change to constants in
WF:constant_fold_meets tid=T405 entry_point=1: constant_fold: finished iterate over basic blocks
WF:KiwiC-stages: tid=T405: End of constant folding
Ataken scan complete. 3 items.
Rendering basic block 0/4   1-1-F
WF:elab5_render T405: commence
WF:elab5_render T405: elab5_render T405: Block start. PCT405:1
emit at 2: label T405_1
elab5_render T405Start generate traj 1 .. 1
QX9: gt_step:KER_code_generation:csharp/KSubs2_Director.dll:<no codepoint>callstring__=elab5_render T405: Block start. PCT405:1:SrcStack=
 --- ThreadStart_hostpioprocess10
 kcode0001: K_goto(ISZERO Var(KSubs2_Director/pio_hwen%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=pio_hwen, io_input=true}), KSubs2_Director/T405/host_pio_process/LL31)
(0): interpreter: save thunk: bne taken=!(pio_hwen)
elab5_render T405conditional branch from 1 to 4
emit at 4: bne !(pio_hwen) T405_5
emit at 5: goto T405_2
Rendering basic block 1/4   2-3-F
WF:elab5_render T405: commence
WF:elab5_render T405: elab5_render T405: Block start. PCT405:2
emit at 6: label T405_2
elab5_render T405Start generate traj 2 .. 3
QX9: gt_step:KER_code_generation:csharp/KSubs2_Director.dll:<no codepoint>callstring__=elab5_render T405: Block start. PCT405:2:SrcStack=
 --- ThreadStart_hostpioprocess10
 kcode0002:   vsassign KSubs2_Director/pio_space[KSubs2_Director/pio_addr] := KSubs2_Director/pio_wdata
K_as_vassign: lhs=Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., )
    vassign subs=Var(KSubs2_Director/pio_addr%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_addr, io_input=true})
    vassign rhs=Var(KSubs2_Director/pio_wdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_wdata, io_input=true})
    vassign aid_b=[KSubs2_Director/pio_space]
    vassign aid_o=[KSubs2_Director/pio_addr]
    nona   envlook uid=KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None
    nona   envlook tag=KES:KSubs2_Director/pio_space env_value=CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
ct2idl CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>) ans= @/SINT
lower_lmode subsc wa: Made wondarray w=32 CE_region(@_SINT%@/SINT%0%None, CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>), )
new l1=CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.6/aitem10 found d1
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
evolve: vidx: idx was=O_subsv(KSubs2_Director/pio_space;KSubs2_Director/pio_addr;S64'400000;S64'4*pio_addr) vari=true
evolve: vidx: killed from env KES:SINT[O_subsv(KSubs2_Director/pio_space;KSubs2_Director/pio_addr;S64'400000;S64'4*pio_addr)] := CE_conv(CTL_net(false, 32, Signed,[native]), Var(KSubs2_Director/pio_wdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_wdata, io_input=true}))
O_subsv: get_e_cls: site=O_subsv sclass retrieve from A_leaf annotation regionf=false idl=KSubs2_Director/pio_space found d1
hpr emit at 8:@_SINT[{SC:d1,S64'400000}+{$offset,S64'4*pio_addr}] := C(pio_wdata);



QX9: gt_step:KER_code_generation:threadstart//T405/host_pio_process kcode0003: K_goto(UNCOND, KSubs2_Director/T405/host_pio_process/LL47)
(0): interpreter: jump to KSubs2_Director/T405/host_pio_process/LL47
elab5_render T405jump from 2 to 6
emit at 9: goto T405_7
Rendering basic block 2/4   5-5-T
WF:elab5_render T405: commence
WF:elab5_render T405: elab5_render T405: Block start. PCT405:5
emit at 10: label T405_5
elab5_render T405Start generate traj 5 .. 5
QX9: gt_step:KER_code_generation:csharp/KSubs2_Director.dll:<no codepoint>callstring__=elab5_render T405: Block start. PCT405:5:SrcStack=
 --- ThreadStart_hostpioprocess10
 kcode0005:   sassign KSubs2_Director/pio_rdata := CE_subsc(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>), Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., ), Var(KSubs2_Director/pio_addr%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_addr, io_input=true})<<[KSubs2_Director/pio_space]||[KSubs2_Director/pio_addr]>>)
K_as_sassign:  lhs=Var(KSubs2_Director/pio_rdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_rdata, io_output=true})
     sassign rhs=CE_subsc(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>), Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., ), Var(KSubs2_Director/pio_addr%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_addr, io_input=true})<<[KSubs2_Director/pio_space]||[KSubs2_Director/pio_addr]>>)

    nona   envlook uid=KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None
    nona   envlook tag=KES:KSubs2_Director/pio_space env_value=CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
origq2: l1b pre eval=Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., ) 
post eval reapplied=CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true})
WF:lower_indexed: CE_subsc 3: general array: uses general_subscription_lowerer for real work
lower1 region: get_e_cls: site=lower1 region sclass retrieve from A_leaf annotation regionf=true idl=CS/0.6/aitem10 found d1
ct2idl CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>) ans= @/SINT
lower_indexed subsc: Made wondarray w=32 CE_region(@_SINT%@/SINT%0%None, CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>), )
lowed_indexed CE_subsc 3: scaler=4 for an array containing  valuetypes CTL_net(false, 32, Signed,[native])
O_subsv: get_e_cls: site=O_subsv sclass retrieve from A_leaf annotation regionf=false idl=KSubs2_Director/pio_space found d1
Netgen: Wt for Var(KSubs2_Director/pio_rdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_rdata, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>pio_rdata<
 NETGEN io=OUTPUT id=pio_rdata is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=pio_rdata[-2147483648..2147483647]:OUTPUT::Signed{init=0, io_output=true, username=pio_rdata}
evolve_scalar: nona: tag=KES:KSubs2_Director/pio_rdata := CE_conv(CTL_net(false, 32, Signed,[native]), CE_subsc(CT_arr(CTL_net(false, 32, Signed,[native]), 10), CE_region(@_SINT%@/SINT%400000%40, CT_arr(CTL_net(false, 32, Signed,[native]), 10), {bytes=40, length=10, cid=SINT.@, marker=wondtoken, constant=true}), Var(KSubs2_Director/pio_addr%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_addr, io_input=true})<<[KSubs2_Director/pio_space]||[KSubs2_Director/pio_addr]>>))
hpr emit at 12:pio_rdata := C(@_SINT[{SC:d1,S64'400000}+{$offset,S64'4*pio_addr}]);



emit at 13: goto T405_7
Rendering basic block 3/4   7-8-F
WF:elab5_render T405: commence
WF:elab5_render T405: elab5_render T405: Block start. PCT405:7
emit at 14: label T405_7
elab5_render T405Start generate traj 7 .. 8
QX9: gt_step:KER_code_generation:csharp/KSubs2_Director.dll:<no codepoint>callstring__=elab5_render T405: Block start. PCT405:7:SrcStack=
 --- ThreadStart_hostpioprocess10
 kcode0007: K_easc(CE_apply(KiwiSystem/Kiwi/Pause=hpr_pause, ) EMIT)
hpr emit at 16:Xeasc *APPLY:hpr_pause(8);


QX9: gt_step:KER_code_generation:threadstart//T405/host_pio_process kcode0008: K_goto(UNCOND, KSubs2_Director/T405/host_pio_process/LL0)
(1): interpreter: jump to KSubs2_Director/T405/host_pio_process/LL0
elab5_render T405jump from 7 to 0
emit at 17: goto T405_1
hpr top/tail emit: 18:// End of DIC comment 1



hpr emit at 18:// End of DIC comment 1



WF:Assemble VM: KSubs2_Director_T405_host_pio_process: start
WF:reassemble_dic: start
WF:reassemble_dic: Reassembled 19 dic locations
redirect optimise 0/19
WF:Assemble VM: KSubs2_Director_T405_host_pio_process: finished 19 instructions. gc=
WF:main pass of thread used for host_pio_process: ending
WF:optimise_dic host_pio_process uid=hostpioprocess10: starting anal
WF:optimise_dic host_pio_process uid=hostpioprocess10: done anal
WF:optimise_dic host_pio_process uid=hostpioprocess10: starting kill (commenting out) of spare lines
WF:optimise_dic host_pio_process uid=hostpioprocess10: done kill of spare lines
WF:TSTART classwalk method user root:KSubs2_Director this=Var(ktop20%KSubs2_Director%-1000%None, CT_cr(KSubs2_Director, <<NONE>>), ..., {constant=true}): FINISHED COMPILE OF THREAD/EP
phase=P_final : Keep for root KSubs2_Director  host_pio_process was true
Netgen: Wt for Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=KSubs2_Director/pio_space is_string=false
 NETGEN L2662 ARR/NET n=1 io=LOCAL
lnetgen: netgen dt=&(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), use_integer=false, dims=<NONE>
netgen ans=KSubs2_Director/pio_space[31:0]:LOCAL::Signed{init=0}
Netgen: Wt for Var(KSubs2_Director/pio_size%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=KSubs2_Director/pio_size is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=KSubs2_Director/pio_size[-2147483648..2147483647]:LOCAL::Signed{init=0}
Netgen: Wt for Var(KSubs2_Director/pio_hwen%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=pio_hwen, io_input=true}) is false
 NETGEN att=false>io_input<>true<, >username<>pio_hwen<
 NETGEN io=INPUT id=pio_hwen is_string=false
 NETGEN NET io=INPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 1, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=pio_hwen:INPUT::Unsigned{init=0, io_input=true, username=pio_hwen}
Netgen: Wt for Var(KSubs2_Director/pio_rdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_rdata, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>pio_rdata<
 NETGEN io=OUTPUT id=pio_rdata is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=pio_rdata[-2147483648..2147483647]:OUTPUT::Signed{init=0, io_output=true, username=pio_rdata}
Netgen: Wt for Var(KSubs2_Director/pio_wdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_wdata, io_input=true}) is false
 NETGEN att=false>io_input<>true<, >username<>pio_wdata<
 NETGEN io=INPUT id=pio_wdata is_string=false
 NETGEN NET io=INPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=pio_wdata[-2147483648..2147483647]:INPUT::Signed{init=0, io_input=true, username=pio_wdata}
Netgen: Wt for Var(KSubs2_Director/pio_addr%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_addr, io_input=true}) is false
 NETGEN att=false>io_input<>true<, >username<>pio_addr<
 NETGEN io=INPUT id=pio_addr is_string=false
 NETGEN NET io=INPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=pio_addr[-2147483648..2147483647]:INPUT::Signed{init=0, io_input=true, username=pio_addr}
Netgen: Wt for Var(KSubs2_Director/design_serial_number%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=design_serial_number, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>design_serial_number<
 NETGEN io=OUTPUT id=design_serial_number is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=design_serial_number[-2147483648..2147483647]:OUTPUT::Signed{init=0, io_output=true, username=design_serial_number}
WF:KiwiC: Created VM2 machine : KSubs2Director10end
WF:root_classwalk MM_root start , Specificf=S_root_class target='KSubs2_Director'' items=10: End
root_compiler class done: KSubs2_Director
Root class elaborated: specificf=S_root_class leftover=0
WF:KiwiC: front end input processing of class or method called KSubs2_Director: done






Kiwic: CIL/.net ---conversion to HPR internal form complete---



Netlist generation : ktop10
Netgen: Wt for Var(ktop10%KiwiSystem/Kiwi%-1000%None, CT_cr(KiwiSystem/Kiwi, <<NONE>>), ..., {constant=true}) is false
 NETGEN att=false>constant<>true<
 NETGEN io=LOCAL id=ktop10 is_string=false
 NETGEN WOND/OBJ io=LOCAL
lnetgen: netgen dt=CT_cr(KiwiSystem/Kiwi, <<NONE>>), use_integer=false, dims=<NONE>
netgen ans=ktop10[31:0]:LOCAL::Unsigned{init=0, constant=true}


Netlist generation : KiwiSystem/Kiwi/old_pausemode_value
Netgen: Wt for Var(KiwiSystem/Kiwi/old_pausemode_value%KiwiSystem/Kiwi/PauseControl%-1000%None, valuetype:CT_cr(KiwiSystem/Kiwi/PauseControl, <<NONE>>), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=KiwiSystem/Kiwi/old_pausemode_value is_string=false
 NETGEN WOND/OBJ io=LOCAL
lnetgen: netgen dt=valuetype:CT_cr(KiwiSystem/Kiwi/PauseControl, <<NONE>>), use_integer=false, dims=<NONE>
netgen ans=KiwiSystem/Kiwi/old_pausemode_value[31:0]:LOCAL::Unsigned{init=0}


Netlist generation : KiwiSystem/Kiwi/tnow
Netgen: Wt for Var(KiwiSystem/Kiwi/tnow%64/US%-1000%None, CTL_net(false, 64, Unsigned,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=KiwiSystem/Kiwi/tnow is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 64, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=KiwiSystem/Kiwi/tnow[63:0]:LOCAL::Unsigned{init=0}


Netlist generation : ktop12
Netgen: Wt for Var(ktop12%System/BitConverter%-1000%None, CT_cr(System/BitConverter, <<NONE>>), ..., {constant=true}) is false
 NETGEN att=false>constant<>true<
 NETGEN io=LOCAL id=ktop12 is_string=false
 NETGEN WOND/OBJ io=LOCAL
lnetgen: netgen dt=CT_cr(System/BitConverter, <<NONE>>), use_integer=false, dims=<NONE>
netgen ans=ktop12[31:0]:LOCAL::Unsigned{init=0, constant=true}


Netlist generation : System/BitConverter/IsLittleEndian
Netgen: Wt for Var(System/BitConverter/IsLittleEndian%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=System/BitConverter/IsLittleEndian is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 1, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=System/BitConverter/IsLittleEndian:LOCAL::Unsigned{init=0}


Netlist generation : ktop14
Netgen: Wt for Var(ktop14%KSubs2_Director%-1000%None, CT_cr(KSubs2_Director, <<NONE>>), ..., {constant=true}) is false
 NETGEN att=false>constant<>true<
 NETGEN io=LOCAL id=ktop14 is_string=false
 NETGEN WOND/OBJ io=LOCAL
lnetgen: netgen dt=CT_cr(KSubs2_Director, <<NONE>>), use_integer=false, dims=<NONE>
netgen ans=ktop14[31:0]:LOCAL::Unsigned{init=0, constant=true}


Netlist generation : KSubs2_Director/design_serial_number
Netgen: Wt for Var(KSubs2_Director/design_serial_number%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=design_serial_number, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>design_serial_number<
 NETGEN io=OUTPUT id=design_serial_number is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=design_serial_number[-2147483648..2147483647]:OUTPUT::Signed{init=0, io_output=true, username=design_serial_number}


Netlist generation : KSubs2_Director/pio_rdata
Netgen: Wt for Var(KSubs2_Director/pio_rdata%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {username=pio_rdata, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>pio_rdata<
 NETGEN io=OUTPUT id=pio_rdata is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=pio_rdata[-2147483648..2147483647]:OUTPUT::Signed{init=0, io_output=true, username=pio_rdata}


Netlist generation : KSubs2_Director/pio_space
Netgen: Wt for Var(KSubs2_Director/pio_space%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=KSubs2_Director/pio_space is_string=false
 NETGEN L2662 ARR/NET n=1 io=LOCAL
lnetgen: netgen dt=&(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), use_integer=false, dims=<NONE>
netgen ans=KSubs2_Director/pio_space[31:0]:LOCAL::Signed{init=0}


Netlist generation : CS/0.6/refxxarray10
Netgen: Wt for Var(CS/0.6/refxxarray10%$star1$/@/SINT%-1000%None, &(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=CS/0.6/refxxarray10 is_string=false
 NETGEN L2662 ARR/NET n=1 io=LOCAL
lnetgen: netgen dt=&(CT_arr(CTL_net(false, 32, Signed,[native]), <unspec>)), use_integer=false, dims=<NONE>
netgen ans=CS/0.6/refxxarray10[31:0]:LOCAL::Signed{init=0}


Netlist generation : ktop16
Netgen: Wt for Var(ktop16%primesya%-1000%None, CT_cr(primesya, <<NONE>>), ..., {constant=true}) is false
 NETGEN att=false>constant<>true<
 NETGEN io=LOCAL id=ktop16 is_string=false
 NETGEN WOND/OBJ io=LOCAL
lnetgen: netgen dt=CT_cr(primesya, <<NONE>>), use_integer=false, dims=<NONE>
netgen ans=ktop16[31:0]:LOCAL::Unsigned{init=0, constant=true}


Netlist generation : primesya/limit
Netgen: Wt for Var(primesya/limit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/limit is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/limit[-2147483648..2147483647]:LOCAL::Signed{init=0}


Netlist generation : primesya/PA
Netgen: Wt for Var(primesya/PA%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/PA is_string=false
 NETGEN L2662 ARR/NET n=1 io=LOCAL
lnetgen: netgen dt=&(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), use_integer=false, dims=<NONE>
netgen ans=primesya/PA:LOCAL::Unsigned{init=0}


Netlist generation : primesya/count


Netlist generation : primesya/count1
Netgen: Wt for Var(primesya/count1%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/count1 is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/count1[-2147483648..2147483647]:LOCAL::Signed{init=0}


Netlist generation : primesya/elimit
Netgen: Wt for Var(primesya/elimit%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=elimit, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>elimit<, >HwWidth<>32<
 NETGEN io=OUTPUT id=elimit is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=false, dims=<NONE>
netgen ans=elimit[31:0]:OUTPUT::Signed{init=0, io_output=true, username=elimit, HwWidth=32}


Netlist generation : primesya/evariant_output
Netgen: Wt for Var(primesya/evariant_output%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=evariant, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>evariant<, >HwWidth<>32<
 NETGEN io=OUTPUT id=evariant is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=false, dims=<NONE>
netgen ans=evariant[31:0]:OUTPUT::Signed{init=0, io_output=true, username=evariant, HwWidth=32}


Netlist generation : primesya/edesign
Netgen: Wt for Var(primesya/edesign%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., {HwWidth=32, username=edesign, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>edesign<, >HwWidth<>32<
 NETGEN io=OUTPUT id=edesign is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=false, dims=<NONE>
netgen ans=edesign[31:0]:OUTPUT::Signed{init=0, io_output=true, username=edesign, HwWidth=32}


Netlist generation : primesya/finished
Netgen: Wt for Var(primesya/finished%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., {username=finished, io_output=true}) is false
 NETGEN att=true>io_output<>true<, >username<>finished<
 NETGEN io=OUTPUT id=finished is_string=false
 NETGEN NET io=OUTPUT constantp=false
lnetgen: netgen dt=CTL_net(false, 1, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=finished:OUTPUT::Unsigned{init=0, io_output=true, username=finished}


Netlist generation : CS/0.4/refxxarray12
Netgen: Wt for Var(CS/0.4/refxxarray12%$star1$/@/BOOL%-1000%None, &(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=CS/0.4/refxxarray12 is_string=false
 NETGEN L2662 ARR/NET n=1 io=LOCAL
lnetgen: netgen dt=&(CT_arr(CTL_net(false, 1, Unsigned,[native]), <unspec>)), use_integer=false, dims=<NONE>
netgen ans=CS/0.4/refxxarray12:LOCAL::Unsigned{init=0}


Netlist generation : ktop18
Netgen: Wt for Var(ktop18%primesya%-1000%None, CT_cr(primesya, <<NONE>>), ..., {constant=true}) is false
 NETGEN att=false>constant<>true<
 NETGEN io=LOCAL id=ktop18 is_string=false
 NETGEN WOND/OBJ io=LOCAL
lnetgen: netgen dt=CT_cr(primesya, <<NONE>>), use_integer=false, dims=<NONE>
netgen ans=ktop18[31:0]:LOCAL::Unsigned{init=0, constant=true}


Netlist generation : primesya/vol


Netlist generation : primesya/evariant_master
Netgen: Wt for Var(primesya/evariant_master%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/evariant_master is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=primesya/evariant_master[-2147483648..2147483647]:LOCAL::Signed{init=0}


Netlist generation : primesya/T404/Main/T404/Main/V_4/GP


Netlist generation : primesya/T404/Main/T404/Main/V_2/GP


Netlist generation : primesya/T404/Main/T404/Main/V_0
Netgen: Wt for Var(primesya/T404/Main/T404/Main/V_0%BOOL%-1000%None, CTL_net(false, 1, Unsigned,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=primesya/T404/Main/T404/Main/V_0 is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 1, Unsigned,[native]), use_integer=false, dims=<NONE>
netgen ans=primesya/T404/Main/T404/Main/V_0:LOCAL::Unsigned{init=0}


Netlist generation : ktop20
Netgen: Wt for Var(ktop20%KSubs2_Director%-1000%None, CT_cr(KSubs2_Director, <<NONE>>), ..., {constant=true}) is false
 NETGEN att=false>constant<>true<
 NETGEN io=LOCAL id=ktop20 is_string=false
 NETGEN WOND/OBJ io=LOCAL
lnetgen: netgen dt=CT_cr(KSubs2_Director, <<NONE>>), use_integer=false, dims=<NONE>
netgen ans=ktop20[31:0]:LOCAL::Unsigned{init=0, constant=true}


Netlist generation : KSubs2_Director/pio_addr


Netlist generation : KSubs2_Director/pio_wdata


Netlist generation : KSubs2_Director/pio_hwen


Netlist generation : KSubs2_Director/pio_size
Netgen: Wt for Var(KSubs2_Director/pio_size%SINT%-1000%None, CTL_net(false, 32, Signed,[native]), ..., ) is false
 NETGEN att=false<NONE>
 NETGEN io=LOCAL id=KSubs2_Director/pio_size is_string=false
 NETGEN NET io=LOCAL constantp=false
lnetgen: netgen dt=CTL_net(false, 32, Signed,[native]), use_integer=true, dims=<NONE>
netgen ans=KSubs2_Director/pio_size[-2147483648..2147483647]:LOCAL::Signed{init=0}
Report on class names changed (redirects): none exist.
ct2idl CTL_net(false, 1, Unsigned,[native]) ans= BOOL
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
ct2idl CTL_net(false, 32, Signed,[native]) ans= SINT
Report on KiwiC top-level machine netlist
  ktop20[31:0]:LOCAL::Unsigned{init=0, constant=true}
  primesya/T404/Main/T404/Main/V_0:LOCAL::Unsigned{init=0}
  primesya/T404/Main/T404/Main/V_2_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
  primesya/T404/Main/T404/Main/V_4_GP[-2147483648..2147483647]:LOCAL::Signed{init=0, shared_gp=true}
  ktop18[31:0]:LOCAL::Unsigned{init=0, constant=true}
  CS/0.4/refxxarray12:LOCAL::Unsigned{init=0}
  ktop16[31:0]:LOCAL::Unsigned{init=0, constant=true}
  CS/0.6/refxxarray10[31:0]:LOCAL::Signed{init=0}
  ktop14[31:0]:LOCAL::Unsigned{init=0, constant=true}
  System/BitConverter/IsLittleEndian:LOCAL::Unsigned{init=0}
  ktop12[31:0]:LOCAL::Unsigned{init=0, constant=true}
  KiwiSystem/Kiwi/tnow[63:0]:LOCAL::Unsigned{init=0}
  KiwiSystem/Kiwi/old_pausemode_value[31:0]:LOCAL::Unsigned{init=0}
  ktop10[31:0]:LOCAL::Unsigned{init=0, constant=true}
End report on KiwiC top-level machine netlist (14 items)

Start of aux report KiwiC-fe.rpt
KiwiC: front end input processing of class or method called KiwiSystem/Kiwi
root_walk start thread at a static method (used as an entry point). Method name=.cctor uid=cctor10
KiwiC start_thread (or entry point) id=cctor10
Root method elaborated: specificf=S_kickoff_collate leftover=1+0
KiwiC: front end input processing of class or method called System/BitConverter
root_walk start thread at a static method (used as an entry point). Method name=.cctor uid=cctor12
KiwiC start_thread (or entry point) id=cctor12
Root method elaborated: specificf=S_kickoff_collate leftover=1+1
KiwiC: front end input processing of class or method called KSubs2_Director
root_walk start thread at a static method (used as an entry point). Method name=.cctor uid=cctor14
KiwiC start_thread (or entry point) id=cctor14
Root method elaborated: specificf=S_kickoff_collate leftover=1+2
KiwiC: front end input processing of class or method called primesya
root_walk start thread at a static method (used as an entry point). Method name=.cctor uid=cctor16
KiwiC start_thread (or entry point) id=cctor16
Root method elaborated: specificf=S_kickoff_collate leftover=1+3
KiwiC: front end input processing of class or method called primesya
root_compiler: start elaborating class 'primesya'
elaborating class 'primesya'
compiling static method as entry point: style=Root idl=primesya/Main
Performing root elaboration of method Main
KiwiC start_thread (or entry point) id=Main10
Register sharing: general primesya/T404/Main/T404/Main/V_4/GP used for primesya/T404/Main/T404/Main/V_4
Register sharing: general primesya/T404/Main/T404/Main/V_4/GP used for primesya/T404/Main/T404/Main/V_3
Register sharing: general primesya/T404/Main/T404/Main/V_2/GP used for primesya/T404/Main/T404/Main/V_2
Register sharing: general primesya/T404/Main/T404/Main/V_2/GP used for primesya/T404/Main/T404/Main/V_1
root_compiler class done: primesya
KiwiC: front end input processing of class or method called KSubs2_Director
root_compiler: start elaborating class 'KSubs2_Director'
elaborating class 'KSubs2_Director'
compiling static method as entry point: style=Root idl=KSubs2_Director/host_pio_process
Performing root elaboration of method host_pio_process
KiwiC start_thread (or entry point) id=hostpioprocess10
root_compiler class done: KSubs2_Director
Report of all settings used from the recipe or command line:
   cil-uwind-budget=10000
   kiwic-finish=disable
   kiwic-cil-dump=disable
   kiwic-kcode-dump=disable
   kiwic-register-colours=1
   array-4d-name=KIWIARRAY4D
   array-3d-name=KIWIARRAY3D
   array-2d-name=KIWIARRAY2D
   kiwi-dll=Kiwi.dll
   kiwic-dll=Kiwic.dll
   kiwic-zerolength-arrays=disable
   kiwic-fpgaconsole-default=enable
   postgen-optimise=enable
   kiwife-loglevel=20
   ataken-loglevel=20
   gtrace-loglevel=20
   firstpass-loglevel=20
   overloads-loglevel=20
   root=$attributeroot
   ?>?=srcfile, csharp/primes_offchip.exe, csharp/KSubs2_Director.dll
   kiwic-autodispose=disable
END OF KIWIC REPORT FILE
End of aux report KiwiC-fe.rpt
readfun back lastroot=KSubs2_Director
Timestamp: (.end.).   T/S  10/02/2017 17:08:03 finished kiwife
Writing report 'report' shorter-mode=false
Opening log file  obj/h02_kiwife/report-full
WF:Writing vmreport of KSubs2_Director: start
WF:Writing vmreport of KSubs2_Director: complete
Profile report: queries=0, 0, 0
myastats= ru=29/al=129
Finished path cmd
Starting path cmd
End of this log file. Log continues in file where tag=repack: End of log
